{"version":3,"sources":["components/randomSentence/make/BoxMakeSentence.tsx","components/randomSentence/make/ListMakeSentence.tsx","components/randomSentence/make/InputMakeSentence.tsx","components/randomSentence/make/MakeSentence.tsx","components/randomSentence/shuffle/BoxShuffleSentence.tsx","components/randomSentence/shuffle/ShuffleCountDown.tsx","components/randomSentence/settingsDialog/SettingsButtonShuffle.tsx","utils/function.tsx","components/randomSentence/shuffle/ShuffleSentence.tsx","components/randomSentence/settingsDialog/SettingsButton.tsx","components/HomePage/HomePageLinkButton.tsx","components/Custom/CustomSwitch.tsx","components/randomSentence/settingsDialog/SettingsContent.tsx","components/randomSentence/settingsDialog/SettingsDialog.tsx","page/RandomSentence.tsx","components/HomePage/CustomCardHomePage.tsx","utils/constante.ts","page/HomePage.tsx","components/Custom/CustomTextField.tsx","components/baseCalculator/InputBaseCalcul.tsx","components/baseCalculator/Calculator.tsx","components/baseCalculator/ButtonReset.tsx","components/baseCalculator/SettingsDialog.tsx","page/BaseCalculator.tsx","components/github/CommitBox.tsx","components/github/Skeleton/CommitSkeleton.tsx","components/github/CommitGitHub.tsx","components/github/CardGitHubRepos.tsx","components/github/GitHubAuthorInformation.tsx","components/github/Skeleton/GitHubAuthorSkeleton.tsx","components/github/GitHubAuthor.tsx","components/github/Skeleton/CardGitHubSkeleton.tsx","page/GitHubPages.tsx","components/App/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BoxMakeSentence","index","children","onDelete","useState","isHover","setHover","theme","useTheme","toggleHover","state","Box","position","onMouseEnter","onMouseLeave","onClick","m","p","borderRadius","border","color","palette","primary","main","borderColor","fontSize","pr","right","top","Fade","in","ListMakeSentence","wordList","toggleDeleteWord","minHeight","className","display","flexWrap","justifyContent","TransitionGroup","map","value","CSSTransition","timeout","classNames","InputMakeSentence","onKeyUp","inputValue","onChange","classes","alignItems","mb","width","InputBase","event","inputBase","fullWidth","placeholder","Button","button","useStyles","makeStyles","transition","borderBottom","height","boxWord","minWidth","buttonRandom","buttonReset","marginLeft","MakeSentence","addWord","removeWord","toggleAdding","toggleClean","sentence","setSentence","errorMessage","setErrorMessage","toggleNewWord","length","removeErrorMessage","i","setTimeout","left","Alert","severity","target","key","variant","first","fontWeigth","other","dark","fontWeight","BoxShuffleSentence","ml","mt","ShuffleCountDown","onFinish","timerTime","countDown","setCountDown","useEffect","bgcolor","Typography","iconButton","SettingsButtonShuffle","toggleRandomWord","ButtonGroup","IconButton","size","shuffleList","list","max","listCopy","listResult","number","Math","floor","random","push","splice","boxShuffle","backgroundColor","divider","ShuffleSentence","isCountDown","isOneSentence","isCountdown","setIsCountdown","listSentence","setListSentence","SettingsButton","HomePageLinkButton","zIndex","to","Fab","CustomSwitch","withStyles","createStyles","root","padding","margin","spacing","switchBase","secondary","transform","light","opacity","boxShadow","thumb","marginTop","track","transitions","create","props","Switch","focusVisibleClassName","focusVisible","disableRipple","checked","textField","paddingRight","textAlign","background","text","SettingsContent","typeSettings","cSwitch","customClasses","DialogContent","inputProps","SettingsDialog","open","onClose","settings","Dialog","DialogTitle","String","DialogActions","title","breakpoints","down","mainBox","paper","RandomSentence","setWordList","isAdding","setAdding","setSettings","openSettings","setOpenSettings","handleSettings","maxWidth","param","paramNumber","isNaN","Number","xs","sm","md","align","link","textDecoration","CustomCardHomePage","image","body","maxHeight","Card","CardActionArea","CardMedia","component","CardContent","noWrap","EnumRootDataBase","GITHUB_KEY","WEBSITE_NAME","prod","cardHomePage","HomePage","Grid","container","justify","item","useStylesReddit","paddingLeft","overflow","fade","focused","CustomTextField","TextField","InputProps","disableUnderline","Base","useStylesInput","input","marginBottom","helperText","error","InputBaseCalcul","base","InputLabel","ButtonReset","flexDirection","Calculator","base2","setBase2","base10","setBase10","base8","setBase8","base16","setBase16","baseN","displayErrorMessage","baseValue","binaryConvertor","isValide","stringNumberArray","split","isBinary","parseInt","bin","toString","toUpperCase","bin_to_hexa","bin_to_oct","decimalConvertor","dec","dec_to_bin","dec_to_hexa","dec_to_oct","hexadecimalConvertor","hexa","array","notBinaryLetter","y","toLowerCase","isHexadecimal","hexa_to_dec","hexa_to_oct","octalConvertor","oct","arrayOct","isOctal","oct_to_dec","oct_to_hexa","displayBase2","displayBase8","displayBase10","displayBase16","BaseCalculator","prevState","CommitBox","htmlUrl","setHtmlUrl","Headers","set","btoa","GITHUB_NAME","fetch","url","method","then","reponse","status","console","warn","json","html_url","Link","href","commit","message","CommitSkeleton","Skeleton","paddingBottom","CommitGitHub","apiCommit","isLoad","setLoad","fiveCommits","fiveFirstCommit","card","CardGitHubRepos","api","setApiCommit","commitsURL","commits_url","replace","commits","fetchApiCommit","name","created_at","GitHubAuthorInformation","label","skeletonRect","skeletonText","skeletonTextWhite","GitHubAuthorSkeleton","mr","GitHubAuthor","author","setAuthor","loading","setLoading","owner","finally","src","avatar_url","alt","login","company","location","followers","following","skeletonBox","CardGitHubSkeleton","GitHubPages","apiRepos","setApi","data","box","Footer","bottom","createMuiTheme","type","contrastText","default","typography","subtitle1","fontStyle","fontFamily","join","overrides","MuiButton","App","ThemeProvider","CssBaseline","pb","basename","process","path","responsiveFontSizes","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e464ec3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Box, useTheme, Fade } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\ntype TypeListWordBox = {\n  children: string;\n  index: number;\n  onDelete: Function;\n};\nexport default function BoxMakeSentence({ index, children, onDelete }: TypeListWordBox) {\n  const [isHover, setHover] = useState<boolean>(false);\n  const theme = useTheme();\n\n  const toggleHover = (state: boolean) => {\n    setHover(state);\n  };\n\n  return (\n    <Box\n      position=\"relative\"\n      onMouseEnter={() => toggleHover(true)}\n      onMouseLeave={() => toggleHover(false)}\n      onClick={() => onDelete(index)}\n      m={1}\n      p={0.5}\n      borderRadius={2}\n      border={1}\n      color={theme.palette.primary.main}\n      borderColor={theme.palette.primary.main}\n      fontSize=\"body1.fontSize\"\n      pr={2.2}\n    >\n      {children}\n      <Box position=\"absolute\" right={-2} top={4.5}>\n        <Fade in={isHover}>\n          <CloseIcon fontSize=\"small\" />\n        </Fade>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport BoxMakeSentence from \"./BoxMakeSentence\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\ntype TypeListMakeSentence = {\n  wordList: Array<string>;\n  toggleDeleteWord: Function;\n};\nexport default function ListMakeSentence({ wordList, toggleDeleteWord }: TypeListMakeSentence) {\n  return (\n    <Box minHeight={100} className=\"testLol\">\n      <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\">\n        <TransitionGroup className=\"listMakeSentence\">\n          {wordList.map((value, index) => (\n            <CSSTransition key={value} timeout={500} classNames=\"item\">\n              <BoxMakeSentence onDelete={toggleDeleteWord} index={index} key={index}>\n                {value}\n              </BoxMakeSentence>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, InputBase, Button } from \"@material-ui/core\";\n\ntype TypeInputMakeSentence = {\n  onKeyUp: Function;\n  inputValue: string;\n  onChange: Function;\n  onClick: Function;\n  classes: Record<\"inputBase\" | \"button\", string>;\n};\n\nexport default function InputMakeSentence({\n  onKeyUp,\n  inputValue,\n  onChange,\n  onClick,\n  classes\n}: TypeInputMakeSentence) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" mb={2}>\n      <Box width=\"100%\">\n        <InputBase\n          onKeyUp={event => onKeyUp(event)}\n          color=\"primary\"\n          className={classes.inputBase}\n          fullWidth\n          value={inputValue}\n          onChange={event => onChange(event)}\n          placeholder=\"sentence...\"\n        />\n      </Box>\n      <Button onClick={() => onClick()} className={classes.button} color=\"primary\">\n        Add\n      </Button>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Button, makeStyles, Fade, Theme } from \"@material-ui/core\";\nimport ListMakeSentence from \"./ListMakeSentence\";\nimport { Alert } from \"@material-ui/lab\";\nimport InputMakeSentence from \"./InputMakeSentence\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  inputBase: {\n    fontSize: 20,\n    transition: \"all .5\",\n    borderBottom: \"1px solid \" + theme.palette.primary.main,\n    \"&:action\": {\n      borderBottom: \"1px solid red\"\n    }\n  },\n  button: {\n    height: 40\n  },\n  boxWord: {\n    minWidth: 300\n  },\n  buttonRandom: {\n    width: \"78%\"\n  },\n  buttonReset: {\n    marginLeft: \"2px\",\n    width: \"20%\"\n  }\n}));\n\ntype TypeAddWord = {\n  wordList: Array<string>;\n  addWord: Function;\n  removeWord: Function;\n  toggleAdding: Function;\n  toggleClean: Function;\n};\n\nexport default function MakeSentence({\n  wordList,\n  addWord,\n  removeWord,\n  toggleAdding,\n  toggleClean\n}: TypeAddWord) {\n  const classes = useStyles();\n  const [sentence, setSentence] = useState<string>(\"\");\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n  const toggleChange = (event: any) => {\n    setSentence(event.target.value);\n  };\n\n  const toggleNewWord = () => {\n    if (sentence.length < 1 || sentence.length > 100) {\n      setErrorMessage(\"The sentence need to be between 1 and 100 caractères. \");\n      removeErrorMessage();\n      return;\n    }\n    for (let i = 0; i < wordList.length; i++) {\n      if (sentence === wordList[i]) {\n        setErrorMessage(\"This sentence aldery exist. \");\n        removeErrorMessage();\n        return;\n      }\n    }\n    addWord(sentence);\n    setSentence(\"\");\n  };\n\n  const removeErrorMessage = () => {\n    setTimeout(() => {\n      setErrorMessage(\"\");\n    }, 5000);\n  };\n\n  const toggleKeyEnter = (event: any) => {\n    const key = event.key;\n    if (key === \"Enter\") {\n      toggleNewWord();\n    }\n  };\n\n  return (\n    <Box>\n      <ListMakeSentence wordList={wordList} toggleDeleteWord={removeWord} />\n\n      <Box position=\"absolute\" top={10} left={30}>\n        <Fade in={errorMessage.length > 1}>\n          <Alert severity=\"error\">{errorMessage}</Alert>\n        </Fade>\n      </Box>\n\n      <InputMakeSentence\n        onChange={toggleChange}\n        onKeyUp={toggleKeyEnter}\n        onClick={toggleNewWord}\n        classes={classes}\n        inputValue={sentence}\n      />\n\n      <Button\n        className={classes.buttonRandom}\n        color=\"primary\"\n        onClick={() => toggleAdding()}\n        variant=\"outlined\"\n      >\n        Ramdomizzz\n      </Button>\n      <Button onClick={() => toggleClean()} color=\"secondary\" className={classes.buttonReset}>\n        Clean\n      </Button>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, makeStyles, Theme } from \"@material-ui/core\";\ntype TypeListWordBoxRandomiz = {\n  children: string;\n  index: number;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  first: {\n    color: theme.palette.primary.main,\n    fontWeigth: \"bold\"\n  },\n  other: {\n    color: theme.palette.primary.dark,\n    fontWeight: \"normal\"\n  }\n}));\n\nexport default function BoxShuffleSentence({ children, index }: TypeListWordBoxRandomiz) {\n  const classes = useStyles();\n  return (\n    <Box\n      fontSize=\"h5.fontSize\"\n      ml={1}\n      mt={0.5}\n      className={index === 0 ? classes.first : classes.other}\n    >\n      {index + 1}. {children}\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\ntype TypeCountDown = {\n  onFinish: Function;\n  timerTime: number;\n};\n\nexport default function ShuffleCountDown({ onFinish, timerTime }: TypeCountDown) {\n  const [countDown, setCountDown] = useState<number>(timerTime);\n  const startCountDown = () => {\n    setTimeout(() => {\n      setCountDown(countDown - 1);\n    }, 1000);\n  };\n  useEffect(() => {\n    startCountDown();\n  });\n\n  if (countDown === 0) {\n    onFinish();\n  }\n\n  return (\n    <Box bgcolor=\"dark\" color=\"white\" justifyContent=\"center\" p={2} display=\"flex\">\n      <Typography variant=\"h3\">{countDown}</Typography>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { ButtonGroup, Button, IconButton, makeStyles } from \"@material-ui/core\";\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\n\nconst useStyles = makeStyles(theme => ({\n  iconButton: {\n    border: \"1px solid \" + theme.palette.primary.dark\n  }\n}));\ntype TypeSettingsButtonShuffle = {\n  toggleRandomWord: Function;\n  toggleAdding: Function;\n};\nexport default function SettingsButtonShuffle({\n  toggleRandomWord,\n  toggleAdding\n}: TypeSettingsButtonShuffle) {\n  const classes = useStyles();\n  return (\n    <ButtonGroup fullWidth>\n      <Button color=\"primary\" variant=\"outlined\" onClick={() => toggleRandomWord()}>\n        Random\n      </Button>\n      <IconButton\n        className={classes.iconButton}\n        color=\"primary\"\n        onClick={() => toggleAdding()}\n        size=\"small\"\n      >\n        <KeyboardBackspaceIcon />\n      </IconButton>\n    </ButtonGroup>\n  );\n}\n","//Generate a random number\nexport function randomNumber(max: number) {\n  return Math.floor(Math.random() * max);\n}\n//Shuffle a list\nexport function shuffleList(list: Array<string>) {\n  const listCopy: Array<string> = [...list];\n  const listResult: Array<string> = [];\n  for (let i = 0; i < list.length; i++) {\n    const number = randomNumber(listCopy.length);\n    listResult.push(listCopy[number]);\n    listCopy.splice(number, 1);\n  }\n  return listResult;\n}\n\n//Binary to decimal\nexport function bin_to_dec(bin: string) {\n  return parseInt(bin, 2);\n}\n\nexport function bin_to_hexa(bin: string) {\n  return parseInt(bin, 2)\n    .toString(16)\n    .toUpperCase();\n}\n\nexport function bin_to_oct(bin: string) {\n  return parseInt(bin, 2).toString(8);\n}\n\nexport function isBinary(number: string) {\n  let isValide: boolean = true;\n\n  if (number.length === 0) {\n    return false;\n  }\n\n  const stringNumberArray: Array<String> = number.split(\"\");\n\n  for (let i = 0; i < stringNumberArray.length; i++) {\n    if (stringNumberArray[i] !== \"1\" && stringNumberArray[i] !== \"0\") {\n      isValide = false;\n    }\n  }\n\n  return isValide;\n}\n\nexport function dec_to_bin(dec: string) {\n  return (Number(dec) - 0).toString(2);\n}\n\nexport function dec_to_hexa(dec: string) {\n  return (Number(dec) - 0).toString(16).toUpperCase();\n}\n\nexport function dec_to_oct(dec: string) {\n  return (Number(dec) - 0).toString(8);\n}\n\nexport function isDecimal(dec: string) {\n  if (isNaN(Number(dec))) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nexport function isHexadecimal(hexa: string) {\n  if (hexa === \"0\" || hexa === \"\") {\n    return false;\n  }\n  const array = hexa.split(\"\");\n  const notBinaryLetter = [\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"'\",\n    '\"'\n  ];\n\n  for (let i = 0; i < array.length; i++) {\n    for (let y = 0; y < notBinaryLetter.length; y++) {\n      if (array[i].toLowerCase() === notBinaryLetter[y]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nexport function hexa_to_dec(hexa: string) {\n  return parseInt(hexa, 16);\n}\nexport function hexa_to_bin(hexa: string) {\n  return parseInt(hexa, 16).toString(2);\n}\nexport function hexa_to_oct(hexa: string) {\n  return parseInt(hexa, 16).toString(8);\n}\n\nexport function isOctal(oct: string) {\n  if (oct === \"0\" || oct === \"\") {\n    return false;\n  }\n  const arrayOct: Array<string> = oct.split(\"\");\n\n  for (let i = 0; i < arrayOct.length; i++) {\n    if (arrayOct[i] === \"9\" || arrayOct[i] === \"8\") {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function oct_to_dec(oct: string) {\n  return parseInt(oct, 8);\n}\nexport function oct_to_hexa(oct: string) {\n  return parseInt(oct, 8)\n    .toString(16)\n    .toUpperCase();\n}\nexport function oct_to_bin(oct: string) {\n  return parseInt(oct, 8).toString(2);\n}\n","import React, { useState } from \"react\";\nimport { Box, makeStyles, Theme } from \"@material-ui/core\";\nimport BoxShuffleSentence from \"./BoxShuffleSentence\";\nimport CountDown from \"./ShuffleCountDown\";\nimport SettingsButtonShuffle from \"../settingsDialog/SettingsButtonShuffle\";\nimport { shuffleList } from \"../../../utils/function\";\n\ntype TypeListRandomWord = {\n  wordList: Array<string>;\n  toggleAdding: Function;\n  isCountDown: boolean;\n  isOneSentence: boolean;\n  timerTime: number;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  boxShuffle: {\n    backgroundColor: theme.palette.divider\n  }\n}));\n\nexport default function ShuffleSentence({\n  wordList,\n  toggleAdding,\n  isCountDown,\n  isOneSentence,\n  timerTime\n}: TypeListRandomWord) {\n  const [isCountdown, setIsCountdown] = useState<boolean>(isCountDown);\n  const [listSentence, setListSentence] = useState<Array<string>>(shuffleList(wordList));\n\n  const classes = useStyles();\n\n  const toggleRandomWord = () => {\n    setListSentence(shuffleList(wordList));\n  };\n\n  const toggleCountDown = () => {\n    setIsCountdown(!isCountdown);\n  };\n\n  return (\n    <Box>\n      <Box p={1} m={1} className={classes.boxShuffle} borderRadius={3}>\n        {isCountdown ? (\n          <CountDown onFinish={toggleCountDown} timerTime={timerTime} />\n        ) : isOneSentence ? (\n          <BoxShuffleSentence index={0}>{listSentence[0]}</BoxShuffleSentence>\n        ) : (\n          listSentence.map((value, index) => (\n            <BoxShuffleSentence index={index} key={index}>\n              {value}\n            </BoxShuffleSentence>\n          ))\n        )}\n      </Box>\n      <Box m={1}>\n        <SettingsButtonShuffle\n          toggleRandomWord={toggleRandomWord}\n          toggleAdding={() => toggleAdding()}\n        />\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, makeStyles, IconButton } from \"@material-ui/core\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nconst useStyles = makeStyles({\n  button: {\n    width: 42,\n    height: 42\n  }\n});\n\nexport type TypeSettingsButton = {\n  onClick: Function;\n};\n\nexport default function SettingsButton({ onClick }: TypeSettingsButton) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box position=\"absolute\" top={10} right={10}>\n        <IconButton className={classes.button} color=\"secondary\" onClick={() => onClick()}>\n          <SettingsIcon className=\"buttonSafari\" color=\"secondary\" />\n        </IconButton>\n      </Box>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Box, Fab } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nexport default function HomePageLinkButton() {\n  return (\n    <Box position=\"absolute\" top={10} left={10} zIndex={5000}>\n      <Link to=\"/\">\n        <Fab color=\"primary\" variant=\"round\" size=\"small\">\n          <HomeIcon />\n        </Fab>\n      </Link>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { withStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Switch, { SwitchClassKey, SwitchProps } from \"@material-ui/core/Switch\";\n\ninterface Styles extends Partial<Record<SwitchClassKey, string>> {\n  focusVisible?: string;\n}\ninterface Props extends SwitchProps {\n  classes: Styles;\n}\nexport const CustomSwitch = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 50,\n      height: 30,\n      padding: 0,\n      margin: theme.spacing(1)\n    },\n    switchBase: {\n      padding: 1,\n      color: theme.palette.secondary.main,\n      \"&$checked\": {\n        transform: \"translateX(100px)\",\n        color: theme.palette.secondary.dark,\n        backgroundColor: \"none\",\n        \"& + $track\": {\n          backgroundColor: theme.palette.secondary.light,\n          opacity: 1,\n          border: `1px solid ${theme.palette.secondary.main}`\n        }\n      },\n      \"&$focusVisible $thumb\": {\n        color: \"orange\",\n        border: \"6px solid red\",\n        boxShadow: \"none\"\n      }\n    },\n    thumb: {\n      width: 20,\n      height: 20,\n      marginTop: 4,\n      marginLeft: 2\n    },\n    track: {\n      borderRadius: 10 / 2,\n      border: `1px solid ${theme.palette.divider}`,\n      backgroundColor: theme.palette.divider,\n      opacity: 1,\n      transition: theme.transitions.create([\"background-color\", \"border\"])\n    }\n  })\n)(({ classes, ...props }: Props) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked\n      }}\n      {...props}\n    />\n  );\n});\n","import React from \"react\";\nimport { DialogContent, Box, Typography, InputBase, Theme } from \"@material-ui/core\";\nimport { CustomSwitch } from \"../../Custom/CustomSwitch\";\nimport { makeStyles } from \"@material-ui/styles\";\n\ntype TypeSettingsContent = {\n  checked?: boolean;\n  onChange: Function;\n  children: string;\n  typeSettings: string;\n  cSwitch?: boolean;\n  value?: string;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  textField: {\n    width: 50,\n    borderBottom: \"1px solid \" + theme.palette.secondary.main,\n    paddingRight: 5,\n    textAlign: \"center\",\n    margin: 8\n  },\n  background: {\n    backgroundColor: theme.palette.divider\n  },\n  text: {}\n}));\n\nexport default function SettingsContent({\n  checked,\n  onChange,\n  children,\n  typeSettings,\n  cSwitch,\n  value\n}: TypeSettingsContent) {\n  const classes = useStyles();\n  const customClasses = useStyles();\n\n  //cSwitch define if is an Input or a Switch\n  if (!cSwitch) {\n    cSwitch = false;\n  }\n\n  const toggleChange = (event: any) => {\n    onChange(typeSettings, event.target.value);\n  };\n\n  return (\n    <DialogContent>\n      <Box\n        className={classes.background}\n        display=\"flex\"\n        alignItems=\"center\"\n        p={1}\n        borderRadius={5}\n        justifyContent=\"space-between\"\n      >\n        <Typography variant=\"body1\" className={classes.text}>\n          {children}\n        </Typography>\n\n        {cSwitch ? (\n          <CustomSwitch\n            checked={checked}\n            onChange={() => onChange(typeSettings)}\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n          />\n        ) : (\n          <InputBase value={value} onChange={toggleChange} className={customClasses.textField} />\n        )}\n      </Box>\n    </DialogContent>\n  );\n}\n","import React from \"react\";\nimport { Dialog, DialogTitle, makeStyles, DialogActions, Button } from \"@material-ui/core\";\nimport { TypeSettings } from \"../../../page/RandomSentence\";\nimport SettingsContent from \"./SettingsContent\";\n\ntype TypeSettingsDialog = {\n  open: boolean;\n  onClose: Function;\n  settings: TypeSettings;\n  onChange: Function;\n};\n\nconst useStyles = makeStyles(theme => ({\n  background: {},\n  text: {}\n}));\n\nexport default function SettingsDialog({ open, onClose, settings, onChange }: TypeSettingsDialog) {\n  const classes = useStyles();\n\n  return (\n    <Dialog onClose={() => onClose()} open={open}>\n      <DialogTitle>Settings Random Sentence</DialogTitle>\n      <SettingsContent\n        checked={settings.isCountDown}\n        onChange={onChange}\n        typeSettings=\"countDown\"\n        cSwitch\n      >\n        Activé le Timer avant d'afficher des réponses\n      </SettingsContent>\n      <SettingsContent\n        checked={settings.isOneSentence}\n        onChange={onChange}\n        typeSettings=\"oneSentence\"\n        cSwitch\n      >\n        Afficher que la première réponse random\n      </SettingsContent>\n      <SettingsContent\n        onChange={onChange}\n        value={String(settings.timerTime)}\n        typeSettings=\"timerTime\"\n      >\n        Seconde avant fin du timer\n      </SettingsContent>\n      <DialogActions className={classes.background}>\n        <Button color=\"secondary\" onClick={() => onClose()}>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react';\nimport { Box, Typography, makeStyles } from '@material-ui/core';\nimport MakeSentence from '../components/randomSentence/make/MakeSentence';\nimport ShuffleSentence from '../components/randomSentence/shuffle/ShuffleSentence';\nimport SettingsButton from '../components/randomSentence/settingsDialog/SettingsButton';\nimport HomePageLinkButton from '../components/HomePage/HomePageLinkButton';\nimport SettingsDialog from '../components/randomSentence/settingsDialog/SettingsDialog';\n\nexport type TypeSettings = {\n  isCountDown: boolean;\n  isOneSentence: boolean;\n  timerTime: number;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    [theme.breakpoints.down('sm')]: {\n      marginTop: 12,\n    },\n  },\n  mainBox: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function RandomSentence() {\n  const classes = useStyles();\n  const [wordList, setWordList] = useState<Array<string>>([]);\n  const [isAdding, setAdding] = useState<boolean>(true);\n  const [settings, setSettings] = useState<TypeSettings>({\n    isCountDown: true,\n    isOneSentence: false,\n    timerTime: 3,\n  });\n  const [openSettings, setOpenSettings] = useState<boolean>(false);\n\n  const toggleSettings = (value: string, param?: string) => {\n    switch (value) {\n      case 'countDown':\n        setSettings({\n          isCountDown: !settings.isCountDown,\n          isOneSentence: settings.isOneSentence,\n          timerTime: settings.timerTime,\n        });\n        break;\n      case 'oneSentence':\n        setSettings({\n          isOneSentence: !settings.isOneSentence,\n          isCountDown: settings.isCountDown,\n          timerTime: settings.timerTime,\n        });\n        break;\n      case 'timerTime':\n        let paramNumber: number = 0;\n        if (!isNaN(Number(param))) {\n          paramNumber = Number(param);\n        }\n        setSettings({\n          isOneSentence: settings.isOneSentence,\n          isCountDown: settings.isCountDown,\n          timerTime: Number(paramNumber),\n        });\n\n        setSettings({\n          isOneSentence: settings.isOneSentence,\n          isCountDown: settings.isCountDown,\n          timerTime: Number(paramNumber),\n        });\n        break;\n    }\n  };\n\n  const handleSettings = () => {\n    setOpenSettings(!openSettings);\n  };\n\n  const addWord = (sentence: string) => {\n    const list = [...wordList];\n    list.push(sentence);\n    setWordList(list);\n  };\n\n  const removeWord = (index: number) => {\n    const list = [...wordList];\n    list.splice(index, 1);\n    setWordList(list);\n  };\n\n  const toggleAdding = () => {\n    if (wordList.length === 0) {\n      setWordList(['one', 'two', 'three']);\n      return;\n    }\n    setAdding(!isAdding);\n  };\n\n  const clearWord = () => {\n    setWordList([]);\n  };\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <Box\n        mt={1}\n        p={2}\n        borderRadius={8}\n        position=\"relative\"\n        maxWidth={512}\n        width=\"100%\"\n        className={classes.mainBox}\n      >\n        <HomePageLinkButton />\n\n        <SettingsButton onClick={handleSettings} />\n\n        <SettingsDialog\n          settings={settings}\n          onChange={toggleSettings}\n          onClose={handleSettings}\n          open={openSettings}\n        />\n\n        <Box height={20} display={{ xs: 'block', sm: 'none', md: 'none' }} />\n\n        <Typography className={classes.title} align=\"center\" variant=\"h4\">\n          Random you're sentence!\n        </Typography>\n\n        <Typography color=\"textSecondary\" align=\"center\" variant=\"subtitle1\">\n          We gonna random all you're sentence to find a random list of your sentence.\n        </Typography>\n\n        {isAdding ? (\n          <MakeSentence\n            toggleClean={clearWord}\n            removeWord={removeWord}\n            addWord={addWord}\n            wordList={wordList}\n            toggleAdding={toggleAdding}\n          />\n        ) : (\n          <ShuffleSentence\n            timerTime={settings.timerTime}\n            isCountDown={settings.isCountDown}\n            isOneSentence={settings.isOneSentence}\n            wordList={wordList}\n            toggleAdding={toggleAdding}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  CardActionArea,\n  Typography,\n  Box,\n  makeStyles\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { TypeCustomCardHomePage } from \"../../utils/constante\";\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    textDecoration: \"none\"\n  }\n}));\n\nexport default function CustomCardHomePage({ image, title, body, link }: TypeCustomCardHomePage) {\n  const classes = useStyles();\n\n  return (\n    <Link to={link} className={classes.link}>\n      <Box maxWidth={384} maxHeight={448}>\n        <Card>\n          <CardActionArea>\n            <CardMedia height=\"150\" component=\"img\" image={image} />\n            <CardContent>\n              <Typography noWrap variant=\"h4\">\n                {title}\n              </Typography>\n              <Typography variant=\"body1\" color=\"textSecondary\">\n                {body}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </Box>\n    </Link>\n  );\n}\n","export const GITHUB_NAME = 'melvynx';\n\nexport const GITHUB_KEY = 'cb15fc5496778827637f265238600794d28f3e07';\n\nexport const WEBSITE_NAME = 'VonQey';\n\nenum EnumRootDataBase {\n  prod = 'chat',\n  ninja = 'chat_ninja',\n}\n\nexport const ROOT_DATABASE: EnumRootDataBase = EnumRootDataBase.prod;\n\nexport type TypeTopic = {\n  title: string;\n  user: string;\n  user_id: string;\n  message: string;\n  date: string;\n  answer?: Array<TypeAnswerChat>;\n  auth?: TypeAuthForum;\n  topicID?: string;\n};\n\nexport type TypeTopicList = {\n  topic: TypeTopic;\n  key: string;\n};\n\nexport type TypeAnswerChat = {\n  user_id: string;\n  user: string;\n  message: string;\n  date: string;\n};\n\nexport type TypeArrayAnswer = {\n  key: string;\n  val: TypeAnswerChat;\n};\n\nexport type TypeAuthDoc = {\n  group: string;\n  created_at: number;\n  username: string;\n};\n\nexport type TypeAuthForum = {\n  auth: any;\n  collection: TypeAuthDoc;\n};\n//HomePage : Array of card\n\nexport const cardHomePage: Array<TypeCustomCardHomePage> = [\n  {\n    image:\n      'https://images.unsplash.com/photo-1494253109108-2e30c049369b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80',\n    title: 'Shuffle Sentence !',\n    body:\n      \"It's an application to shuffle how many sentence you want, you can't have one result, or a numbered list for result !\",\n    link: '/randomword',\n  },\n  {\n    image:\n      'https://img.freepik.com/vettori-gratuito/collezione-di-numeri-colorati-con-design-piatto_23-2147811939.jpg?size=338&ext=jpg',\n    title: 'Base convertor',\n    body:\n      \"Calculator for change base 2 to base 10 and base 16, or inverse ! It's in really time, faster and easy !\",\n    link: '/transform',\n  },\n  {\n    image:\n      'https://opensource.com/sites/default/files/styles/image-full-size/public/lead-images/github-universe.jpg?itok=lwRZddXA',\n    title: 'GitHub MelvynX',\n    body: \"It's a page who resens my GitHub pages !!! We can see all repos.\",\n    link: '/github',\n  },\n];\n\n//Type\n\nexport type TypeCustomCardHomePage = {\n  image: string;\n  title: string;\n  body: string;\n  link: string;\n};\n","import { Box, Typography, Grid } from '@material-ui/core';\nimport CustomCardHomePage from '../components/HomePage/CustomCardHomePage';\nimport { WEBSITE_NAME, cardHomePage } from '../utils/constante';\n\nexport default function HomePage() {\n  return (\n    <Box alignItems=\"center\" textAlign=\"center\">\n      <Typography variant=\"h2\">{WEBSITE_NAME}</Typography>\n      <Typography variant=\"h4\">App by Melvyn</Typography>\n      <Typography variant=\"subtitle1\">It's an app for learn React.</Typography>\n      <Box m={2}>\n        <Grid container justify=\"center\" spacing={2}>\n          {cardHomePage.map(({ image, title, body, link }, index) => (\n            <Grid item key={index}>\n              <CustomCardHomePage\n                link={link}\n                image={image}\n                title={title}\n                body={body}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  TextField,\n  makeStyles,\n  fade,\n  TextFieldProps,\n  OutlinedInputProps,\n  createStyles,\n  Theme\n} from \"@material-ui/core\";\n\nconst useStylesReddit = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid \" + theme.palette.primary.dark,\n      color: theme.palette.text.primary,\n      padding: 1.5,\n      paddingLeft: 6,\n      borderRadius: 3,\n      fontSize: 18,\n      minHeight: 38,\n      overflow: \"hidden\",\n      backgroundColor: theme.palette.background.paper,\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n      \"&:hover\": {\n        boxShadow: `${fade(theme.palette.primary.main, 0.15)} 1px 1px 0 2px`\n      },\n      \"&$focused\": {\n        boxShadow: `${fade(theme.palette.primary.main, 0.5)} 0 0 0 2px`,\n        borderColor: theme.palette.primary.dark\n      }\n    },\n    focused: {}\n  })\n);\n\nexport default function CustomTextField(props: TextFieldProps) {\n  const classes = useStylesReddit();\n\n  return (\n    <TextField\n      InputProps={{ classes, disableUnderline: true } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n","import React from \"react\";\nimport { Box, makeStyles, InputLabel } from \"@material-ui/core\";\nimport CustomTextField from \"../Custom/CustomTextField\";\n\ntype TypeInputBaseCalcul = {\n  value: string;\n  base: string;\n  onChange: Function;\n  error?: boolean;\n  display?: boolean;\n  helperText: string;\n};\n\nconst useStylesInput = makeStyles(theme => ({\n  input: {\n    fontSize: 12,\n    color: theme.palette.primary.main,\n    marginBottom: 3\n  },\n  helperText: {\n    color: theme.palette.error.main\n  }\n}));\n\nexport default function InputBaseCalcul({\n  display,\n  value,\n  base,\n  onChange,\n  error,\n  helperText\n}: TypeInputBaseCalcul) {\n  const classes = useStylesInput();\n  return (\n    <Box width=\"100%\" m={0.8} pr={3} display={display ? \"block\" : \"none\"}>\n      <InputLabel className={classes.input}>{base}</InputLabel>\n      <CustomTextField\n        error={error}\n        onChange={event => onChange(event)}\n        fullWidth\n        value={value}\n        helperText={\n          <Box component=\"span\" className={classes.helperText}>\n            {helperText}{\" \"}\n          </Box>\n        }\n      ></CustomTextField>\n    </Box>\n  );\n}\n","import React, { useState, ChangeEvent } from 'react';\nimport { Box } from '@material-ui/core';\nimport InputBaseCalcul from './InputBaseCalcul';\nimport {\n  isBinary,\n  bin_to_dec,\n  bin_to_hexa,\n  isDecimal,\n  dec_to_bin,\n  dec_to_hexa,\n  isHexadecimal,\n  hexa_to_dec,\n  hexa_to_bin,\n  isOctal,\n  oct_to_bin,\n  oct_to_dec,\n  oct_to_hexa,\n  hexa_to_oct,\n  dec_to_oct,\n  bin_to_oct,\n} from '../../utils/function';\nimport { TypeSettings } from '../../page/BaseCalculator';\nimport ButtonReset from './ButtonReset';\n\nexport enum Base {\n  base16 = 'base 16',\n  base10 = 'base 10',\n  base8 = 'base 8',\n  base2 = 'base 2',\n  baseN = 'Base null',\n}\n\ntype TypeCalculator = {\n  settings: TypeSettings;\n};\n\ntype TypeErrorMessage = {\n  base: Base;\n  error: string;\n};\n\nexport default function Calculator({ settings }: TypeCalculator) {\n  const [base2, setBase2] = useState<string>('');\n  const [base10, setBase10] = useState<string>('');\n  const [base8, setBase8] = useState<string>('');\n  const [base16, setBase16] = useState<string>('');\n\n  const [errorMessage, setErrorMessage] = useState<TypeErrorMessage>({\n    base: Base.baseN,\n    error: '',\n  });\n\n  const displayErrorMessage = (text: string, baseValue: Base) => {\n    setErrorMessage({ base: baseValue, error: text });\n  };\n\n  const changeBase2 = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setBase2(event.target.value);\n\n    binaryConvertor(event.target.value);\n  };\n  const changeBase10 = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setBase10(event.target.value);\n\n    decimalConvertor(event.target.value);\n  };\n  const changeBase16 = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setBase16(event.target.value.toUpperCase());\n\n    hexadecimalConvertor(event.target.value);\n  };\n\n  const changeBase8 = (\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setBase8(event.target.value);\n\n    octalConvertor(event.target.value);\n  };\n\n  const binaryConvertor = (value: string) => {\n    if (isBinary(value)) {\n      setBase10(String(bin_to_dec(value)));\n      setBase16(bin_to_hexa(value));\n      setBase8(bin_to_oct(value));\n      displayErrorMessage(' ', Base.baseN);\n    } else {\n      displayErrorMessage(\n        'Binary number is null or invalid (only 0 and 1).',\n        Base.base2\n      );\n    }\n  };\n\n  const decimalConvertor = (value: string) => {\n    if (isDecimal(value)) {\n      setBase2(dec_to_bin(value));\n      setBase16(dec_to_hexa(value));\n      setBase8(dec_to_oct(value));\n      displayErrorMessage(' ', Base.baseN);\n    } else {\n      displayErrorMessage(\n        'Decimal number is null or invalid (only 0 to 9).',\n        Base.base10\n      );\n    }\n  };\n\n  const hexadecimalConvertor = (value: string) => {\n    if (isHexadecimal(value)) {\n      setBase2(String(hexa_to_bin(value)));\n      setBase10(String(hexa_to_dec(value)));\n      setBase8(String(hexa_to_oct(value)));\n      displayErrorMessage(' ', Base.baseN);\n    } else {\n      displayErrorMessage(\n        'Hexadecimal number is null or invalid (only 0 to 9 and A to F)',\n        Base.base16\n      );\n    }\n  };\n\n  const octalConvertor = (value: string) => {\n    if (isOctal(value)) {\n      setBase2(oct_to_bin(value));\n      setBase10(String(oct_to_dec(value)));\n      setBase16(oct_to_hexa(value));\n      displayErrorMessage(' ', Base.baseN);\n    } else {\n      displayErrorMessage(\n        'Octal number is null or invalid (only 0 to 7)',\n        Base.base8\n      );\n    }\n  };\n\n  const resetValue = () => {\n    setBase2('');\n    setBase10('');\n    setBase8('');\n    setBase16('');\n    displayErrorMessage(' ', Base.baseN);\n  };\n\n  return (\n    <Box mt={2}>\n      <InputBaseCalcul\n        display={settings.displayBase2}\n        onChange={changeBase2}\n        base=\"Binary\"\n        value={base2}\n        helperText={errorMessage.base === Base.base2 ? errorMessage.error : ''}\n      ></InputBaseCalcul>\n\n      <InputBaseCalcul\n        display={settings.displayBase8}\n        onChange={changeBase8}\n        base=\"Octale\"\n        value={base8}\n        helperText={errorMessage.base === Base.base8 ? errorMessage.error : ''}\n      ></InputBaseCalcul>\n\n      <InputBaseCalcul\n        display={settings.displayBase10}\n        onChange={changeBase10}\n        base=\"Decimal\"\n        value={base10}\n        helperText={errorMessage.base === Base.base10 ? errorMessage.error : ''}\n      ></InputBaseCalcul>\n\n      <InputBaseCalcul\n        display={settings.displayBase16}\n        onChange={changeBase16}\n        base=\"Hexadecimal\"\n        value={base16}\n        helperText={errorMessage.base === Base.base16 ? errorMessage.error : ''}\n      ></InputBaseCalcul>\n\n      <ButtonReset onClick={resetValue} />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Button } from \"@material-ui/core\";\n\ntype TypeButtonReset = {\n  onClick: Function;\n};\n\nexport default function ButtonReset({ onClick }: TypeButtonReset) {\n  return (\n    <Box display=\"flex\" justifyContent=\"right\" flexDirection=\"row-reverse\">\n      <Button onClick={() => onClick()} color=\"secondary\" className=\"safariRight\">\n        Reset\n      </Button>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Dialog, DialogTitle, DialogActions, Button } from \"@material-ui/core\";\nimport SettingsContent from \"../randomSentence/settingsDialog/SettingsContent\";\nimport { TypeSettings } from \"../../page/BaseCalculator\";\n\ntype TypeSettingsDialog = {\n  open: boolean;\n  onClose: Function;\n  settings: TypeSettings;\n  onChange: Function;\n};\n\nexport default function SettingsDialog({ open, onClose, settings, onChange }: TypeSettingsDialog) {\n  return (\n    <Dialog onClose={() => onClose()} open={open}>\n      <DialogTitle>Settings Random Sentence</DialogTitle>\n      <SettingsContent cSwitch checked={settings.displayBase2} onChange={onChange} typeSettings=\"2\">\n        Affiché la base 2\n      </SettingsContent>\n      <SettingsContent cSwitch checked={settings.displayBase8} onChange={onChange} typeSettings=\"8\">\n        Affiché la base 8\n      </SettingsContent>\n      <SettingsContent\n        cSwitch\n        checked={settings.displayBase10}\n        onChange={onChange}\n        typeSettings=\"10\"\n      >\n        Affiché la base 10\n      </SettingsContent>\n      <SettingsContent\n        cSwitch\n        checked={settings.displayBase16}\n        onChange={onChange}\n        typeSettings=\"16\"\n      >\n        Affiché la base 16\n      </SettingsContent>\n      <DialogActions>\n        <Button color=\"secondary\" onClick={() => onClose()}>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Typography, makeStyles } from \"@material-ui/core\";\nimport Calculator from \"../components/baseCalculator/Calculator\";\nimport HomePageLinkButton from \"../components/HomePage/HomePageLinkButton\";\nimport SettingsButton from \"../components/randomSentence/settingsDialog/SettingsButton\";\nimport SettingsDialog from \"../components/baseCalculator/SettingsDialog\";\n\nconst useStyles = makeStyles(theme => ({\n  title: {},\n  mainBox: {\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport type TypeSettings = {\n  displayBase2?: boolean;\n  displayBase8?: boolean;\n  displayBase10?: boolean;\n  displayBase16?: boolean;\n};\n\nexport default function BaseCalculator() {\n  const [settings, setSettings] = useState<TypeSettings>({\n    displayBase2: true,\n    displayBase8: false,\n    displayBase10: true,\n    displayBase16: true\n  });\n  const [openSettings, setOpenSettings] = useState<boolean>(false);\n\n  const handleSettings = () => {\n    setOpenSettings(!openSettings);\n  };\n\n  const handleChangeSettings = (value: string) => {\n    switch (value) {\n      case \"2\":\n        setSettings(prevState => {\n          return { ...prevState, displayBase2: !settings.displayBase2 };\n        });\n        break;\n      case \"8\":\n        setSettings(prevState => {\n          return { ...prevState, displayBase8: !settings.displayBase8 };\n        });\n        break;\n      case \"10\":\n        setSettings(prevState => {\n          return { ...prevState, displayBase10: !settings.displayBase10 };\n        });\n        break;\n      case \"16\":\n        setSettings(prevState => {\n          return { ...prevState, displayBase16: !settings.displayBase16 };\n        });\n    }\n  };\n\n  const classes = useStyles();\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <Box\n        mt={1}\n        p={2}\n        borderRadius={8}\n        position=\"relative\"\n        maxWidth={512}\n        width=\"100%\"\n        className={classes.mainBox}\n      >\n        <HomePageLinkButton />\n\n        <SettingsButton onClick={handleSettings} />\n\n        <SettingsDialog\n          onChange={handleChangeSettings}\n          onClose={handleSettings}\n          open={openSettings}\n          settings={settings}\n        />\n\n        <Typography className={classes.title} align=\"center\" variant=\"h4\">\n          Convert number\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\">\n          Convert your numbers in real time between base-16, base-10, base-8 and base-2.\n        </Typography>\n\n        <Calculator settings={settings} />\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Link, Typography, Theme } from \"@material-ui/core\";\nimport { GITHUB_KEY, GITHUB_NAME } from \"../../utils/constante\";\nimport { makeStyles } from \"@material-ui/styles\";\n\ntype TypeCommitBox = {\n  value: any;\n  index: number;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  mainBox: {\n    height: 40,\n    paddingLeft: 8,\n    paddingRight: 8,\n    alignItems: \"center\",\n    display: \"flex\",\n    transition: theme.transitions.create([\"background-color\"]),\n    \"&:hover\": {\n      backgroundColor: theme.palette.divider\n    }\n  }\n}));\n\nexport default function CommitBox({ value, index }: TypeCommitBox) {\n  const [htmlUrl, setHtmlUrl] = useState<string>(\"\");\n\n  const classes = useStyles();\n\n  const findLinkAPI = () => {\n    let headers = new Headers();\n\n    headers.set(\"Authorization\", \"Basic \" + btoa(GITHUB_NAME + \":\" + GITHUB_KEY));\n\n    fetch(value.url, {\n      method: \"GET\"\n      //headers: headers\n      //credentials: 'user:passwd'\n    }).then(function(reponse) {\n      if (reponse.status !== 200) {\n        console.warn(\"GitHub api has problem.(on commit url)\");\n        return \"error\";\n      }\n      reponse.json().then(function(url) {\n        setHtmlUrl(url.html_url);\n      });\n    });\n  };\n\n  const findUrl = () => {\n    if (htmlUrl.length < 1) {\n      findLinkAPI();\n    }\n  };\n\n  return (\n    <Box onMouseEnter={findUrl} className={classes.mainBox}>\n      <Link href={htmlUrl} className=\"removeUnderline customHoverLink\" target=\"_blank\">\n        <Box width=\"100%\" maxWidth={340}>\n          <Typography noWrap variant=\"body1\" className=\"customHoverLink\">\n            {value.commit.message}\n          </Typography>\n        </Box>\n      </Link>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nexport default function CommitSkeleton() {\n  return (\n    <Box>\n      <Box m={1.5} p={0}>\n        <Skeleton variant=\"text\" height={25} />\n        <Skeleton variant=\"text\" height={25} />\n        <Skeleton variant=\"text\" height={25} />\n        <Skeleton variant=\"text\" height={25} />\n        <Skeleton variant=\"text\" height={25} />\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Typography, makeStyles } from \"@material-ui/core\";\nimport CommitBox from \"./CommitBox\";\nimport CommitSkeleton from \"./Skeleton/CommitSkeleton\";\n\ntype TypeCommitGitHub = {\n  apiCommit: any;\n};\nconst useStyles = makeStyles(theme => ({\n  title: {\n    color: theme.palette.primary.light,\n    borderBottom: \"1px solid \" + theme.palette.primary.light,\n    width: 140,\n    paddingBottom: 0\n  }\n}));\nexport default function CommitGitHub({ apiCommit }: TypeCommitGitHub) {\n  const [isLoad, setLoad] = useState<boolean>(false);\n\n  const classes = useStyles();\n\n  if (apiCommit.length > 1) {\n    if (isLoad === false) {\n      setLoad(true);\n    }\n  }\n\n  const fiveFirstCommit = () => {\n    if (apiCommit.length > 4) {\n      let fiveCommits = [];\n      for (let i = 0; i < 5; i++) {\n        fiveCommits.push(apiCommit[i]);\n      }\n      return fiveCommits;\n    }\n    return apiCommit;\n  };\n\n  return (\n    <Box>\n      <Box ml={1.5}>\n        <Typography variant=\"h6\" className={classes.title}>\n          5 last commits\n        </Typography>\n      </Box>\n      {isLoad ? (\n        fiveFirstCommit().map((value: any, index: number) => (\n          <CommitBox value={value} index={index} key={index} />\n        ))\n      ) : (\n        <CommitSkeleton />\n      )}\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Typography, Box, CardContent, Button, Link, makeStyles } from \"@material-ui/core\";\nimport CommitGitHub from \"./CommitGitHub\";\nimport { GITHUB_KEY, GITHUB_NAME } from \"../../utils/constante\";\n\ntype TypeCardGItHubRepos = {\n  api: any;\n};\n\nconst useStyles = makeStyles(theme => ({\n  card: {}\n}));\n\nexport default function CardGitHubRepos({ api }: TypeCardGItHubRepos) {\n  const [apiCommit, setApiCommit] = useState([]);\n\n  const classes = useStyles();\n\n  const fetchApiCommit = () => {\n    let commitsURL = \"\";\n    if (api.commits_url) {\n      commitsURL = api.commits_url.replace(\"{/sha}\", \"\");\n    } else {\n      return;\n    }\n\n    let headers = new Headers();\n\n    headers.set(\"Authorization\", \"Basic \" + btoa(GITHUB_NAME + \":\" + GITHUB_KEY));\n\n    fetch(commitsURL, {\n      method: \"GET\"\n      //headers: headers\n      //credentials: 'user:passwd'\n    }).then(function(reponse) {\n      if (reponse.status !== 200) {\n        console.warn(\"GitHub api has problem.(on card repos)\");\n        return;\n      }\n\n      reponse.json().then(function(commits) {\n        setApiCommit(commits);\n        return;\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (apiCommit.length < 1) {\n      fetchApiCommit();\n    }\n  });\n\n  return (\n    <Box width=\"100%\" maxWidth={350}>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography color=\"textPrimary\" align=\"center\" variant=\"h4\">\n            {api.name}\n          </Typography>\n\n          <Typography color=\"textSecondary\" variant=\"subtitle2\" align=\"center\">\n            Created at {api.created_at}\n          </Typography>\n        </CardContent>\n\n        <CommitGitHub apiCommit={apiCommit}></CommitGitHub>\n\n        <Link href={api.html_url} target=\"_blank\" className=\"removeUnderline\">\n          <Box display=\"flex\" justifyContent=\"right\" m={1}>\n            <Button color=\"secondary\" size=\"small\" variant=\"text\">\n              Open repository\n            </Button>\n          </Box>\n        </Link>\n      </Card>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\ntype TypeGitHubAuthorInformation = {\n  children: string;\n  label: string;\n  align?: boolean;\n};\nexport default function GitHubAuthorInformation({\n  label,\n  children,\n  align\n}: TypeGitHubAuthorInformation) {\n  return (\n    <Box>\n      <Typography variant=\"h5\" color=\"primary\">\n        {label}\n      </Typography>\n      <Typography variant=\"h5\" color=\"textPrimary\">\n        {children}\n      </Typography>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Theme } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  skeletonRect: {},\n  skeletonText: {\n    backgroundColor: theme.palette.primary.main,\n    height: 35\n  },\n  skeletonTextWhite: {\n    backgroundColor: theme.palette.text.secondary,\n    height: 35\n  }\n}));\n\nexport default function GitHubAuthorSkeleton() {\n  const classes = useStyles();\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Box width={100} mr={4} height={100}>\n          <Skeleton className={classes.skeletonRect} variant=\"rect\" height=\"100%\"></Skeleton>\n        </Box>\n        <Skeleton\n          className={classes.skeletonTextWhite}\n          height={35}\n          variant=\"text\"\n          width={100}\n        ></Skeleton>\n      </Box>\n      <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"space-around\" m={3}>\n        <Box>\n          <Skeleton className={classes.skeletonTextWhite} width={125} variant=\"text\"></Skeleton>\n          <Skeleton className={classes.skeletonText} width={125} variant=\"text\"></Skeleton>\n        </Box>\n\n        <Box>\n          <Skeleton className={classes.skeletonTextWhite} width={125} variant=\"text\"></Skeleton>\n          <Skeleton className={classes.skeletonText} width={125} variant=\"text\"></Skeleton>\n        </Box>\n\n        <Box>\n          <Skeleton className={classes.skeletonTextWhite} width={125} variant=\"text\"></Skeleton>\n          <Skeleton className={classes.skeletonText} width={125} variant=\"text\"></Skeleton>\n        </Box>\n\n        <Box>\n          <Skeleton className={classes.skeletonTextWhite} width={125} variant=\"text\"></Skeleton>\n          <Skeleton className={classes.skeletonText} width={125} variant=\"text\"></Skeleton>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport GitHubAuthorInformation from \"./GitHubAuthorInformation\";\nimport { GITHUB_KEY, GITHUB_NAME } from \"../../utils/constante\";\nimport GitHubAuthorSkeleton from \"./Skeleton/GitHubAuthorSkeleton\";\n\ntype TypeGitHubAuthor = {\n  api: any;\n};\n\ntype GithuhAuthorType = {\n  login: string;\n  company: string;\n  avatar_url: string;\n  location: string;\n  followers: number;\n  following: number;\n};\n\nexport default function GitHubAuthor({ api }: TypeGitHubAuthor) {\n  const [author, setAuthor] = useState<GithuhAuthorType>();\n  const [loading, setLoading] = useState<Boolean>(false);\n\n  const findApiAuthor = () => {\n    let headers = new Headers();\n\n    headers.set(\"Authorization\", \"Basic \" + btoa(GITHUB_NAME + \":\" + GITHUB_KEY));\n\n    setLoading(true);\n    fetch(api[0].owner.url, {\n      method: \"GET\"\n      //headers: headers\n      //credentials: 'user:passwd'\n    })\n      .then(function(reponse) {\n        if (reponse.status !== 200) {\n          console.warn(\"GitHub api has problem.(on author)\");\n          return;\n        }\n\n        reponse.json().then(function(author) {\n          setAuthor(author);\n          return;\n        });\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    if (!author && !loading && api.length > 1) {\n      findApiAuthor();\n    }\n  }, [author, loading, api]);\n\n  return (\n    <Box m={2}>\n      {author ? (\n        <Box>\n          <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            <Box width={100} mr={4} height={100}>\n              <img\n                src={author.avatar_url}\n                width={100}\n                height={100}\n                alt={\"profil picture of \" + author.login}\n              />\n            </Box>\n            <Typography color=\"textPrimary\" variant=\"h3\">\n              {author.login}\n            </Typography>\n          </Box>\n          <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"space-around\" m={3}>\n            <GitHubAuthorInformation label=\"Company\">{author.company}</GitHubAuthorInformation>\n\n            <GitHubAuthorInformation label=\"Location\">{author.location}</GitHubAuthorInformation>\n\n            <GitHubAuthorInformation label=\"Followers\">\n              {String(author.followers)}\n            </GitHubAuthorInformation>\n\n            <GitHubAuthorInformation label=\"Following\">\n              {String(author.following)}\n            </GitHubAuthorInformation>\n          </Box>\n        </Box>\n      ) : (\n        <GitHubAuthorSkeleton />\n      )}\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Card, CardContent, Theme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  card: {\n    padding: 8\n  },\n  skeletonText: {\n    backgroundColor: theme.palette.primary.main,\n    height: 25\n  },\n  skeletonTextWhite: {\n    backgroundColor: theme.palette.text.secondary,\n    height: 25\n  },\n  skeletonBox: {\n    backgroundColor: theme.palette.secondary.main,\n    borderRadius: 3\n  }\n}));\n\nexport default function CardGitHubSkeleton() {\n  const classes = useStyles();\n  return (\n    <Box width={300}>\n      <Card className={classes.card}>\n        <CardContent>\n          <Skeleton className={classes.skeletonTextWhite} variant=\"text\"></Skeleton>\n\n          <Skeleton className={classes.skeletonTextWhite} variant=\"text\"></Skeleton>\n        </CardContent>\n\n        <Skeleton className={classes.skeletonText} width={100} variant=\"text\"></Skeleton>\n        <Skeleton className={classes.skeletonText} variant=\"text\"></Skeleton>\n        <Skeleton className={classes.skeletonText} variant=\"text\"></Skeleton>\n        <Skeleton className={classes.skeletonText} variant=\"text\"></Skeleton>\n        <Skeleton className={classes.skeletonText} variant=\"text\"></Skeleton>\n        <Skeleton className={classes.skeletonText} variant=\"text\"></Skeleton>\n\n        <Box display=\"flex\" justifyContent=\"right\" m={1}>\n          <Skeleton\n            className={classes.skeletonBox}\n            variant=\"rect\"\n            width={100}\n            height={25}\n          ></Skeleton>\n        </Box>\n      </Card>\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport CardGitHubRepos from \"../components/github/CardGitHubRepos\";\nimport GitHubAuthor from \"../components/github/GitHubAuthor\";\nimport HomePageLinkButton from \"../components/HomePage/HomePageLinkButton\";\nimport { GITHUB_NAME, GITHUB_KEY } from \"../utils/constante\";\nimport CardGitHubSkeleton from \"../components/github/Skeleton/CardGitHubSkeleton\";\n\nexport default function GitHubPages() {\n  const [apiRepos, setApi] = useState([]);\n\n  const fetchApiGitHub = () => {\n    let headers = new Headers();\n\n    headers.set(\"Authorization\", \"Basic \" + btoa(GITHUB_NAME + \":\" + GITHUB_KEY));\n\n    fetch(\"https://api.github.com/users/melvynx/repos\", {\n      method: \"GET\"\n      //headers: headers\n      //credentials: 'user:passwd'\n    }).then(function(reponse) {\n      if (reponse.status !== 200) {\n        console.warn(\"GitHub api has problem.(on repos)\");\n        return;\n      }\n\n      reponse.json().then(function(data) {\n        setApi(data);\n        return;\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (apiRepos.length < 1) {\n      fetchApiGitHub();\n    }\n  });\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <Box maxWidth={1000} width=\"100%\" position=\"relative\">\n        <HomePageLinkButton />\n\n        <GitHubAuthor api={apiRepos} />\n\n        <Grid container justify=\"center\" spacing={2}>\n          {apiRepos.length > 0\n            ? apiRepos.map((value, index) => (\n                <Grid item key={index}>\n                  <CardGitHubRepos api={value}></CardGitHubRepos>\n                </Grid>\n              ))\n            : [\"1\", \"2\", \"3\", \"4\", \"5\"].map((value, index) => (\n                <Grid item key={index}>\n                  <CardGitHubSkeleton />\n                </Grid>\n              ))}\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography, Theme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { WEBSITE_NAME } from \"../../utils/constante\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  box: {\n    backgroundColor: theme.palette.primary.dark\n  }\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <Box position=\"absolute\" className={classes.box} bottom={0} width=\"100%\" height={200}>\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        height=\"100%\"\n        width=\"100%\"\n        alignItems=\"center\"\n      >\n        <Typography color=\"textSecondary\" align=\"center\" variant=\"body1\">\n          <b>{WEBSITE_NAME}</b> Made By <b>MelvynX</b>\n        </Typography>\n        <Typography color=\"textSecondary\" align=\"center\" variant=\"body1\">\n          Deploy on GitHubPage\n        </Typography>\n        <Typography color=\"textSecondary\" align=\"center\" variant=\"body1\">\n          melvynx 2019\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\n\nimport {\n  CssBaseline,\n  ThemeProvider,\n  createMuiTheme,\n  Box,\n  responsiveFontSizes,\n} from '@material-ui/core';\nimport { Switch, HashRouter as Router, Route } from 'react-router-dom';\nimport RandomSentence from './page/RandomSentence';\nimport HomePage from './page/HomePage';\nimport BaseCalculator from './page/BaseCalculator';\nimport GitHubPages from './page/GitHubPages';\nimport Footer from './components/App/Footer';\n\nlet theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#bb87fa',\n      contrastText: '#000',\n    },\n    secondary: {\n      main: '#1ddac6',\n      contrastText: '#fff',\n    },\n    error: {\n      light: '##ef9a9a',\n      main: '#ce667a',\n      dark: '#af0025',\n      contrastText: '#7e7e7e',\n    },\n    background: {\n      default: '#1d1d1d',\n      paper: '#2c2c2c',\n    },\n  },\n  typography: {\n    subtitle1: {\n      fontStyle: 'italic',\n    },\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      'Segoe UI',\n      'Roboto',\n      'Oxygen',\n      'Ubuntu',\n      'Cantarell',\n      'Open Sans',\n      'Helvetica Neue',\n      'sans-serif',\n    ].join(','),\n  },\n  spacing: 8,\n  overrides: {\n    MuiButton: {\n      text: {\n        borderRadius: 2,\n      },\n    },\n  },\n});\ntheme = responsiveFontSizes(theme);\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box pb={34}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route path=\"/randomWord\">\n              <RandomSentence />\n            </Route>\n            <Route path=\"/transform\">\n              <BaseCalculator />\n            </Route>\n            <Route path=\"/github\">\n              <GitHubPages />\n            </Route>\n            <Route path=\"/test\"></Route>\n            <Route path=\"/\">\n              <HomePage />\n            </Route>\n          </Switch>\n        </Router>\n      </Box>\n      <Footer />\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}