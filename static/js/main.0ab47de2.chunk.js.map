{"version":3,"sources":["components/randomSentence/make/BoxMakeSentence.tsx","components/randomSentence/make/ListMakeSentence.tsx","components/randomSentence/make/InputMakeSentence.tsx","components/randomSentence/make/MakeSentence.tsx","components/randomSentence/shuffle/BoxShuffleSentence.tsx","components/randomSentence/shuffle/ShuffleCountDown.tsx","components/randomSentence/settingsDialog/SettingsButtonShuffle.tsx","utils/function.tsx","components/randomSentence/shuffle/ShuffleSentence.tsx","components/randomSentence/settingsDialog/SettingsButton.tsx","components/HomePage/HomePageLinkButton.tsx","components/Custom/CustomSwitch.tsx","components/randomSentence/settingsDialog/SettingsContent.tsx","components/randomSentence/settingsDialog/SettingsDialog.tsx","page/RandomSentence.tsx","components/HomePage/CustomCardHomePage.tsx","utils/constante.ts","utils/authHelper.ts","auth/utils/Uservalue.tsx","auth/User/ContentUserAccount.tsx","auth/utils/checkUser.ts","components/Custom/CustomTextField.tsx","auth/utils/InputUser.tsx","auth/Login/ContentLoginUser.tsx","auth/Create/ContentCreateUser.tsx","auth/User/User.tsx","components/HomePage/AuthButton.tsx","page/HomePage.tsx","components/baseCalculator/Calculator.tsx","components/baseCalculator/InputBaseCalcul.tsx","components/baseCalculator/ButtonReset.tsx","components/baseCalculator/SettingsDialog.tsx","page/BaseCalculator.tsx","components/github/CommitBox.tsx","components/github/Skeleton/CommitSkeleton.tsx","components/github/CommitGitHub.tsx","components/github/CardGitHubRepos.tsx","components/github/GitHubAuthorInformation.tsx","components/github/Skeleton/GitHubAuthorSkeleton.tsx","components/github/GitHubAuthor.tsx","components/github/Skeleton/CardGitHubSkeleton.tsx","page/GitHubPages.tsx","components/App/Footer.tsx","utils/firebaseHelper.ts","components/Chat/Utils/InputChat.tsx","components/Chat/Home/NewTopicInput.tsx","components/Chat/Utils/Content.tsx","components/Chat/Topic/Userdate.tsx","components/Chat/Home/CardTopic.tsx","components/Chat/Skeleton/UserdateSkeleton.tsx","components/Chat/Skeleton/CardTopicSkeleton.tsx","components/Chat/Home/ListTopic.tsx","components/Chat/Home/HomePage.tsx","components/Chat/Utils/SettingsButtonChat.tsx","components/Chat/CreateTopic/CreateTopicInput.tsx","components/Chat/CreateTopic/CreateTopic.tsx","components/Chat/CreateTopic/CreateTopicPage.tsx","components/Chat/Settings/DeleteButton.tsx","components/Chat/Settings/EditButton.tsx","components/Chat/Settings/SettingsTopicButton.tsx","components/Chat/Topic/TopicView.tsx","components/Chat/Settings/SettingsAnswerButton.tsx","components/Chat/Topic/AnswerComponent.tsx","components/Chat/Topic/Answer.tsx","components/Chat/Topic/TopicAnswerInput.tsx","components/Chat/Skeleton/TopicSkeleton.tsx","components/Chat/Topic/Topic.tsx","page/RedirectTopic.tsx","components/Chat/Utils/ForumBar.tsx","page/Forum.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BoxMakeSentence","index","children","onDelete","useState","isHover","setHover","theme","useTheme","toggleHover","state","Box","position","onMouseEnter","onMouseLeave","onClick","m","p","borderRadius","border","color","palette","primary","main","borderColor","fontSize","pr","right","top","Fade","in","ListMakeSentence","wordList","toggleDeleteWord","minHeight","className","display","flexWrap","justifyContent","TransitionGroup","map","value","CSSTransition","key","timeout","classNames","InputMakeSentence","onKeyUp","inputValue","onChange","classes","alignItems","mb","width","InputBase","event","inputBase","fullWidth","placeholder","Button","button","useStyles","makeStyles","transition","borderBottom","height","boxWord","minWidth","buttonRandom","buttonReset","marginLeft","MakeSentence","addWord","removeWord","toggleAdding","toggleClean","sentence","setSentence","errorMessage","setErrorMessage","toggleNewWord","length","removeErrorMessage","i","setTimeout","left","Alert","severity","target","variant","first","fontWeigth","other","dark","fontWeight","BoxShuffleSentence","ml","mt","ShuffleCountDown","onFinish","timerTime","countDown","setCountDown","useEffect","bgcolor","Typography","iconButton","SettingsButtonShuffle","toggleRandomWord","ButtonGroup","IconButton","size","shuffleList","list","max","listCopy","listResult","number","Math","floor","random","push","splice","boxShuffle","backgroundColor","divider","ShuffleSentence","isCountDown","isOneSentence","isCountdown","setIsCountdown","listSentence","setListSentence","SettingsButton","HomePageLinkButton","zIndex","to","Fab","CustomSwitch","withStyles","createStyles","root","padding","margin","spacing","switchBase","secondary","transform","light","opacity","boxShadow","thumb","marginTop","track","transitions","create","props","Switch","focusVisibleClassName","focusVisible","disableRipple","checked","textField","paddingRight","textAlign","background","text","SettingsContent","typeSettings","cSwitch","customClasses","DialogContent","inputProps","SettingsDialog","open","onClose","settings","Dialog","DialogTitle","String","DialogActions","title","breakpoints","down","mainBox","paper","RandomSentence","setWordList","isAdding","setAdding","setSettings","openSettings","setOpenSettings","handleSettings","maxWidth","param","paramNumber","isNaN","Number","xs","sm","md","align","link","textDecoration","CustomCardHomePage","image","body","maxHeight","Card","CardActionArea","CardMedia","component","CardContent","noWrap","EnumRootDataBase","GITHUB_KEY","ROOT_DATABASE","prod","cardHomePage","authHelper","auth","firebase","db","email","password","user","callback","createUserWithEmailAndPassword","then","cred","localTime","Date","getTime","collection","doc","uid","set","group","created_at","username","updateProfile","displayName","catch","e","authListener","onAuthStateChanged","firebaseUser","login","a","async","signOut","signInWithEmailAndPassword","logout","getCollection","get","data","Uservalue","label","UserAccount","authDoc","onLogout","toLocaleString","checkEmail","test","helperText","useStylesReddit","paddingLeft","overflow","fade","focused","CustomTextField","TextField","InputProps","disableUnderline","InputUser","error","type","onKeyEnter","marginBottom","input","InputLabel","undefined","onKeyDown","pink","ContentLoginUser","onCreate","setEmail","setPassword","helperEmail","setHelperEmail","helperPassword","setHelperPassword","submit","validationEmail","call","code","ContentCreateUser","onLogin","setUsername","confirmedPassword","setConfirmedPassword","helperUsername","setHelperUsername","helperConfirmedPassword","setHelperConfirmedPassword","validationUsername","checkUsername","validaionPassword","checkPassword","validationConfirmpassword","confirmPassword","checkConfirmPassword","message","User","isLogin","setLogin","isCreate","setCreate","setAuth","setAuthDoc","toggleCreate","deleted","AuthButton","setOpen","HomePage","Grid","container","justify","item","Base","useStylesInput","InputBaseCalcul","base","ButtonReset","flexDirection","Calculator","base2","setBase2","base10","setBase10","base8","setBase8","base16","setBase16","baseN","displayErrorMessage","baseValue","binaryConvertor","isValide","stringNumberArray","split","isBinary","parseInt","bin","toString","toUpperCase","bin_to_hexa","bin_to_oct","decimalConvertor","dec","dec_to_bin","dec_to_hexa","dec_to_oct","hexadecimalConvertor","hexa","array","notBinaryLetter","y","toLowerCase","isHexadecimal","hexa_to_dec","hexa_to_oct","octalConvertor","oct","arrayOct","isOctal","oct_to_dec","oct_to_hexa","displayBase2","displayBase8","displayBase10","displayBase16","BaseCalculator","prevState","CommitBox","htmlUrl","setHtmlUrl","Headers","btoa","GITHUB_NAME","fetch","url","method","reponse","status","console","warn","json","html_url","Link","href","commit","CommitSkeleton","Skeleton","paddingBottom","CommitGitHub","apiCommit","isLoad","setLoad","fiveCommits","fiveFirstCommit","card","CardGitHubRepos","api","setApiCommit","commitsURL","commits_url","replace","commits","fetchApiCommit","name","GitHubAuthorInformation","skeletonRect","skeletonText","skeletonTextWhite","GitHubAuthorSkeleton","mr","GitHubAuthor","author","setAuthor","loading","setLoading","owner","finally","src","avatar_url","alt","company","location","followers","following","skeletonBox","CardGitHubSkeleton","GitHubPages","apiRepos","setApi","box","Footer","bottom","firebaseHelper","path","node","ref","child","onValue","on","snapshot","val","onComplete","deleteValue","remove","editValue","InputChat","multiline","placeHolder","boxRoot","NewTopicInput","Content","style","avatar","contrastText","Userdate","date","Avatar","header","lineHeight","textOverflow","overFlow","CardTopic","keyName","onMouseOver","pl","UserdateSkeleton","CardTopicSkeleton","ListTopic","topic","Object","keys","reverse","topicArray","setTopic","firebaseTopic","SettingsButtonChat","onReset","CreateTopicInput","isAuth","setTitle","setMessage","helperMessage","setHelperMessage","helperTitle","setHelperTitle","reset","isReady","checkAvailableValue","CreateTopic","CreateTopicPage","redirect","setRedirect","actualAuth","user_id","DeleteButton","needRedirect","EditButton","setError","answer","SettingsTopicButton","topicID","userID","havePermission","setPermission","titleBox","infoBox","infoPaper","TopicView","SettingsAnswerButton","Divider","textPaper","fontStyle","userBox","AnswerComponent","Answer","reponseArray","TopicAnswerInput","setUser","helperUser","setHelperUser","checkUser","checkMessage","userValide","messageValide","TopicSkeleton","Topic","RedirectTopic","Child","topicUrl","useParams","ForumBar","Forum","createMuiTheme","default","typography","subtitle1","fontFamily","join","overrides","MuiButton","responsiveFontSizes","Boolean","window","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","ThemeProvider","CssBaseline","pb","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ab47de2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Box, useTheme, Fade } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\ntype TypeListWordBox = {\n  children: string;\n  index: number;\n  onDelete: Function;\n};\nexport default function BoxMakeSentence({ index, children, onDelete }: TypeListWordBox) {\n  const [isHover, setHover] = useState<boolean>(false);\n  const theme = useTheme();\n\n  const toggleHover = (state: boolean) => {\n    setHover(state);\n  };\n\n  return (\n    <Box\n      position=\"relative\"\n      onMouseEnter={() => toggleHover(true)}\n      onMouseLeave={() => toggleHover(false)}\n      onClick={() => onDelete(index)}\n      m={1}\n      p={0.5}\n      borderRadius={2}\n      border={1}\n      color={theme.palette.primary.main}\n      borderColor={theme.palette.primary.main}\n      fontSize=\"body1.fontSize\"\n      pr={2.2}\n    >\n      {children}\n      <Box position=\"absolute\" right={-2} top={4.5}>\n        <Fade in={isHover}>\n          <CloseIcon fontSize=\"small\" />\n        </Fade>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport BoxMakeSentence from \"./BoxMakeSentence\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\ntype TypeListMakeSentence = {\n  wordList: Array<string>;\n  toggleDeleteWord: Function;\n};\nexport default function ListMakeSentence({ wordList, toggleDeleteWord }: TypeListMakeSentence) {\n  return (\n    <Box minHeight={100} className=\"testLol\">\n      <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\">\n        <TransitionGroup className=\"listMakeSentence\">\n          {wordList.map((value, index) => (\n            <CSSTransition key={value} timeout={500} classNames=\"item\">\n              <BoxMakeSentence onDelete={toggleDeleteWord} index={index} key={index}>\n                {value}\n              </BoxMakeSentence>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, InputBase, Button } from \"@material-ui/core\";\n\ntype TypeInputMakeSentence = {\n  onKeyUp: Function;\n  inputValue: string;\n  onChange: Function;\n  onClick: Function;\n  classes: Record<\"inputBase\" | \"button\", string>;\n};\n\nexport default function InputMakeSentence({\n  onKeyUp,\n  inputValue,\n  onChange,\n  onClick,\n  classes\n}: TypeInputMakeSentence) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" mb={2}>\n      <Box width=\"100%\">\n        <InputBase\n          onKeyUp={event => onKeyUp(event)}\n          color=\"primary\"\n          className={classes.inputBase}\n          fullWidth\n          value={inputValue}\n          onChange={event => onChange(event)}\n          placeholder=\"sentence...\"\n        />\n      </Box>\n      <Button onClick={() => onClick()} className={classes.button} color=\"primary\">\n        Add\n      </Button>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Button, makeStyles, Fade, Theme } from \"@material-ui/core\";\nimport ListMakeSentence from \"./ListMakeSentence\";\nimport { Alert } from \"@material-ui/lab\";\nimport InputMakeSentence from \"./InputMakeSentence\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  inputBase: {\n    fontSize: 20,\n    transition: \"all .5\",\n    borderBottom: \"1px solid \" + theme.palette.primary.main,\n    \"&:action\": {\n      borderBottom: \"1px solid red\"\n    }\n  },\n  button: {\n    height: 40\n  },\n  boxWord: {\n    minWidth: 300\n  },\n  buttonRandom: {\n    width: \"78%\"\n  },\n  buttonReset: {\n    marginLeft: \"2px\",\n    width: \"20%\"\n  }\n}));\n\ntype TypeAddWord = {\n  wordList: Array<string>;\n  addWord: Function;\n  removeWord: Function;\n  toggleAdding: Function;\n  toggleClean: Function;\n};\n\nexport default function MakeSentence({\n  wordList,\n  addWord,\n  removeWord,\n  toggleAdding,\n  toggleClean\n}: TypeAddWord) {\n  const classes = useStyles();\n  const [sentence, setSentence] = useState<string>(\"\");\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n  const toggleChange = (event: any) => {\n    setSentence(event.target.value);\n  };\n\n  const toggleNewWord = () => {\n    if (sentence.length < 1 || sentence.length > 100) {\n      setErrorMessage(\"The sentence need to be between 1 and 100 caractères. \");\n      removeErrorMessage();\n      return;\n    }\n    for (let i = 0; i < wordList.length; i++) {\n      if (sentence === wordList[i]) {\n        setErrorMessage(\"This sentence aldery exist. \");\n        removeErrorMessage();\n        return;\n      }\n    }\n    addWord(sentence);\n    setSentence(\"\");\n  };\n\n  const removeErrorMessage = () => {\n    setTimeout(() => {\n      setErrorMessage(\"\");\n    }, 5000);\n  };\n\n  const toggleKeyEnter = (event: any) => {\n    const key = event.key;\n    if (key === \"Enter\") {\n      toggleNewWord();\n    }\n  };\n\n  return (\n    <Box>\n      <ListMakeSentence wordList={wordList} toggleDeleteWord={removeWord} />\n\n      <Box position=\"absolute\" top={10} left={30}>\n        <Fade in={errorMessage.length > 1}>\n          <Alert severity=\"error\">{errorMessage}</Alert>\n        </Fade>\n      </Box>\n\n      <InputMakeSentence\n        onChange={toggleChange}\n        onKeyUp={toggleKeyEnter}\n        onClick={toggleNewWord}\n        classes={classes}\n        inputValue={sentence}\n      />\n\n      <Button\n        className={classes.buttonRandom}\n        color=\"primary\"\n        onClick={() => toggleAdding()}\n        variant=\"outlined\"\n      >\n        Ramdomizzz\n      </Button>\n      <Button onClick={() => toggleClean()} color=\"secondary\" className={classes.buttonReset}>\n        Clean\n      </Button>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, makeStyles, Theme } from \"@material-ui/core\";\ntype TypeListWordBoxRandomiz = {\n  children: string;\n  index: number;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  first: {\n    color: theme.palette.primary.main,\n    fontWeigth: \"bold\"\n  },\n  other: {\n    color: theme.palette.primary.dark,\n    fontWeight: \"normal\"\n  }\n}));\n\nexport default function BoxShuffleSentence({ children, index }: TypeListWordBoxRandomiz) {\n  const classes = useStyles();\n  return (\n    <Box\n      fontSize=\"h5.fontSize\"\n      ml={1}\n      mt={0.5}\n      className={index === 0 ? classes.first : classes.other}\n    >\n      {index + 1}. {children}\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\ntype TypeCountDown = {\n  onFinish: Function;\n  timerTime: number;\n};\n\nexport default function ShuffleCountDown({ onFinish, timerTime }: TypeCountDown) {\n  const [countDown, setCountDown] = useState<number>(timerTime);\n  const startCountDown = () => {\n    setTimeout(() => {\n      setCountDown(countDown - 1);\n    }, 1000);\n  };\n  useEffect(() => {\n    startCountDown();\n  });\n\n  if (countDown === 0) {\n    onFinish();\n  }\n\n  return (\n    <Box bgcolor=\"dark\" color=\"white\" justifyContent=\"center\" p={2} display=\"flex\">\n      <Typography variant=\"h3\">{countDown}</Typography>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { ButtonGroup, Button, IconButton, makeStyles } from \"@material-ui/core\";\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\n\nconst useStyles = makeStyles(theme => ({\n  iconButton: {\n    border: \"1px solid \" + theme.palette.primary.dark\n  }\n}));\ntype TypeSettingsButtonShuffle = {\n  toggleRandomWord: Function;\n  toggleAdding: Function;\n};\nexport default function SettingsButtonShuffle({\n  toggleRandomWord,\n  toggleAdding\n}: TypeSettingsButtonShuffle) {\n  const classes = useStyles();\n  return (\n    <ButtonGroup fullWidth>\n      <Button color=\"primary\" variant=\"outlined\" onClick={() => toggleRandomWord()}>\n        Random\n      </Button>\n      <IconButton\n        className={classes.iconButton}\n        color=\"primary\"\n        onClick={() => toggleAdding()}\n        size=\"small\"\n      >\n        <KeyboardBackspaceIcon />\n      </IconButton>\n    </ButtonGroup>\n  );\n}\n","//Generate a random number\nexport function randomNumber(max: number) {\n  return Math.floor(Math.random() * max);\n}\n//Shuffle a list\nexport function shuffleList(list: Array<string>) {\n  const listCopy: Array<string> = [...list];\n  const listResult: Array<string> = [];\n  for (let i = 0; i < list.length; i++) {\n    const number = randomNumber(listCopy.length);\n    listResult.push(listCopy[number]);\n    listCopy.splice(number, 1);\n  }\n  return listResult;\n}\n\n//Binary to decimal\nexport function bin_to_dec(bin: string) {\n  return parseInt(bin, 2);\n}\n\nexport function bin_to_hexa(bin: string) {\n  return parseInt(bin, 2)\n    .toString(16)\n    .toUpperCase();\n}\n\nexport function bin_to_oct(bin: string) {\n  return parseInt(bin, 2).toString(8);\n}\n\nexport function isBinary(number: string) {\n  let isValide: boolean = true;\n\n  if (number.length === 0) {\n    return false;\n  }\n\n  const stringNumberArray: Array<String> = number.split(\"\");\n\n  for (let i = 0; i < stringNumberArray.length; i++) {\n    if (stringNumberArray[i] !== \"1\" && stringNumberArray[i] !== \"0\") {\n      isValide = false;\n    }\n  }\n\n  return isValide;\n}\n\nexport function dec_to_bin(dec: string) {\n  return (Number(dec) - 0).toString(2);\n}\n\nexport function dec_to_hexa(dec: string) {\n  return (Number(dec) - 0).toString(16).toUpperCase();\n}\n\nexport function dec_to_oct(dec: string) {\n  return (Number(dec) - 0).toString(8);\n}\n\nexport function isDecimal(dec: string) {\n  if (isNaN(Number(dec))) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nexport function isHexadecimal(hexa: string) {\n  if (hexa === \"0\" || hexa === \"\") {\n    return false;\n  }\n  const array = hexa.split(\"\");\n  const notBinaryLetter = [\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"'\",\n    '\"'\n  ];\n\n  for (let i = 0; i < array.length; i++) {\n    for (let y = 0; y < notBinaryLetter.length; y++) {\n      if (array[i].toLowerCase() === notBinaryLetter[y]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nexport function hexa_to_dec(hexa: string) {\n  return parseInt(hexa, 16);\n}\nexport function hexa_to_bin(hexa: string) {\n  return parseInt(hexa, 16).toString(2);\n}\nexport function hexa_to_oct(hexa: string) {\n  return parseInt(hexa, 16).toString(8);\n}\n\nexport function isOctal(oct: string) {\n  if (oct === \"0\" || oct === \"\") {\n    return false;\n  }\n  const arrayOct: Array<string> = oct.split(\"\");\n\n  for (let i = 0; i < arrayOct.length; i++) {\n    if (arrayOct[i] === \"9\" || arrayOct[i] === \"8\") {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function oct_to_dec(oct: string) {\n  return parseInt(oct, 8);\n}\nexport function oct_to_hexa(oct: string) {\n  return parseInt(oct, 8)\n    .toString(16)\n    .toUpperCase();\n}\nexport function oct_to_bin(oct: string) {\n  return parseInt(oct, 8).toString(2);\n}\n","import React, { useState } from \"react\";\nimport { Box, makeStyles, Theme } from \"@material-ui/core\";\nimport BoxShuffleSentence from \"./BoxShuffleSentence\";\nimport CountDown from \"./ShuffleCountDown\";\nimport SettingsButtonShuffle from \"../settingsDialog/SettingsButtonShuffle\";\nimport { shuffleList } from \"../../../utils/function\";\n\ntype TypeListRandomWord = {\n  wordList: Array<string>;\n  toggleAdding: Function;\n  isCountDown: boolean;\n  isOneSentence: boolean;\n  timerTime: number;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  boxShuffle: {\n    backgroundColor: theme.palette.divider\n  }\n}));\n\nexport default function ShuffleSentence({\n  wordList,\n  toggleAdding,\n  isCountDown,\n  isOneSentence,\n  timerTime\n}: TypeListRandomWord) {\n  const [isCountdown, setIsCountdown] = useState<boolean>(isCountDown);\n  const [listSentence, setListSentence] = useState<Array<string>>(shuffleList(wordList));\n\n  const classes = useStyles();\n\n  const toggleRandomWord = () => {\n    setListSentence(shuffleList(wordList));\n  };\n\n  const toggleCountDown = () => {\n    setIsCountdown(!isCountdown);\n  };\n\n  return (\n    <Box>\n      <Box p={1} m={1} className={classes.boxShuffle} borderRadius={3}>\n        {isCountdown ? (\n          <CountDown onFinish={toggleCountDown} timerTime={timerTime} />\n        ) : isOneSentence ? (\n          <BoxShuffleSentence index={0}>{listSentence[0]}</BoxShuffleSentence>\n        ) : (\n          listSentence.map((value, index) => (\n            <BoxShuffleSentence index={index} key={index}>\n              {value}\n            </BoxShuffleSentence>\n          ))\n        )}\n      </Box>\n      <Box m={1}>\n        <SettingsButtonShuffle\n          toggleRandomWord={toggleRandomWord}\n          toggleAdding={() => toggleAdding()}\n        />\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, makeStyles, IconButton } from \"@material-ui/core\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nconst useStyles = makeStyles({\n  button: {\n    width: 42,\n    height: 42\n  }\n});\n\nexport type TypeSettingsButton = {\n  onClick: Function;\n};\n\nexport default function SettingsButton({ onClick }: TypeSettingsButton) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box position=\"absolute\" top={10} right={10}>\n        <IconButton className={classes.button} color=\"secondary\" onClick={() => onClick()}>\n          <SettingsIcon className=\"buttonSafari\" color=\"secondary\" />\n        </IconButton>\n      </Box>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Box, Fab } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nexport default function HomePageLinkButton() {\n  return (\n    <Box position=\"absolute\" top={10} left={10} zIndex={5000}>\n      <Link to=\"/\">\n        <Fab color=\"primary\" variant=\"round\" size=\"small\">\n          <HomeIcon />\n        </Fab>\n      </Link>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { withStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Switch, { SwitchClassKey, SwitchProps } from \"@material-ui/core/Switch\";\n\ninterface Styles extends Partial<Record<SwitchClassKey, string>> {\n  focusVisible?: string;\n}\ninterface Props extends SwitchProps {\n  classes: Styles;\n}\nexport const CustomSwitch = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 50,\n      height: 30,\n      padding: 0,\n      margin: theme.spacing(1)\n    },\n    switchBase: {\n      padding: 1,\n      color: theme.palette.secondary.main,\n      \"&$checked\": {\n        transform: \"translateX(100px)\",\n        color: theme.palette.secondary.dark,\n        backgroundColor: \"none\",\n        \"& + $track\": {\n          backgroundColor: theme.palette.secondary.light,\n          opacity: 1,\n          border: `1px solid ${theme.palette.secondary.main}`\n        }\n      },\n      \"&$focusVisible $thumb\": {\n        color: \"orange\",\n        border: \"6px solid red\",\n        boxShadow: \"none\"\n      }\n    },\n    thumb: {\n      width: 20,\n      height: 20,\n      marginTop: 4,\n      marginLeft: 2\n    },\n    track: {\n      borderRadius: 10 / 2,\n      border: `1px solid ${theme.palette.divider}`,\n      backgroundColor: theme.palette.divider,\n      opacity: 1,\n      transition: theme.transitions.create([\"background-color\", \"border\"])\n    }\n  })\n)(({ classes, ...props }: Props) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked\n      }}\n      {...props}\n    />\n  );\n});\n","import React from \"react\";\nimport { DialogContent, Box, Typography, InputBase, Theme } from \"@material-ui/core\";\nimport { CustomSwitch } from \"../../Custom/CustomSwitch\";\nimport { makeStyles } from \"@material-ui/styles\";\n\ntype TypeSettingsContent = {\n  checked?: boolean;\n  onChange: Function;\n  children: string;\n  typeSettings: string;\n  cSwitch?: boolean;\n  value?: string;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  textField: {\n    width: 50,\n    borderBottom: \"1px solid \" + theme.palette.secondary.main,\n    paddingRight: 5,\n    textAlign: \"center\",\n    margin: 8\n  },\n  background: {\n    backgroundColor: theme.palette.divider\n  },\n  text: {}\n}));\n\nexport default function SettingsContent({\n  checked,\n  onChange,\n  children,\n  typeSettings,\n  cSwitch,\n  value\n}: TypeSettingsContent) {\n  const classes = useStyles();\n  const customClasses = useStyles();\n\n  //cSwitch define if is an Input or a Switch\n  if (!cSwitch) {\n    cSwitch = false;\n  }\n\n  const toggleChange = (event: any) => {\n    onChange(typeSettings, event.target.value);\n  };\n\n  return (\n    <DialogContent>\n      <Box\n        className={classes.background}\n        display=\"flex\"\n        alignItems=\"center\"\n        p={1}\n        borderRadius={5}\n        justifyContent=\"space-between\"\n      >\n        <Typography variant=\"body1\" className={classes.text}>\n          {children}\n        </Typography>\n\n        {cSwitch ? (\n          <CustomSwitch\n            checked={checked}\n            onChange={() => onChange(typeSettings)}\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n          />\n        ) : (\n          <InputBase value={value} onChange={toggleChange} className={customClasses.textField} />\n        )}\n      </Box>\n    </DialogContent>\n  );\n}\n","import React from \"react\";\nimport { Dialog, DialogTitle, makeStyles, DialogActions, Button } from \"@material-ui/core\";\nimport { TypeSettings } from \"../../../page/RandomSentence\";\nimport SettingsContent from \"./SettingsContent\";\n\ntype TypeSettingsDialog = {\n  open: boolean;\n  onClose: Function;\n  settings: TypeSettings;\n  onChange: Function;\n};\n\nconst useStyles = makeStyles(theme => ({\n  background: {},\n  text: {}\n}));\n\nexport default function SettingsDialog({ open, onClose, settings, onChange }: TypeSettingsDialog) {\n  const classes = useStyles();\n\n  return (\n    <Dialog onClose={() => onClose()} open={open}>\n      <DialogTitle>Settings Random Sentence</DialogTitle>\n      <SettingsContent\n        checked={settings.isCountDown}\n        onChange={onChange}\n        typeSettings=\"countDown\"\n        cSwitch\n      >\n        Activé le Timer avant d'afficher des réponses\n      </SettingsContent>\n      <SettingsContent\n        checked={settings.isOneSentence}\n        onChange={onChange}\n        typeSettings=\"oneSentence\"\n        cSwitch\n      >\n        Afficher que la première réponse random\n      </SettingsContent>\n      <SettingsContent\n        onChange={onChange}\n        value={String(settings.timerTime)}\n        typeSettings=\"timerTime\"\n      >\n        Seconde avant fin du timer\n      </SettingsContent>\n      <DialogActions className={classes.background}>\n        <Button color=\"secondary\" onClick={() => onClose()}>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Typography, makeStyles } from \"@material-ui/core\";\nimport MakeSentence from \"../components/randomSentence/make/MakeSentence\";\nimport ShuffleSentence from \"../components/randomSentence/shuffle/ShuffleSentence\";\nimport SettingsButton from \"../components/randomSentence/settingsDialog/SettingsButton\";\nimport HomePageLinkButton from \"../components/HomePage/HomePageLinkButton\";\nimport SettingsDialog from \"../components/randomSentence/settingsDialog/SettingsDialog\";\n\nexport type TypeSettings = {\n  isCountDown: boolean;\n  isOneSentence: boolean;\n  timerTime: number;\n};\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 12\n    }\n  },\n  mainBox: {\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default function RandomSentence() {\n  const classes = useStyles();\n  const [wordList, setWordList] = useState<Array<string>>([]);\n  const [isAdding, setAdding] = useState<boolean>(true);\n  const [settings, setSettings] = useState<TypeSettings>({\n    isCountDown: false,\n    isOneSentence: false,\n    timerTime: 10\n  });\n  const [openSettings, setOpenSettings] = useState<boolean>(false);\n\n  const toggleSettings = (value: string, param?: string) => {\n    switch (value) {\n      case \"countDown\":\n        setSettings({\n          isCountDown: !settings.isCountDown,\n          isOneSentence: settings.isOneSentence,\n          timerTime: settings.timerTime\n        });\n        break;\n      case \"oneSentence\":\n        setSettings({\n          isOneSentence: !settings.isOneSentence,\n          isCountDown: settings.isCountDown,\n          timerTime: settings.timerTime\n        });\n        break;\n      case \"timerTime\":\n        let paramNumber: number = 0;\n        if (!isNaN(Number(param))) {\n          paramNumber = Number(param);\n        }\n        setSettings({\n          isOneSentence: settings.isOneSentence,\n          isCountDown: settings.isCountDown,\n          timerTime: Number(paramNumber)\n        });\n\n        setSettings({\n          isOneSentence: settings.isOneSentence,\n          isCountDown: settings.isCountDown,\n          timerTime: Number(paramNumber)\n        });\n        break;\n    }\n  };\n\n  const handleSettings = () => {\n    setOpenSettings(!openSettings);\n  };\n\n  const addWord = (sentence: string) => {\n    const list = [...wordList];\n    list.push(sentence);\n    setWordList(list);\n  };\n\n  const removeWord = (index: number) => {\n    const list = [...wordList];\n    list.splice(index, 1);\n    setWordList(list);\n  };\n\n  const toggleAdding = () => {\n    if (wordList.length === 0) {\n      setWordList([\"one\", \"two\", \"three\"]);\n      return;\n    }\n    setAdding(!isAdding);\n  };\n\n  const clearWord = () => {\n    setWordList([]);\n  };\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <Box\n        mt={1}\n        p={2}\n        borderRadius={8}\n        position=\"relative\"\n        maxWidth={512}\n        width=\"100%\"\n        className={classes.mainBox}\n      >\n        <HomePageLinkButton />\n\n        <SettingsButton onClick={handleSettings} />\n\n        <SettingsDialog\n          settings={settings}\n          onChange={toggleSettings}\n          onClose={handleSettings}\n          open={openSettings}\n        />\n\n        <Box height={20} display={{ xs: \"block\", sm: \"none\", md: \"none\" }} />\n\n        <Typography className={classes.title} align=\"center\" variant=\"h4\">\n          Random you're sentence!\n        </Typography>\n\n        <Typography color=\"textSecondary\" align=\"center\" variant=\"subtitle1\">\n          We gonna random all you're sentence to find a random list of your sentence.\n        </Typography>\n\n        {isAdding ? (\n          <MakeSentence\n            toggleClean={clearWord}\n            removeWord={removeWord}\n            addWord={addWord}\n            wordList={wordList}\n            toggleAdding={toggleAdding}\n          />\n        ) : (\n          <ShuffleSentence\n            timerTime={settings.timerTime}\n            isCountDown={settings.isCountDown}\n            isOneSentence={settings.isOneSentence}\n            wordList={wordList}\n            toggleAdding={toggleAdding}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  CardActionArea,\n  Typography,\n  Box,\n  makeStyles\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { TypeCustomCardHomePage } from \"../../utils/constante\";\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    textDecoration: \"none\"\n  }\n}));\n\nexport default function CustomCardHomePage({ image, title, body, link }: TypeCustomCardHomePage) {\n  const classes = useStyles();\n\n  return (\n    <Link to={link} className={classes.link}>\n      <Box maxWidth={384} maxHeight={448}>\n        <Card>\n          <CardActionArea>\n            <CardMedia height=\"150\" component=\"img\" image={image} />\n            <CardContent>\n              <Typography noWrap variant=\"h4\">\n                {title}\n              </Typography>\n              <Typography variant=\"body1\" color=\"textSecondary\">\n                {body}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </Box>\n    </Link>\n  );\n}\n","export const GITHUB_NAME = \"melvynx\";\n\nexport const GITHUB_KEY = \"cb15fc5496778827637f265238600794d28f3e07\";\n\nexport const WEBSITE_NAME = \"VonQey\";\n\nenum EnumRootDataBase {\n  prod = \"chat\",\n  ninja = \"chat_ninja\"\n}\n\nexport const ROOT_DATABASE: EnumRootDataBase = EnumRootDataBase.prod;\n\nexport type TypeTopic = {\n  title: string;\n  user: string;\n  user_id: string;\n  message: string;\n  date: string;\n  answer?: Array<TypeAnswerChat>;\n  auth?: TypeAuthForum;\n  topicID?: string;\n};\n\nexport type TypeTopicList = {\n  topic: TypeTopic;\n  key: string;\n};\n\nexport type TypeAnswerChat = {\n  user_id: string;\n  user: string;\n  message: string;\n  date: string;\n};\n\nexport type TypeArrayAnswer = {\n  key: string;\n  val: TypeAnswerChat;\n};\n\nexport type TypeAuthDoc = {\n  group: string;\n  created_at: number;\n  username: string;\n};\n\nexport type TypeAuthForum = {\n  auth: any;\n  collection: TypeAuthDoc;\n};\n//HomePage : Array of card\n\nexport const cardHomePage: Array<TypeCustomCardHomePage> = [\n  {\n    image:\n      \"https://images.unsplash.com/photo-1494253109108-2e30c049369b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n    title: \"Shuffle Sentence !\",\n    body:\n      \"It's an application to shuffle how many sentence you want, you can't have one result, or a numbered list for result !\",\n    link: \"/randomword\"\n  },\n  {\n    image:\n      \"https://img.freepik.com/vettori-gratuito/collezione-di-numeri-colorati-con-design-piatto_23-2147811939.jpg?size=338&ext=jpg\",\n    title: \"Base convertor\",\n    body:\n      \"Calculator for change base 2 to base 10 and base 16, or inverse ! It's in really time, faster and easy !\",\n    link: \"/transform\"\n  },\n  {\n    image:\n      \"https://opensource.com/sites/default/files/styles/image-full-size/public/lead-images/github-universe.jpg?itok=lwRZddXA\",\n    title: \"GitHub MelvynX\",\n    body: \"It's a page who resens my GitHub pages !!! We can see all repos.\",\n    link: \"/github\"\n  },\n  {\n    image:\n      \"https://media.istockphoto.com/illustrations/forum-special-blue-banner-background-illustration-id1017086734?k=6&m=1017086734&s=170667a&w=0&h=6GzMMFXCAeXQl7Q_fUTscOS6rhHnRGFx5CXRnnmNB-I=\",\n    title: \"Simple Forum\",\n    body: \"Create you're Topic. Search you're idea. Let's you're mine.\",\n    link: \"/forum\"\n  }\n];\n\n//Type\n\nexport type TypeCustomCardHomePage = {\n  image: string;\n  title: string;\n  body: string;\n  link: string;\n};\n","import * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nexport function authHelper() {\n  const auth = firebase.auth();\n  const db = firebase.firestore();\n\n  function create(\n    email: string,\n    password: string,\n    user: string,\n    callback: Function,\n  ) {\n    if (email && password) {\n      auth\n        .createUserWithEmailAndPassword(email, password)\n        .then((cred: firebase.auth.UserCredential) => {\n          if (cred.user) {\n            const localTime = new Date().getTime();\n            db.collection(\"users\")\n              .doc(cred.user.uid)\n              .set({ group: \"user\", created_at: localTime, username: user });\n\n            cred.user.updateProfile({\n              displayName: user\n            });\n          }\n        })\n\n        .catch(e => {\n          callback(e);\n        });\n    }\n  }\n\n  async function login(email: string, password: string, callback: Function) {\n    auth.signOut();\n    auth.signInWithEmailAndPassword(email, password).catch(e => callback(e));\n  }\n\n  function authListener(callback: Function) {\n    auth.onAuthStateChanged(firebaseUser => {\n      callback(firebaseUser);\n    });\n  }\n\n  function getCollection(uid: string, callback: Function) {\n    return db\n      .collection(\"users\")\n      .doc(uid)\n      .get()\n      .then(value => callback(value.data()));\n  }\n\n  function logout() {\n    auth.signOut();\n  }\n\n  return {\n    create,\n    authListener,\n    login,\n    logout,\n    getCollection\n  };\n}\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\n\ntype TypeUservalue = {\n  label: string;\n  children: string;\n};\n\nexport default function Uservalue({ label, children }: TypeUservalue) {\n  return (\n    <Box display=\"flex\" m={1}>\n      <Box width=\"50%\">\n        <Typography align=\"left\" variant=\"body1\">\n          {label}\n        </Typography>\n      </Box>\n      <Box width=\"50%\">\n        <Typography color=\"primary\" align=\"right\" variant=\"body1\">\n          {children}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { DialogTitle, DialogContent, DialogActions, Button } from \"@material-ui/core\";\nimport { TypeAuthDoc } from \"../../utils/constante\";\nimport Uservalue from \"../utils/Uservalue\";\n\ntype TypeUserAccount = {\n  auth: any;\n  authDoc: TypeAuthDoc;\n  onClose: Function;\n  onLogout: Function;\n};\n\nexport default function UserAccount({ auth, onClose, authDoc, onLogout }: TypeUserAccount) {\n  return (\n    <>\n      <DialogTitle>Hi {auth.displayName}</DialogTitle>\n      <DialogContent>\n        <Uservalue label=\"Email adresse\">{auth.email}</Uservalue>\n        <Uservalue label=\"User Group\">{authDoc.group}</Uservalue>\n        <Uservalue label=\"Account created at\">\n          {new Date(authDoc.created_at).toLocaleString()}\n        </Uservalue>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={() => onLogout()}>\n          Logout\n        </Button>\n        <Button color=\"secondary\" onClick={() => onClose()}>\n          Close\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n","export function checkUsername(username: string) {\n  if (username.length > 20 || username.length < 3) {\n    return { helperText: \"Username need to have between 3 and 20 caracteres.\", state: false };\n  }\n  return { helperText: \"\", state: true };\n}\n\nexport function checkEmail(email: string) {\n  const reggex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const isValidate = reggex.test(email);\n  if (!isValidate) {\n    return { helperText: \"Email not respect email verification.\", state: false };\n  }\n  return { helperText: \"\", state: true };\n}\n\nexport function checkPassword(password: string) {\n  const reggex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\n  const isValidate = reggex.test(password);\n\n  if (!isValidate) {\n    return {\n      helperText:\n        \"Passowrd need to have : 1 uppercase and lowercase letter, 1 number, 8 caractères.\",\n      state: false\n    };\n  }\n  return { helperText: \"\", state: true };\n}\n\nexport function checkConfirmPassword(password: string, confirmPassword: string) {\n  if (password !== confirmPassword) {\n    return { helperText: \"Confirm password doesn't match with password.\", state: false };\n  }\n  return { helperText: \"\", state: true };\n}\n","import React from \"react\";\nimport {\n  TextField,\n  makeStyles,\n  fade,\n  TextFieldProps,\n  OutlinedInputProps,\n  createStyles,\n  Theme\n} from \"@material-ui/core\";\n\nconst useStylesReddit = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid \" + theme.palette.primary.dark,\n      color: theme.palette.text.primary,\n      padding: 1.5,\n      paddingLeft: 6,\n      borderRadius: 3,\n      fontSize: 18,\n      minHeight: 38,\n      overflow: \"hidden\",\n      backgroundColor: theme.palette.background.paper,\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n      \"&:hover\": {\n        boxShadow: `${fade(theme.palette.primary.main, 0.15)} 1px 1px 0 2px`\n      },\n      \"&$focused\": {\n        boxShadow: `${fade(theme.palette.primary.main, 0.5)} 0 0 0 2px`,\n        borderColor: theme.palette.primary.dark\n      }\n    },\n    focused: {}\n  })\n);\n\nexport default function CustomTextField(props: TextFieldProps) {\n  const classes = useStylesReddit();\n\n  return (\n    <TextField\n      InputProps={{ classes, disableUnderline: true } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n","import React from \"react\";\nimport { Box, makeStyles, InputLabel, Theme } from \"@material-ui/core\";\nimport { pink } from \"@material-ui/core/colors\";\nimport CustomTextField from \"../../components/Custom/CustomTextField\";\n\ntype TypeInputChat = {\n  value: string;\n  onChange: Function;\n  error?: boolean;\n  helperText?: string;\n  label: string;\n  type?: string;\n  onKeyEnter?: Function;\n};\n\nexport default function InputUser({\n  value,\n  label,\n  onChange,\n  error,\n  helperText,\n  type,\n  onKeyEnter\n}: TypeInputChat) {\n  const useStyles = makeStyles((theme: Theme) => ({\n    label: {\n      fontSize: 14,\n      color: theme.palette.primary.main,\n      marginBottom: 3,\n      marginLeft: 4\n    },\n    input: {\n      padding: 5\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Box width=\"100%\">\n      <InputLabel className={classes.label}>{label}</InputLabel>\n      <CustomTextField\n        type={type ? type : undefined}\n        onChange={event => onChange(event)}\n        className={classes.input}\n        onKeyDown={event => {\n          if (event.key === \"Enter\") {\n            if (onKeyEnter) {\n              onKeyEnter();\n            }\n          }\n        }}\n        error={error}\n        value={value}\n        fullWidth\n        helperText={\n          <Box component=\"span\" color={pink[800]}>\n            {helperText}{\" \"}\n          </Box>\n        }\n      ></CustomTextField>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { DialogContent, DialogActions, Button, DialogTitle } from \"@material-ui/core\";\nimport { checkEmail } from \"../utils/checkUser\";\nimport { authHelper } from \"../../utils/authHelper\";\nimport InputUser from \"../utils/InputUser\";\n\ntype TypeContentCreateUser = {\n  onClose: Function;\n  onCreate: Function;\n};\n\nexport default function ContentLoginUser({ onClose, onCreate }: TypeContentCreateUser) {\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [helperEmail, setHelperEmail] = useState<string>(\"\");\n  const [helperPassword, setHelperPassword] = useState<string>(\"\");\n\n  const submit = () => {\n    const validationEmail = checkEmail(email);\n    if (validationEmail.state) {\n      const { login } = authHelper();\n      login(email, password, (call: any) => {\n        switch (call.code) {\n          case \"auth/wrong-password\":\n            setHelperPassword(\"\");\n            setHelperPassword(\"Wrong password.\");\n            break;\n          case \"auth/user-not-found\":\n            setHelperEmail(\"Email adresse was not found.\");\n            setHelperPassword(\"Password was not found\");\n            break;\n          default:\n        }\n      });\n    } else {\n      setHelperEmail(validationEmail.helperText);\n    }\n  };\n\n  return (\n    <>\n      <DialogTitle>Login to you're account.</DialogTitle>\n      <DialogContent>\n        <InputUser\n          value={email}\n          label=\"Email\"\n          type=\"email\"\n          onChange={(event: any) => setEmail(event.target.value)}\n          helperText={helperEmail}\n        />\n        <InputUser\n          value={password}\n          label=\"Password\"\n          type=\"password\"\n          onChange={(event: any) => setPassword(event.target.value)}\n          helperText={helperPassword}\n          onKeyEnter={submit}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"primary\" onClick={() => onCreate()}>\n          Create a account\n        </Button>\n        <Button color=\"primary\" onClick={submit}>\n          Submit\n        </Button>\n        <Button color=\"secondary\" onClick={() => onClose()}>\n          Close\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  DialogContent,\n  DialogActions,\n  Button,\n  DialogTitle\n} from \"@material-ui/core\";\nimport {\n  checkEmail,\n  checkUsername,\n  checkPassword,\n  checkConfirmPassword\n} from \"../utils/checkUser\";\nimport { authHelper } from \"../../utils/authHelper\";\nimport InputUser from \"../utils/InputUser\";\n\ntype TypeContentCreateUser = {\n  onClose: Function;\n  onLogin: Function;\n};\n\nexport default function ContentCreateUser({\n  onClose,\n  onLogin\n}: TypeContentCreateUser) {\n  const [email, setEmail] = useState<string>(\"\");\n  const [username, setUsername] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [confirmedPassword, setConfirmedPassword] = useState<string>(\"\");\n  const [helperEmail, setHelperEmail] = useState<string>(\"\");\n  const [helperUsername, setHelperUsername] = useState<string>(\"\");\n  const [helperPassword, setHelperPassword] = useState<string>(\"\");\n  const [helperConfirmedPassword, setHelperConfirmedPassword] = useState<\n    string\n  >(\"\");\n\n  const submit = () => {\n    const validationEmail = checkEmail(email);\n    const validationUsername = checkUsername(username);\n    const validaionPassword = checkPassword(password);\n    const validationConfirmpassword = checkConfirmPassword(\n      password,\n      confirmedPassword\n    );\n\n    if (\n      validationEmail.state &&\n      validaionPassword.state &&\n      validationConfirmpassword.state &&\n      validationUsername.state\n    ) {\n      const { create } = authHelper();\n      create(email, password, username, (error: any) => {\n        setHelperEmail(error.message);\n      });\n    } else {\n      setHelperUsername(validationUsername.helperText);\n      setHelperEmail(validationEmail.helperText);\n      setHelperPassword(validaionPassword.helperText);\n      setHelperConfirmedPassword(validationConfirmpassword.helperText);\n    }\n  };\n\n  return (\n    <>\n      <DialogTitle>Create an account !</DialogTitle>\n      <DialogContent>\n        <InputUser\n          value={username}\n          label=\"Username\"\n          onChange={(event: any) => setUsername(event.target.value)}\n          helperText={helperUsername}\n        />\n        <InputUser\n          value={email}\n          label=\"Email\"\n          type=\"email\"\n          onChange={(event: any) => setEmail(event.target.value)}\n          helperText={helperEmail}\n        />\n        <InputUser\n          value={password}\n          label=\"Password\"\n          type=\"password\"\n          onChange={(event: any) => setPassword(event.target.value)}\n          helperText={helperPassword}\n        />\n        <InputUser\n          value={confirmedPassword}\n          label=\"Confirm password\"\n          type=\"password\"\n          onChange={(event: any) => setConfirmedPassword(event.target.value)}\n          helperText={helperConfirmedPassword}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"primary\" onClick={() => onLogin()}>\n          Already have a account\n        </Button>\n        <Button color=\"primary\" onClick={submit}>\n          Submit\n        </Button>\n        <Button color=\"secondary\" onClick={() => onClose()}>\n          Close\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Dialog } from \"@material-ui/core\";\nimport { authHelper } from \"../../utils/authHelper\";\nimport ContentUserAccount from \"./ContentUserAccount\";\nimport ContentLoginUser from \"../Login/ContentLoginUser\";\nimport ContentCreateUser from \"../Create/ContentCreateUser\";\nimport { TypeAuthDoc } from \"../../utils/constante\";\n\ntype TypeCreateUser = {\n  open: boolean;\n  onClose: Function;\n};\n\nexport default function User({ open, onClose }: TypeCreateUser) {\n  const [isLogin, setLogin] = useState<boolean>(false);\n  const [isCreate, setCreate] = useState<boolean>(false);\n  const [auth, setAuth] = useState<any>();\n  const [authDoc, setAuthDoc] = useState<TypeAuthDoc>({\n    group: \"\",\n    created_at: 0,\n    username: \"\"\n  });\n\n  const { authListener, getCollection, logout } = authHelper();\n\n  const toggleCreate = (state: boolean) => {\n    setCreate(state);\n  };\n\n  const onLogout = () => {\n    logout();\n  };\n\n  useEffect(() => {\n    let deleted = false;\n\n    authListener((auth: any) => {\n      //If component is delete, do nothing\n      if (deleted) {\n        return;\n      }\n      if (auth) {\n        setAuth(auth);\n        setLogin(true);\n        getCollection(auth.uid, (doc: TypeAuthDoc) => setAuthDoc(doc));\n      } else {\n        setLogin(false);\n        setAuth(null);\n        setAuthDoc({ group: \"\", created_at: 1, username: \"\" });\n      }\n    });\n    //Set component on unmounted\n    return () => {\n      deleted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Dialog open={open} onClose={() => onClose()} fullWidth>\n      {isLogin ? (\n        <ContentUserAccount onClose={onClose} auth={auth} authDoc={authDoc} onLogout={onLogout} />\n      ) : isCreate ? (\n        <ContentCreateUser onClose={onClose} onLogin={() => toggleCreate(false)} />\n      ) : (\n        <ContentLoginUser onClose={onClose} onCreate={() => toggleCreate(true)} />\n      )}\n    </Dialog>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Button } from \"@material-ui/core\";\nimport User from \"../../auth/User/User\";\n\nexport default function AuthButton() {\n  const [open, setOpen] = useState<boolean>(false);\n\n  return (\n    <Box position=\"absolute\" top={12} right={10}>\n      <Button color=\"primary\" variant=\"contained\" onClick={() => setOpen(true)}>\n        Account\n      </Button>\n\n      <User open={open} onClose={() => setOpen(false)} />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography, Grid } from \"@material-ui/core\";\nimport CustomCardHomePage from \"../components/HomePage/CustomCardHomePage\";\nimport { WEBSITE_NAME, cardHomePage } from \"../utils/constante\";\nimport AuthButton from \"../components/HomePage/AuthButton\";\n\nexport default function HomePage() {\n  return (\n    <Box alignItems=\"center\" textAlign=\"center\">\n      <AuthButton />\n      <Typography variant=\"h2\">{WEBSITE_NAME}</Typography>\n      <Typography variant=\"h4\">App by Melvyn</Typography>\n      <Typography variant=\"subtitle1\">It's an app for learn React.</Typography>\n      <Box m={2}>\n        <Grid container justify=\"center\" spacing={2}>\n          {cardHomePage.map(({ image, title, body, link }, index) => (\n            <Grid item key={index}>\n              <CustomCardHomePage link={link} image={image} title={title} body={body} />\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n\n/*\n,\n  {\n    image:\n      \"https://opensource.com/sites/default/files/styles/image-full-size/public/lead-images/github-universe.jpg?itok=lwRZddXA\",\n    title: \"GitHub MelvynX\",\n    body: \"It's a page who resens my GitHub pages !!!\",\n    link: \"/github\"\n  }*/\n","import React, { useState, ChangeEvent } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport InputBaseCalcul from \"./InputBaseCalcul\";\nimport {\n  isBinary,\n  bin_to_dec,\n  bin_to_hexa,\n  isDecimal,\n  dec_to_bin,\n  dec_to_hexa,\n  isHexadecimal,\n  hexa_to_dec,\n  hexa_to_bin,\n  isOctal,\n  oct_to_bin,\n  oct_to_dec,\n  oct_to_hexa,\n  hexa_to_oct,\n  dec_to_oct,\n  bin_to_oct\n} from \"../../utils/function\";\nimport { TypeSettings } from \"../../page/BaseCalculator\";\nimport ButtonReset from \"./ButtonReset\";\n\ntype TypeValue = {\n  value: string;\n  base: Base;\n};\n\nexport enum Base {\n  base16 = \"base 16\",\n  base10 = \"base 10\",\n  base8 = \"base 8\",\n  base2 = \"base 2\",\n  baseN = \"Base null\"\n}\n\ntype TypeCalculator = {\n  settings: TypeSettings;\n};\n\ntype TypeErrorMessage = {\n  base: Base;\n  error: string;\n};\n\nexport default function Calculator({ settings }: TypeCalculator) {\n  const [base2, setBase2] = useState<string>(\"\");\n  const [base10, setBase10] = useState<string>(\"\");\n  const [base8, setBase8] = useState<string>(\"\");\n  const [base16, setBase16] = useState<string>(\"\");\n\n  const [errorMessage, setErrorMessage] = useState<TypeErrorMessage>({\n    base: Base.baseN,\n    error: \"\"\n  });\n\n  const displayErrorMessage = (text: string, baseValue: Base) => {\n    setErrorMessage({ base: baseValue, error: text });\n  };\n\n  const changeBase2 = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    setBase2(event.target.value);\n\n    binaryConvertor(event.target.value);\n  };\n  const changeBase10 = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    setBase10(event.target.value);\n\n    decimalConvertor(event.target.value);\n  };\n  const changeBase16 = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    setBase16(event.target.value.toUpperCase());\n\n    hexadecimalConvertor(event.target.value);\n  };\n\n  const changeBase8 = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    setBase8(event.target.value);\n\n    octalConvertor(event.target.value);\n  };\n\n  const binaryConvertor = (value: string) => {\n    if (isBinary(value)) {\n      setBase10(String(bin_to_dec(value)));\n      setBase16(bin_to_hexa(value));\n      setBase8(bin_to_oct(value));\n      displayErrorMessage(\" \", Base.baseN);\n    } else {\n      displayErrorMessage(\"Binary number is null or invalid (only 0 and 1).\", Base.base2);\n    }\n  };\n\n  const decimalConvertor = (value: string) => {\n    if (isDecimal(value)) {\n      setBase2(dec_to_bin(value));\n      setBase16(dec_to_hexa(value));\n      setBase8(dec_to_oct(value));\n      displayErrorMessage(\" \", Base.baseN);\n    } else {\n      displayErrorMessage(\"Decimal number is null or invalid (only 0 to 9).\", Base.base10);\n    }\n  };\n\n  const hexadecimalConvertor = (value: string) => {\n    if (isHexadecimal(value)) {\n      setBase2(String(hexa_to_bin(value)));\n      setBase10(String(hexa_to_dec(value)));\n      setBase8(String(hexa_to_oct(value)));\n      displayErrorMessage(\" \", Base.baseN);\n    } else {\n      displayErrorMessage(\n        \"Hexadecimal number is null or invalid (only 0 to 9 and A to F)\",\n        Base.base16\n      );\n    }\n  };\n\n  const octalConvertor = (value: string) => {\n    if (isOctal(value)) {\n      setBase2(oct_to_bin(value));\n      setBase10(String(oct_to_dec(value)));\n      setBase16(oct_to_hexa(value));\n      displayErrorMessage(\" \", Base.baseN);\n    } else {\n      displayErrorMessage(\"Octal number is null or invalid (only 0 to 7)\", Base.base8);\n    }\n  };\n\n  const resetValue = () => {\n    setBase2(\"\");\n    setBase10(\"\");\n    setBase8(\"\");\n    setBase16(\"\");\n    displayErrorMessage(\" \", Base.baseN);\n  };\n\n  return (\n    <Box mt={2}>\n      <InputBaseCalcul\n        display={settings.displayBase2}\n        onChange={changeBase2}\n        base=\"Binary\"\n        value={base2}\n        helperText={errorMessage.base === Base.base2 ? errorMessage.error : \"\"}\n      ></InputBaseCalcul>\n\n      <InputBaseCalcul\n        display={settings.displayBase8}\n        onChange={changeBase8}\n        base=\"Octale\"\n        value={base8}\n        helperText={errorMessage.base === Base.base8 ? errorMessage.error : \"\"}\n      ></InputBaseCalcul>\n\n      <InputBaseCalcul\n        display={settings.displayBase10}\n        onChange={changeBase10}\n        base=\"Decimal\"\n        value={base10}\n        helperText={errorMessage.base === Base.base10 ? errorMessage.error : \"\"}\n      ></InputBaseCalcul>\n\n      <InputBaseCalcul\n        display={settings.displayBase16}\n        onChange={changeBase16}\n        base=\"Hexadecimal\"\n        value={base16}\n        helperText={errorMessage.base === Base.base16 ? errorMessage.error : \"\"}\n      ></InputBaseCalcul>\n\n      <ButtonReset onClick={resetValue} />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, makeStyles, InputLabel } from \"@material-ui/core\";\nimport CustomTextField from \"../Custom/CustomTextField\";\n\ntype TypeInputBaseCalcul = {\n  value: string;\n  base: string;\n  onChange: Function;\n  error?: boolean;\n  display?: boolean;\n  helperText: string;\n};\n\nconst useStylesInput = makeStyles(theme => ({\n  input: {\n    fontSize: 12,\n    color: theme.palette.primary.main,\n    marginBottom: 3\n  },\n  helperText: {\n    color: theme.palette.error.main\n  }\n}));\n\nexport default function InputBaseCalcul({\n  display,\n  value,\n  base,\n  onChange,\n  error,\n  helperText\n}: TypeInputBaseCalcul) {\n  const classes = useStylesInput();\n  return (\n    <Box width=\"100%\" m={0.8} pr={3} display={display ? \"block\" : \"none\"}>\n      <InputLabel className={classes.input}>{base}</InputLabel>\n      <CustomTextField\n        error={error}\n        onChange={event => onChange(event)}\n        fullWidth\n        value={value}\n        helperText={\n          <Box component=\"span\" className={classes.helperText}>\n            {helperText}{\" \"}\n          </Box>\n        }\n      ></CustomTextField>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Button } from \"@material-ui/core\";\n\ntype TypeButtonReset = {\n  onClick: Function;\n};\n\nexport default function ButtonReset({ onClick }: TypeButtonReset) {\n  return (\n    <Box display=\"flex\" justifyContent=\"right\" flexDirection=\"row-reverse\">\n      <Button onClick={() => onClick()} color=\"secondary\" className=\"safariRight\">\n        Reset\n      </Button>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Dialog, DialogTitle, DialogActions, Button } from \"@material-ui/core\";\nimport SettingsContent from \"../randomSentence/settingsDialog/SettingsContent\";\nimport { TypeSettings } from \"../../page/BaseCalculator\";\n\ntype TypeSettingsDialog = {\n  open: boolean;\n  onClose: Function;\n  settings: TypeSettings;\n  onChange: Function;\n};\n\nexport default function SettingsDialog({ open, onClose, settings, onChange }: TypeSettingsDialog) {\n  return (\n    <Dialog onClose={() => onClose()} open={open}>\n      <DialogTitle>Settings Random Sentence</DialogTitle>\n      <SettingsContent cSwitch checked={settings.displayBase2} onChange={onChange} typeSettings=\"2\">\n        Affiché la base 2\n      </SettingsContent>\n      <SettingsContent cSwitch checked={settings.displayBase8} onChange={onChange} typeSettings=\"8\">\n        Affiché la base 8\n      </SettingsContent>\n      <SettingsContent\n        cSwitch\n        checked={settings.displayBase10}\n        onChange={onChange}\n        typeSettings=\"10\"\n      >\n        Affiché la base 10\n      </SettingsContent>\n      <SettingsContent\n        cSwitch\n        checked={settings.displayBase16}\n        onChange={onChange}\n        typeSettings=\"16\"\n      >\n        Affiché la base 16\n      </SettingsContent>\n      <DialogActions>\n        <Button color=\"secondary\" onClick={() => onClose()}>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Typography, makeStyles } from \"@material-ui/core\";\nimport Calculator from \"../components/baseCalculator/Calculator\";\nimport HomePageLinkButton from \"../components/HomePage/HomePageLinkButton\";\nimport SettingsButton from \"../components/randomSentence/settingsDialog/SettingsButton\";\nimport SettingsDialog from \"../components/baseCalculator/SettingsDialog\";\n\nconst useStyles = makeStyles(theme => ({\n  title: {},\n  mainBox: {\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport type TypeSettings = {\n  displayBase2?: boolean;\n  displayBase8?: boolean;\n  displayBase10?: boolean;\n  displayBase16?: boolean;\n};\n\nexport default function BaseCalculator() {\n  const [settings, setSettings] = useState<TypeSettings>({\n    displayBase2: true,\n    displayBase8: false,\n    displayBase10: true,\n    displayBase16: true\n  });\n  const [openSettings, setOpenSettings] = useState<boolean>(false);\n\n  const handleSettings = () => {\n    setOpenSettings(!openSettings);\n  };\n\n  const handleChangeSettings = (value: string) => {\n    switch (value) {\n      case \"2\":\n        setSettings(prevState => {\n          return { ...prevState, displayBase2: !settings.displayBase2 };\n        });\n        break;\n      case \"8\":\n        setSettings(prevState => {\n          return { ...prevState, displayBase8: !settings.displayBase8 };\n        });\n        break;\n      case \"10\":\n        setSettings(prevState => {\n          return { ...prevState, displayBase10: !settings.displayBase10 };\n        });\n        break;\n      case \"16\":\n        setSettings(prevState => {\n          return { ...prevState, displayBase16: !settings.displayBase16 };\n        });\n    }\n  };\n\n  const classes = useStyles();\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <Box\n        mt={1}\n        p={2}\n        borderRadius={8}\n        position=\"relative\"\n        maxWidth={512}\n        width=\"100%\"\n        className={classes.mainBox}\n      >\n        <HomePageLinkButton />\n\n        <SettingsButton onClick={handleSettings} />\n\n        <SettingsDialog\n          onChange={handleChangeSettings}\n          onClose={handleSettings}\n          open={openSettings}\n          settings={settings}\n        />\n\n        <Typography className={classes.title} align=\"center\" variant=\"h4\">\n          Convert number\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\">\n          Convert your numbers in real time between base-16, base-10, base-8 and base-2.\n        </Typography>\n\n        <Calculator settings={settings} />\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Link, Typography, Theme } from \"@material-ui/core\";\nimport { GITHUB_KEY, GITHUB_NAME } from \"../../utils/constante\";\nimport { makeStyles } from \"@material-ui/styles\";\n\ntype TypeCommitBox = {\n  value: any;\n  index: number;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  mainBox: {\n    height: 40,\n    paddingLeft: 8,\n    paddingRight: 8,\n    alignItems: \"center\",\n    display: \"flex\",\n    transition: theme.transitions.create([\"background-color\"]),\n    \"&:hover\": {\n      backgroundColor: theme.palette.divider\n    }\n  }\n}));\n\nexport default function CommitBox({ value, index }: TypeCommitBox) {\n  const [htmlUrl, setHtmlUrl] = useState<string>(\"\");\n\n  const classes = useStyles();\n\n  const findLinkAPI = () => {\n    let headers = new Headers();\n\n    headers.set(\"Authorization\", \"Basic \" + btoa(GITHUB_NAME + \":\" + GITHUB_KEY));\n\n    fetch(value.url, {\n      method: \"GET\"\n      //headers: headers\n      //credentials: 'user:passwd'\n    }).then(function(reponse) {\n      if (reponse.status !== 200) {\n        console.warn(\"GitHub api has problem.(on commit url)\");\n        return \"error\";\n      }\n      reponse.json().then(function(url) {\n        setHtmlUrl(url.html_url);\n      });\n    });\n  };\n\n  const findUrl = () => {\n    if (htmlUrl.length < 1) {\n      findLinkAPI();\n    }\n  };\n\n  return (\n    <Box onMouseEnter={findUrl} className={classes.mainBox}>\n      <Link href={htmlUrl} className=\"removeUnderline customHoverLink\" target=\"_blank\">\n        <Box width=\"100%\" maxWidth={340}>\n          <Typography noWrap variant=\"body1\" className=\"customHoverLink\">\n            {value.commit.message}\n          </Typography>\n        </Box>\n      </Link>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nexport default function CommitSkeleton() {\n  return (\n    <Box>\n      <Box m={1.5} p={0}>\n        <Skeleton variant=\"text\" height={25} />\n        <Skeleton variant=\"text\" height={25} />\n        <Skeleton variant=\"text\" height={25} />\n        <Skeleton variant=\"text\" height={25} />\n        <Skeleton variant=\"text\" height={25} />\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Typography, makeStyles } from \"@material-ui/core\";\nimport CommitBox from \"./CommitBox\";\nimport CommitSkeleton from \"./Skeleton/CommitSkeleton\";\n\ntype TypeCommitGitHub = {\n  apiCommit: any;\n};\nconst useStyles = makeStyles(theme => ({\n  title: {\n    color: theme.palette.primary.light,\n    borderBottom: \"1px solid \" + theme.palette.primary.light,\n    width: 140,\n    paddingBottom: 0\n  }\n}));\nexport default function CommitGitHub({ apiCommit }: TypeCommitGitHub) {\n  const [isLoad, setLoad] = useState<boolean>(false);\n\n  const classes = useStyles();\n\n  if (apiCommit.length > 1) {\n    if (isLoad === false) {\n      setLoad(true);\n    }\n  }\n\n  const fiveFirstCommit = () => {\n    if (apiCommit.length > 4) {\n      let fiveCommits = [];\n      for (let i = 0; i < 5; i++) {\n        fiveCommits.push(apiCommit[i]);\n      }\n      return fiveCommits;\n    }\n    return apiCommit;\n  };\n\n  return (\n    <Box>\n      <Box ml={1.5}>\n        <Typography variant=\"h6\" className={classes.title}>\n          5 last commits\n        </Typography>\n      </Box>\n      {isLoad ? (\n        fiveFirstCommit().map((value: any, index: number) => (\n          <CommitBox value={value} index={index} key={index} />\n        ))\n      ) : (\n        <CommitSkeleton />\n      )}\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Typography, Box, CardContent, Button, Link, makeStyles } from \"@material-ui/core\";\nimport CommitGitHub from \"./CommitGitHub\";\nimport { GITHUB_KEY, GITHUB_NAME } from \"../../utils/constante\";\n\ntype TypeCardGItHubRepos = {\n  api: any;\n};\n\nconst useStyles = makeStyles(theme => ({\n  card: {}\n}));\n\nexport default function CardGitHubRepos({ api }: TypeCardGItHubRepos) {\n  const [apiCommit, setApiCommit] = useState([]);\n\n  const classes = useStyles();\n\n  const fetchApiCommit = () => {\n    let commitsURL = \"\";\n    if (api.commits_url) {\n      commitsURL = api.commits_url.replace(\"{/sha}\", \"\");\n    } else {\n      return;\n    }\n\n    let headers = new Headers();\n\n    headers.set(\"Authorization\", \"Basic \" + btoa(GITHUB_NAME + \":\" + GITHUB_KEY));\n\n    fetch(commitsURL, {\n      method: \"GET\"\n      //headers: headers\n      //credentials: 'user:passwd'\n    }).then(function(reponse) {\n      if (reponse.status !== 200) {\n        console.warn(\"GitHub api has problem.(on card repos)\");\n        return;\n      }\n\n      reponse.json().then(function(commits) {\n        setApiCommit(commits);\n        return;\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (apiCommit.length < 1) {\n      fetchApiCommit();\n    }\n  });\n\n  return (\n    <Box width=\"100%\" maxWidth={350}>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography color=\"textPrimary\" align=\"center\" variant=\"h4\">\n            {api.name}\n          </Typography>\n\n          <Typography color=\"textSecondary\" variant=\"subtitle2\" align=\"center\">\n            Created at {api.created_at}\n          </Typography>\n        </CardContent>\n\n        <CommitGitHub apiCommit={apiCommit}></CommitGitHub>\n\n        <Link href={api.html_url} target=\"_blank\" className=\"removeUnderline\">\n          <Box display=\"flex\" justifyContent=\"right\" m={1}>\n            <Button color=\"secondary\" size=\"small\" variant=\"text\">\n              Open repository\n            </Button>\n          </Box>\n        </Link>\n      </Card>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\ntype TypeGitHubAuthorInformation = {\n  children: string;\n  label: string;\n  align?: boolean;\n};\nexport default function GitHubAuthorInformation({\n  label,\n  children,\n  align\n}: TypeGitHubAuthorInformation) {\n  return (\n    <Box>\n      <Typography variant=\"h5\" color=\"primary\">\n        {label}\n      </Typography>\n      <Typography variant=\"h5\" color=\"textPrimary\">\n        {children}\n      </Typography>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Theme } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  skeletonRect: {},\n  skeletonText: {\n    backgroundColor: theme.palette.primary.main,\n    height: 35\n  },\n  skeletonTextWhite: {\n    backgroundColor: theme.palette.text.secondary,\n    height: 35\n  }\n}));\n\nexport default function GitHubAuthorSkeleton() {\n  const classes = useStyles();\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Box width={100} mr={4} height={100}>\n          <Skeleton className={classes.skeletonRect} variant=\"rect\" height=\"100%\"></Skeleton>\n        </Box>\n        <Skeleton\n          className={classes.skeletonTextWhite}\n          height={35}\n          variant=\"text\"\n          width={100}\n        ></Skeleton>\n      </Box>\n      <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"space-around\" m={3}>\n        <Box>\n          <Skeleton className={classes.skeletonTextWhite} width={125} variant=\"text\"></Skeleton>\n          <Skeleton className={classes.skeletonText} width={125} variant=\"text\"></Skeleton>\n        </Box>\n\n        <Box>\n          <Skeleton className={classes.skeletonTextWhite} width={125} variant=\"text\"></Skeleton>\n          <Skeleton className={classes.skeletonText} width={125} variant=\"text\"></Skeleton>\n        </Box>\n\n        <Box>\n          <Skeleton className={classes.skeletonTextWhite} width={125} variant=\"text\"></Skeleton>\n          <Skeleton className={classes.skeletonText} width={125} variant=\"text\"></Skeleton>\n        </Box>\n\n        <Box>\n          <Skeleton className={classes.skeletonTextWhite} width={125} variant=\"text\"></Skeleton>\n          <Skeleton className={classes.skeletonText} width={125} variant=\"text\"></Skeleton>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport GitHubAuthorInformation from \"./GitHubAuthorInformation\";\nimport { GITHUB_KEY, GITHUB_NAME } from \"../../utils/constante\";\nimport GitHubAuthorSkeleton from \"./Skeleton/GitHubAuthorSkeleton\";\n\ntype TypeGitHubAuthor = {\n  api: any;\n};\n\ntype GithuhAuthorType = {\n  login: string;\n  company: string;\n  avatar_url: string;\n  location: string;\n  followers: number;\n  following: number;\n};\n\nexport default function GitHubAuthor({ api }: TypeGitHubAuthor) {\n  const [author, setAuthor] = useState<GithuhAuthorType>();\n  const [loading, setLoading] = useState<Boolean>(false);\n\n  const findApiAuthor = () => {\n    let headers = new Headers();\n\n    headers.set(\"Authorization\", \"Basic \" + btoa(GITHUB_NAME + \":\" + GITHUB_KEY));\n\n    setLoading(true);\n    fetch(api[0].owner.url, {\n      method: \"GET\"\n      //headers: headers\n      //credentials: 'user:passwd'\n    })\n      .then(function(reponse) {\n        if (reponse.status !== 200) {\n          console.warn(\"GitHub api has problem.(on author)\");\n          return;\n        }\n\n        reponse.json().then(function(author) {\n          setAuthor(author);\n          return;\n        });\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    if (!author && !loading && api.length > 1) {\n      findApiAuthor();\n    }\n  }, [author, loading, api]);\n\n  return (\n    <Box m={2}>\n      {author ? (\n        <Box>\n          <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            <Box width={100} mr={4} height={100}>\n              <img\n                src={author.avatar_url}\n                width={100}\n                height={100}\n                alt={\"profil picture of \" + author.login}\n              />\n            </Box>\n            <Typography color=\"textPrimary\" variant=\"h3\">\n              {author.login}\n            </Typography>\n          </Box>\n          <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"space-around\" m={3}>\n            <GitHubAuthorInformation label=\"Company\">{author.company}</GitHubAuthorInformation>\n\n            <GitHubAuthorInformation label=\"Location\">{author.location}</GitHubAuthorInformation>\n\n            <GitHubAuthorInformation label=\"Followers\">\n              {String(author.followers)}\n            </GitHubAuthorInformation>\n\n            <GitHubAuthorInformation label=\"Following\">\n              {String(author.following)}\n            </GitHubAuthorInformation>\n          </Box>\n        </Box>\n      ) : (\n        <GitHubAuthorSkeleton />\n      )}\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Card, CardContent, Theme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  card: {\n    padding: 8\n  },\n  skeletonText: {\n    backgroundColor: theme.palette.primary.main,\n    height: 25\n  },\n  skeletonTextWhite: {\n    backgroundColor: theme.palette.text.secondary,\n    height: 25\n  },\n  skeletonBox: {\n    backgroundColor: theme.palette.secondary.main,\n    borderRadius: 3\n  }\n}));\n\nexport default function CardGitHubSkeleton() {\n  const classes = useStyles();\n  return (\n    <Box width={300}>\n      <Card className={classes.card}>\n        <CardContent>\n          <Skeleton className={classes.skeletonTextWhite} variant=\"text\"></Skeleton>\n\n          <Skeleton className={classes.skeletonTextWhite} variant=\"text\"></Skeleton>\n        </CardContent>\n\n        <Skeleton className={classes.skeletonText} width={100} variant=\"text\"></Skeleton>\n        <Skeleton className={classes.skeletonText} variant=\"text\"></Skeleton>\n        <Skeleton className={classes.skeletonText} variant=\"text\"></Skeleton>\n        <Skeleton className={classes.skeletonText} variant=\"text\"></Skeleton>\n        <Skeleton className={classes.skeletonText} variant=\"text\"></Skeleton>\n        <Skeleton className={classes.skeletonText} variant=\"text\"></Skeleton>\n\n        <Box display=\"flex\" justifyContent=\"right\" m={1}>\n          <Skeleton\n            className={classes.skeletonBox}\n            variant=\"rect\"\n            width={100}\n            height={25}\n          ></Skeleton>\n        </Box>\n      </Card>\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport CardGitHubRepos from \"../components/github/CardGitHubRepos\";\nimport GitHubAuthor from \"../components/github/GitHubAuthor\";\nimport HomePageLinkButton from \"../components/HomePage/HomePageLinkButton\";\nimport { GITHUB_NAME, GITHUB_KEY } from \"../utils/constante\";\nimport CardGitHubSkeleton from \"../components/github/Skeleton/CardGitHubSkeleton\";\n\nexport default function GitHubPages() {\n  const [apiRepos, setApi] = useState([]);\n\n  const fetchApiGitHub = () => {\n    let headers = new Headers();\n\n    headers.set(\"Authorization\", \"Basic \" + btoa(GITHUB_NAME + \":\" + GITHUB_KEY));\n\n    fetch(\"https://api.github.com/users/melvynx/repos\", {\n      method: \"GET\"\n      //headers: headers\n      //credentials: 'user:passwd'\n    }).then(function(reponse) {\n      if (reponse.status !== 200) {\n        console.warn(\"GitHub api has problem.(on repos)\");\n        return;\n      }\n\n      reponse.json().then(function(data) {\n        setApi(data);\n        return;\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (apiRepos.length < 1) {\n      fetchApiGitHub();\n    }\n  });\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <Box maxWidth={1000} width=\"100%\" position=\"relative\">\n        <HomePageLinkButton />\n\n        <GitHubAuthor api={apiRepos} />\n\n        <Grid container justify=\"center\" spacing={2}>\n          {apiRepos.length > 0\n            ? apiRepos.map((value, index) => (\n                <Grid item key={index}>\n                  <CardGitHubRepos api={value}></CardGitHubRepos>\n                </Grid>\n              ))\n            : [\"1\", \"2\", \"3\", \"4\", \"5\"].map((value, index) => (\n                <Grid item key={index}>\n                  <CardGitHubSkeleton />\n                </Grid>\n              ))}\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography, Theme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { WEBSITE_NAME } from \"../../utils/constante\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  box: {\n    backgroundColor: theme.palette.primary.dark\n  }\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <Box position=\"absolute\" className={classes.box} bottom={0} width=\"100%\" height={200}>\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        height=\"100%\"\n        width=\"100%\"\n        alignItems=\"center\"\n      >\n        <Typography color=\"textSecondary\" align=\"center\" variant=\"body1\">\n          <b>{WEBSITE_NAME}</b> Made By <b>MelvynX</b>\n        </Typography>\n        <Typography color=\"textSecondary\" align=\"center\" variant=\"body1\">\n          Deploy on GitHubPage\n        </Typography>\n        <Typography color=\"textSecondary\" align=\"center\" variant=\"body1\">\n          melvynx 2019\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n","import * as firebase from \"firebase\";\nimport \"firebase/database\";\n\nexport function firebaseHelper(path: string) {\n  const database = firebase.database();\n  const node = database.ref().child(path);\n\n  function onValue(callback: Function) {\n    node.on(\"value\", snapshot => callback(snapshot.val()));\n  }\n\n  function push(value: any, onComplete?: (a: Error | null) => any) {\n    node.push(value, onComplete);\n  }\n\n  function deleteValue() {\n    node.remove();\n  }\n\n  function editValue(value: any) {\n    node.set(value);\n  }\n\n  return {\n    onValue,\n    push,\n    node,\n    deleteValue,\n    editValue\n  };\n}\n","import React from \"react\";\nimport { Box, makeStyles, InputLabel, Theme } from \"@material-ui/core\";\nimport { pink } from \"@material-ui/core/colors\";\nimport CustomTextField from \"../../Custom/CustomTextField\";\n\ntype TypeInputChat = {\n  value: string;\n  onChange: Function;\n  error?: boolean;\n  helperText?: string;\n  label: string;\n  size?: number;\n  multiline?: boolean;\n  fullWidth?: boolean;\n  placeHolder?: string;\n  type?: string;\n};\n\nexport default function InputChat({\n  value,\n  label,\n  onChange,\n  error,\n  helperText,\n  size,\n  multiline,\n  fullWidth,\n  placeHolder,\n  type\n}: TypeInputChat) {\n  const useStyles = makeStyles((theme: Theme) => ({\n    label: {\n      fontSize: 14,\n      color: theme.palette.primary.main,\n      marginBottom: 3,\n      marginLeft: 4\n    },\n    input: {\n      padding: 5\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Box width=\"100%\">\n      <InputLabel className={classes.label}>{label}</InputLabel>\n      <CustomTextField\n        type={type ? type : undefined}\n        placeholder={placeHolder}\n        multiline={multiline}\n        onChange={event => onChange(event)}\n        className={classes.input}\n        error={error}\n        fullWidth={fullWidth}\n        value={value}\n        helperText={\n          <Box component=\"span\" color={pink[800]}>\n            {helperText}{\" \"}\n          </Box>\n        }\n      ></CustomTextField>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { makeStyles, Theme, Box } from \"@material-ui/core\";\nimport InputChat from \"../Utils/InputChat\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  boxRoot: {\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\"\n  },\n  link: {\n    textDecoration: \"none\"\n  }\n}));\n\nexport default function NewTopicInput() {\n  const classes = useStyles();\n\n  return (\n    <Box p={1} className={classes.boxRoot} width=\"100%\" borderRadius={8} mt={1}>\n      <Link className={classes.link} to=\"forum/newtopic\">\n        <InputChat\n          multiline\n          label=\"New Topic\"\n          fullWidth\n          placeHolder=\"Create a new Topic !\"\n          value={\"\"}\n          onChange={() => {}}\n        />\n      </Link>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\n\ntype TypeTextLine = {\n  children: string;\n};\n\nexport default function Content({ children }: TypeTextLine) {\n  return (\n    <Box>\n      {children.split(\"\\n\").map((item, i) => (\n        <Typography variant=\"body1\" key={i} color=\"textPrimary\" style={{ minHeight: 24 }}>\n          {item}{\" \"}\n        </Typography>\n      ))}\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Avatar, Box, Typography, makeStyles, Theme } from \"@material-ui/core\";\n\ntype TypeUserDate = {\n  user: string;\n  date: string;\n  auth?: boolean;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  }\n}));\n\nexport default function Userdate({ user, date, auth }: TypeUserDate) {\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box>\n        <Avatar className={classes.avatar} color=\"primary\">\n          {user[0]}\n        </Avatar>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" ml={1}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Typography variant=\"body1\">{user}</Typography>\n          {auth ? (\n            <img\n              src=\"images/validation.png\"\n              width={15}\n              height={15}\n              alt=\"validation\"\n              style={{ margin: 2 }}\n            />\n          ) : null}\n        </Box>\n\n        <Typography variant=\"subtitle1\">{new Date(date).toLocaleString()}</Typography>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Card, Box, makeStyles, CardContent, Typography, Fade } from \"@material-ui/core\";\nimport { TypeTopic } from \"../../../utils/constante\";\nimport { Link } from \"react-router-dom\";\nimport Content from \"../Utils/Content\";\nimport Userdate from \"../Topic/Userdate\";\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    backgroundColor: theme.palette.divider\n  },\n  title: {},\n  message: {\n    lineHeight: \"1.5em\",\n    maxHeight: \"150px\" /* height is 2x line-height, so two lines will display */,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  link: {\n    textDecoration: \"none\"\n  },\n  card: {\n    position: \"relative\"\n  },\n  overFlow: {\n    position: \"absolute\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    alignItems: \"flex-end\",\n    bottom: 0,\n    width: \"100%\",\n    height: 128,\n    background: \"linear-gradient(0deg, #1d1d1d 0%, #1d1d1d 1%, rgba(0,0,0,0) 70%)\"\n  }\n}));\n\ntype TypeCardTopic = {\n  value: TypeTopic;\n  keyName: string;\n};\n\nexport default function CardTopic({ value, keyName }: TypeCardTopic) {\n  const [isHover, setHover] = useState(false);\n  const classes = useStyles();\n  return (\n    <Link to={\"/forum/topic/\" + keyName} className={classes.link}>\n      <Box\n        width=\"100%\"\n        mt={1}\n        mb={2}\n        onMouseOver={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        className={classes.card}\n      >\n        <Card>\n          <Box className={classes.header} p={1} pl={2}>\n            <Typography color=\"textPrimary\" variant=\"h4\" className={classes.title}>\n              {value.title}\n            </Typography>\n            <Userdate user={value.user} date={value.date} />\n          </Box>\n          <CardContent className={classes.message}>\n            <Content>{value.message}</Content>\n          </CardContent>\n        </Card>\n        <Box className={classes.overFlow}>\n          <Fade in={isHover}>\n            <Typography variant=\"body1\" color=\"textSecondary\">\n              afficher\n            </Typography>\n          </Fade>\n        </Box>\n      </Box>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Box, makeStyles, Theme } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\ntype TypeUserDate = {\n  user: string;\n  date: string;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  avatar: {\n    backgroundColor: theme.palette.primary.main\n  }\n}));\n\nexport default function UserdateSkeleton() {\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box>\n        <Skeleton\n          variant=\"circle\"\n          width={40}\n          height={40}\n          color=\"primary\"\n          className={classes.avatar}\n        />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" ml={1}>\n        <Skeleton variant=\"text\" width={100} />\n        <Skeleton variant=\"text\" width={100} />\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Card, Box, makeStyles, CardContent } from \"@material-ui/core\";\nimport { TypeTopic } from \"../../../utils/constante\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport UserdateSkeleton from \"./UserdateSkeleton\";\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    backgroundColor: theme.palette.divider\n  },\n  title: {},\n  message: {\n    lineHeight: \"1.5em\",\n    maxHeight: \"150px\" /* height is 2x line-height, so two lines will display */,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  link: {\n    textDecoration: \"none\"\n  },\n  card: {\n    position: \"relative\"\n  },\n  overFlow: {\n    position: \"absolute\",\n    bottom: 0,\n    width: \"100%\",\n    height: 64,\n    background:\n      \"linear-gradient(0deg, rgba(36,0,26,1) 0%, rgba(29,29,29,1) 0%, rgba(44,44,44,0) 90%)\"\n  }\n}));\n\ntype TypeCardTopic = {\n  value: TypeTopic;\n  keyName: string;\n};\n\nexport default function CardTopicSkeleton() {\n  const classes = useStyles();\n  return (\n    <Box width=\"100%\" mt={1} mb={1} className={classes.card}>\n      <Card>\n        <Box className={classes.header} p={1} pl={2}>\n          <Skeleton variant=\"text\" width={200} height={30} />\n          <UserdateSkeleton />\n        </Box>\n        <CardContent className={classes.message}>\n          <Skeleton variant=\"text\" width=\"12\" />\n          <Skeleton variant=\"text\" width=\"12\" />\n          <Skeleton variant=\"text\" width=\"12\" />\n          <Skeleton variant=\"text\" width=\"12\" />\n          <Skeleton variant=\"text\" width=\"12\" />\n          <Skeleton variant=\"text\" width=\"12\" />\n        </CardContent>\n      </Card>\n      <Box className={classes.overFlow}></Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { TypeTopicList } from \"../../../utils/constante\";\nimport CardTopic from \"./CardTopic\";\nimport CardTopicSkeleton from \"../Skeleton/CardTopicSkeleton\";\n\ntype TypeListTopic = {\n  topic: any;\n};\n\nexport default function ListTopic({ topic }: TypeListTopic) {\n  const topicArray = () => {\n    const array: Array<TypeTopicList> = [];\n    Object.keys(topic).map((keyName: string, index) =>\n      array.push({ key: keyName, topic: topic[keyName] })\n    );\n    return array.reverse();\n  };\n\n  return (\n    <Box mt={2} mb={2}>\n      <Box>\n        {topic\n          ? topic.length === 0\n            ? [\"a\", \"b\", \"c\", \"d\"].map(value => (\n                <CardTopicSkeleton key={value} />\n              ))\n            : topicArray().map(value => (\n                <CardTopic\n                  key={value.key}\n                  keyName={value.key}\n                  value={value.topic}\n                />\n              ))\n          : null}\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { firebaseHelper } from \"../../../utils/firebaseHelper\";\nimport NewTopicInput from \"./NewTopicInput\";\nimport ListTopic from \"./ListTopic\";\nimport { TypeTopic, ROOT_DATABASE } from \"../../../utils/constante\";\n\nexport default function HomePage() {\n  const { onValue } = firebaseHelper(ROOT_DATABASE + \"/topic\");\n\n  const [topic, setTopic] = useState<Array<TypeTopic>>([]);\n\n  useEffect(() => {\n    let deleted = false;\n\n    onValue((firebaseTopic: any) => {\n      //If component deleted, do nothing\n      if (deleted) {\n        return;\n      }\n      setTopic(firebaseTopic);\n    });\n    //Set deleted on unmounted component\n    return () => {\n      deleted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <NewTopicInput />\n      <ListTopic topic={topic} />\n    </>\n  );\n}\n","import React from \"react\";\nimport { Box, Button } from \"@material-ui/core\";\n\ntype TypeSettingsButton = {\n  onReset: Function;\n  onCreate: Function;\n};\n\nexport default function SettingsButtonChat({ onReset, onCreate }: TypeSettingsButton) {\n  return (\n    <Box display=\"flex\" justifyContent=\"flex-end\">\n      <Box mr={3}>\n        <Button variant=\"text\" onClick={() => onReset()} color=\"secondary\">\n          Reset\n        </Button>\n      </Box>\n\n      <Button variant=\"contained\" color=\"primary\" onClick={() => onCreate()}>\n        Create\n      </Button>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport InputChat from \"../Utils/InputChat\";\nimport SettingsButtonChat from \"../Utils/SettingsButtonChat\";\n\ntype TypeCreateTopicInput = {\n  isAuth: boolean;\n  onCreate: Function;\n};\n\nexport default function CreateTopicInput({ isAuth, onCreate }: TypeCreateTopicInput) {\n  const [title, setTitle] = useState<string>(\"\");\n  const [username, setUsername] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n\n  const [helperUsername, setHelperUsername] = useState<string>(\"\");\n  const [helperMessage, setHelperMessage] = useState<string>(\"\");\n  const [helperTitle, setHelperTitle] = useState<string>(\"\");\n\n  const reset = () => {\n    setTitle(\"\");\n    setUsername(\"\");\n    setMessage(\"\");\n  };\n\n  const checkAvailableValue = () => {\n    let isReady = true;\n    if (!isAuth) {\n      if (username.length <= 2 || username.length > 30) {\n        setHelperUsername(\"Username need to be between 2 and 30 caractères.\");\n        isReady = false;\n      } else {\n        setHelperUsername(\"\");\n      }\n    }\n    if (title.length <= 6 || title.length > 50) {\n      setHelperTitle(\"Username need to be between 6 and 50 caractères.\");\n      isReady = false;\n    } else {\n      setHelperTitle(\"\");\n    }\n    if (message.length < 50 || message.length > 10000) {\n      setHelperMessage(\"Username need to be between 50 and 10000 caractères.\");\n      isReady = false;\n    } else {\n      setHelperMessage(\"\");\n    }\n    return isReady;\n  };\n\n  const create = () => {\n    if (checkAvailableValue()) {\n      reset();\n      onCreate(title, username, message);\n    }\n  };\n\n  return (\n    <Box>\n      <InputChat\n        label=\"Title\"\n        value={title}\n        onChange={(event: any) => setTitle(event.target.value)}\n        fullWidth\n        helperText={helperTitle}\n      />\n      {isAuth ? null : (\n        <InputChat\n          label=\"Username\"\n          value={username}\n          onChange={(event: any) => setUsername(event.target.value)}\n          helperText={helperUsername}\n        />\n      )}\n      <InputChat\n        multiline\n        label=\"Message\"\n        value={message}\n        onChange={(event: any) => setMessage(event.target.value)}\n        fullWidth\n        helperText={helperMessage}\n      />\n      <SettingsButtonChat onReset={reset} onCreate={create} />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, makeStyles, Theme, Typography } from \"@material-ui/core\";\nimport CreateTopicInput from \"./CreateTopicInput\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  boxRoot: {\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\"\n  }\n}));\n\ntype TypeCreateTopic = {\n  create: Function;\n  isAuth: boolean;\n};\n\nexport default function CreateTopic({ create, isAuth }: TypeCreateTopic) {\n  const createTopic = (title: string, username: string, message: string) => {\n    create(title, username, message);\n  };\n\n  const classes = useStyles();\n  return (\n    <Box p={1} className={classes.boxRoot} width=\"100%\" borderRadius={8} mt={1}>\n      <Typography align=\"center\" color=\"textPrimary\" variant=\"h3\">\n        Create you're Topic !\n      </Typography>\n      <Typography align=\"center\" color=\"textPrimary\" variant=\"h6\">\n        Create you're dream.\n      </Typography>\n\n      <CreateTopicInput isAuth={isAuth} onCreate={createTopic} />\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport CreateTopic from \"./CreateTopic\";\nimport { firebaseHelper } from \"../../../utils/firebaseHelper\";\nimport { ROOT_DATABASE } from \"../../../utils/constante\";\nimport { Redirect } from \"react-router-dom\";\nimport { authHelper } from \"../../../utils/authHelper\";\n\nexport default function CreateTopicPage() {\n  const [redirect, setRedirect] = useState<boolean>(false);\n  const [auth, setAuth] = useState();\n\n  const { authListener } = authHelper();\n\n  useEffect(() => {\n    authListener((actualAuth: any) => {\n      if (actualAuth) {\n        setAuth(actualAuth);\n      } else {\n        setAuth(undefined);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const { push } = firebaseHelper(ROOT_DATABASE + \"/topic\");\n\n  const createTopic = (title: string, username: string, message: string) => {\n    const date = new Date();\n\n    push({\n      title: title,\n      user_id: auth ? auth.uid : \"anonymous\",\n      user: auth ? auth.displayName : username,\n      message: message,\n      date: date.getTime()\n    });\n    setRedirect(true);\n  };\n\n  return redirect ? (\n    <Redirect to=\"/forum\" />\n  ) : (\n    <CreateTopic isAuth={auth ? true : false} create={createTopic} />\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Dialog, DialogTitle, DialogActions } from \"@material-ui/core\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { firebaseHelper } from \"../../../utils/firebaseHelper\";\nimport { Redirect } from \"react-router-dom\";\n\ntype TypeDeleteButton = {\n  path: string;\n  needRedirect?: boolean;\n  type: string;\n};\n\nexport default function DeleteButton({ path, needRedirect, type }: TypeDeleteButton) {\n  const [open, setOpen] = useState<boolean>(false);\n  const [redirect, setRedirect] = useState<boolean>(false);\n\n  const { deleteValue } = firebaseHelper(path);\n\n  const deleteTopic = () => {\n    if (needRedirect) {\n      setRedirect(true);\n    }\n    setTimeout(() => {\n      deleteValue();\n    }, 100);\n  };\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>\n        <DeleteForeverIcon />\n      </Button>\n      <Dialog open={open} onClose={() => setOpen(false)}>\n        <DialogTitle>Are you're sure to delete this {type} ?</DialogTitle>\n        <DialogActions>\n          <Button onClick={deleteTopic} color=\"secondary\">\n            Delete\n          </Button>\n          <Button onClick={() => setOpen(false)} color=\"primary\" variant=\"contained\">\n            Quit\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {redirect ? <Redirect to=\"/forum\" /> : null}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  DialogContent\n} from \"@material-ui/core\";\nimport { firebaseHelper } from \"../../../utils/firebaseHelper\";\nimport InputChat from \"../Utils/InputChat\";\n\ntype TypeEditButton = {\n  path: string;\n};\n\nexport default function EditButton({ path }: TypeEditButton) {\n  const [open, setOpen] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [title, setTitle] = useState<string>(\"\");\n  const [topic, setTopic] = useState();\n  const [error, setError] = useState<boolean>(false);\n\n  const { editValue, onValue } = firebaseHelper(path);\n\n  useEffect(() => {\n    //Var when componend deleted, go true, and stop effect\n    let deleted = false;\n    onValue((topic: any) => {\n      if (deleted) {\n        return;\n      }\n      if (topic) {\n        setMessage(topic.message);\n        setTitle(topic.title);\n        setTopic(topic);\n      }\n    });\n    return () => {\n      deleted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const editTopic = () => {\n    if (\n      title.length >= 6 &&\n      title.length <= 50 &&\n      message.length >= 50 &&\n      message.length <= 10000\n    ) {\n      editValue({\n        date: topic.date,\n        message: message,\n        title: title,\n        user: topic.user,\n        user_id: topic.user_id,\n        answer: topic.answer ? topic.answer : {}\n      });\n      setOpen(false);\n      setError(false);\n    } else {\n      setError(true);\n    }\n  };\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>\n        <EditIcon />\n      </Button>\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>Edit this topic :</DialogTitle>\n        <DialogContent>\n          <InputChat\n            label=\"New Title\"\n            fullWidth\n            onChange={(event: any) => setTitle(event.target.value)}\n            value={title}\n            helperText={\n              error ? \"Title need to have between 5 and 50 caracteres.\" : \"\"\n            }\n          />\n          <InputChat\n            label=\"New content\"\n            multiline\n            fullWidth\n            onChange={(event: any) => setMessage(event.target.value)}\n            value={message}\n            helperText={\n              error\n                ? \"Message need to have between 50 and 10000 caracteres.\"\n                : \"\"\n            }\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={editTopic} color=\"secondary\">\n            Save\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Quit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { TypeAuthForum, ROOT_DATABASE } from \"../../../utils/constante\";\nimport DeleteButton from \"./DeleteButton\";\nimport EditButton from \"./EditButton\";\n\ntype TypeSettingsTopicButton = {\n  auth?: TypeAuthForum;\n  topicID?: string;\n  userID: string;\n};\n\nexport default function SettingsTopicButton({ auth, topicID, userID }: TypeSettingsTopicButton) {\n  const [havePermission, setPermission] = useState();\n\n  useEffect(() => {\n    if (auth?.collection.group === \"admin\") {\n      setPermission(true);\n      return;\n    }\n    if (userID === auth?.auth.uid) {\n      setPermission(true);\n      return;\n    }\n    setPermission(false);\n  }, [auth, userID]);\n\n  return havePermission ? (\n    <Box display=\"flex\" justifyContent=\"flex-end\" width=\"100%\">\n      <DeleteButton needRedirect path={ROOT_DATABASE + \"/topic/\" + topicID} type=\"topic\" />\n\n      <EditButton path={ROOT_DATABASE + \"/topic/\" + topicID} />\n    </Box>\n  ) : null;\n}\n","import React from \"react\";\nimport { TypeTopic } from \"../../../utils/constante\";\nimport { Box, Typography, makeStyles, Theme } from \"@material-ui/core\";\nimport Content from \"../Utils/Content\";\nimport Userdate from \"./Userdate\";\nimport SettingsTopicButton from \"../Settings/SettingsTopicButton\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  title: {},\n  user: {},\n  mainBox: {\n    backgroundColor: theme.palette.background.paper\n  },\n  titleBox: {\n    backgroundColor: theme.palette.divider\n  },\n  infoBox: {},\n  infoPaper: {\n    backgroundColor: theme.palette.divider,\n    paddingLeft: 8\n  }\n}));\n\nexport default function TopicView({\n  title,\n  user,\n  message,\n  date,\n  auth,\n  topicID,\n  user_id\n}: TypeTopic) {\n  const classes = useStyles();\n  return (\n    <Box>\n      <Box className={classes.titleBox} p={1} pl={2} borderRadius={8}>\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          {title}\n        </Typography>\n        <Userdate\n          user={user}\n          date={date}\n          auth={user_id === \"anonymous\" ? false : true}\n        />\n      </Box>\n      <Box p={2}>\n        <Content>{message}</Content>\n      </Box>\n      <SettingsTopicButton auth={auth} topicID={topicID} userID={user_id} />\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Divider } from \"@material-ui/core\";\nimport { TypeAuthForum, ROOT_DATABASE } from \"../../../utils/constante\";\nimport DeleteButton from \"./DeleteButton\";\n\ntype TypeSettingsTopicButton = {\n  auth?: TypeAuthForum;\n  topicID?: string;\n  userID: string;\n  answer: string;\n};\n\nexport default function SettingsAnswerButton({\n  auth,\n  topicID,\n  userID,\n  answer\n}: TypeSettingsTopicButton) {\n  const [havePermission, setPermission] = useState();\n\n  useEffect(() => {\n    if (auth?.collection.group === \"admin\") {\n      setPermission(true);\n      return;\n    }\n    if (userID === auth?.auth.uid) {\n      setPermission(true);\n      return;\n    }\n    setPermission(false);\n  }, [auth, userID]);\n\n  return havePermission ? (\n    <>\n      <Box display=\"flex\" justifyContent=\"flex-end\" width=\"100%\">\n        <DeleteButton\n          path={ROOT_DATABASE + \"/topic/\" + topicID + \"/answer/\" + answer}\n          type=\"answer\"\n        />\n      </Box>\n      <Divider />\n    </>\n  ) : null;\n}\n","import React from \"react\";\nimport { Box, makeStyles, Theme } from \"@material-ui/core\";\nimport Content from \"../Utils/Content\";\nimport { TypeAnswerChat } from \"../../../utils/constante\";\nimport Userdate from \"./Userdate\";\nimport SettingsAnswerButton from \"../Settings/SettingsAnswerButton\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  title: {},\n  textPaper: {\n    fontStyle: \"italic\"\n  },\n  mainBox: {\n    backgroundColor: theme.palette.background.paper\n  },\n  userBox: {\n    backgroundColor: theme.palette.divider\n  },\n  paper: {\n    paddingLeft: 8,\n    backgroundColor: theme.palette.divider\n  }\n}));\n\ntype TypeAnswerComponent = {\n  reponse: TypeAnswerChat;\n  keyName: string;\n  topicID?: string;\n  auth: any;\n};\n\nexport default function AnswerComponent({ reponse, keyName, topicID, auth }: TypeAnswerComponent) {\n  const classes = useStyles();\n  return (\n    <Box mt={1} boxShadow={100} className={classes.mainBox} borderRadius={5} p={2} key={keyName}>\n      <Box className={classes.userBox} p={1} pl={2} borderRadius={8}>\n        <Userdate\n          user={reponse.user}\n          date={reponse.date}\n          auth={reponse.user_id === \"anonymous\" ? false : true}\n        />\n      </Box>\n      <Box p={2}>\n        <Content>{reponse.message}</Content>\n      </Box>\n      <SettingsAnswerButton\n        answer={keyName}\n        userID={reponse.user_id}\n        auth={auth}\n        topicID={topicID}\n      />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport AnswerComponent from \"./AnswerComponent\";\nimport { TypeArrayAnswer } from \"../../../utils/constante\";\n\ntype TypeAnswer = {\n  reponse?: any;\n  topicID?: string;\n  auth: any;\n};\n\nexport default function Answer({ reponse, auth, topicID }: TypeAnswer) {\n  const reponseArray = () => {\n    const array: Array<TypeArrayAnswer> = [];\n    Object.keys(reponse).map((keyName: string, index) =>\n      array.push({ key: keyName, val: reponse[keyName] })\n    );\n    return array;\n  };\n\n  return (\n    <Box>\n      {reponse ? (\n        <Box>\n          {reponseArray().map(value => (\n            <AnswerComponent\n              reponse={value.val}\n              auth={auth}\n              topicID={topicID}\n              keyName={value.key}\n              key={value.key}\n            />\n          ))}\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport InputChat from \"../Utils/InputChat\";\nimport SettingsButtonChat from \"../Utils/SettingsButtonChat\";\nimport { firebaseHelper } from \"../../../utils/firebaseHelper\";\nimport { ROOT_DATABASE, TypeAuthForum } from \"../../../utils/constante\";\n\ntype TypeTopicAnswerInput = {\n  topicID?: string;\n  auth?: TypeAuthForum;\n};\n\nexport default function TopicAnswerInput({ topicID, auth }: TypeTopicAnswerInput) {\n  const [user, setUser] = useState<string>(\"\");\n  const [helperUser, setHelperUser] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n  const [helperMessage, setHelperMessage] = useState<string>(\"\");\n  \n  const { push } = firebaseHelper(ROOT_DATABASE + \"/topic/\" + topicID + \"/answer\");\n\n  const reset = () => {\n    setUser(\"\");\n    setMessage(\"\");\n  };\n\n  const createAnswer = () => {\n    const userValide = auth?.auth ? true : checkUser();\n    const messageValide = checkMessage();\n    if (!userValide || !messageValide) {\n      return;\n    }\n\n    let date = new Date();\n    push({\n      user_id: auth ? auth.auth.uid : \"anonymous\",\n      user: auth ? auth.auth.displayName : user,\n      message: message,\n      date: date.getTime()\n    });\n    reset();\n  };\n\n  const checkUser = () => {\n    if (user.length < 3 || user.length >= 20) {\n      setHelperUser(\"Message need to be between 4 and 20 caracteres\");\n      return false;\n    }\n    setHelperUser(\"\");\n    return true;\n  };\n\n  const checkMessage = () => {\n    if (message.length < 5 || message.length > 2000) {\n      setHelperMessage(\"Message need to be between 6 and 2000 caracteres\");\n      return false;\n    }\n    setHelperMessage(\"\");\n    return true;\n  };\n\n  return (\n    <Box borderRadius={5} p={2}>\n      <Typography variant=\"h4\" color=\"textPrimary\">\n        Un avis ?\n      </Typography>\n      {auth ? null : (\n        <InputChat\n          label=\"Username\"\n          value={user}\n          helperText={helperUser}\n          onChange={(event: any) => {\n            setUser(event.target.value);\n          }}\n        />\n      )}\n      <InputChat\n        multiline\n        fullWidth\n        label=\"Message\"\n        value={message}\n        helperText={helperMessage}\n        onChange={(event: any) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <SettingsButtonChat onCreate={createAnswer} onReset={reset} />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Divider, makeStyles, Theme, Button } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport UserdateSkeleton from \"./UserdateSkeleton\";\nimport InputChat from \"../Utils/InputChat\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  title: {},\n  user: {},\n  mainBox: {\n    backgroundColor: theme.palette.background.paper\n  },\n  titleBox: {\n    backgroundColor: theme.palette.divider\n  },\n  infoBox: {},\n  infoPaper: {\n    backgroundColor: theme.palette.divider,\n    paddingLeft: 8\n  }\n}));\n\nexport default function TopicSkeleton() {\n  const classes = useStyles();\n  return (\n    <Box mt={1}>\n      <Box mt={1} boxShadow={100} className={classes.mainBox} borderRadius={5} p={2}>\n        <Box>\n          <Box className={classes.titleBox} p={1} pl={2} borderRadius={8}>\n            <Skeleton variant=\"text\" width={200} height={50} />\n            <UserdateSkeleton />\n          </Box>\n          <Box p={2}>\n            <Skeleton variant=\"text\" width={\"100%\"} height={30} />\n            <Skeleton variant=\"text\" width={\"100%\"} height={30} />\n            <Skeleton variant=\"text\" width={\"100%\"} height={30} />\n            <Skeleton variant=\"text\" width={\"100%\"} height={30} />\n            <Skeleton variant=\"text\" width={\"100%\"} height={30} />\n          </Box>\n        </Box>\n        <Divider />\n        <Box borderRadius={5} p={2}>\n          <Skeleton variant=\"text\" width={200} height={50} />\n          <InputChat value=\"\" onChange={() => {}} label=\"Message\" fullWidth />\n          <Box display=\"flex\" justifyContent=\"flex-end\">\n            <Box mr={3}>\n              <Button variant=\"contained\" color=\"secondary\">\n                <Skeleton variant=\"text\" width={50} height={25} />\n              </Button>\n            </Box>\n\n            <Button variant=\"contained\" color=\"primary\">\n              <Skeleton variant=\"text\" width={50} height={25} />\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Theme, Divider } from \"@material-ui/core\";\nimport { TypeTopic, TypeAuthForum, TypeAuthDoc } from \"../../../utils/constante\";\nimport TopicView from \"./TopicView\";\nimport Answer from \"./Answer\";\nimport TopicAnswerInput from \"./TopicAnswerInput\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { authHelper } from \"../../../utils/authHelper\";\nimport TopicSkeleton from \"../Skeleton/TopicSkeleton\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  mainBox: {\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\ntype TypeTopicComponent = {\n  topic?: TypeTopic;\n  topicID?: string;\n};\n\nexport default function Topic({ topic, topicID }: TypeTopicComponent) {\n  const [auth, setAuth] = useState<TypeAuthForum>();\n\n  const classes = useStyles();\n\n  const { authListener, getCollection } = authHelper();\n\n  useEffect(() => {\n    //Set variable for unmounted componend.\n    let deleted = false;\n    authListener((actualAuth: any) => {\n      //If the composent is unmounted, return.\n      if (deleted) {\n        return;\n      }\n\n      if (actualAuth) {\n        getCollection(actualAuth.uid, (doc: TypeAuthDoc) =>\n          setAuth({ auth: actualAuth, collection: doc })\n        );\n      } else {\n        setAuth(undefined);\n      }\n    });\n\n    return () => {\n      deleted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return topic ? (\n    <Box mt={1}>\n      <Box mt={1} boxShadow={100} className={classes.mainBox} borderRadius={5} p={2}>\n        <TopicView\n          topicID={topicID}\n          title={topic.title}\n          message={topic.message}\n          user={topic.user}\n          date={topic.date}\n          auth={auth}\n          user_id={topic.user_id}\n        />\n        <Divider />\n        <TopicAnswerInput auth={auth} topicID={topicID} />\n      </Box>\n      <Answer reponse={topic.answer} auth={auth} topicID={topicID} />\n    </Box>\n  ) : (\n    <TopicSkeleton />\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Route, useParams, Switch } from \"react-router-dom\";\nimport Topic from \"../components/Chat/Topic/Topic\";\nimport { firebaseHelper } from \"../utils/firebaseHelper\";\nimport { TypeTopic, ROOT_DATABASE } from \"../utils/constante\";\n\nexport default function RedirectTopic() {\n  return (\n    <Switch>\n      <Route path=\"/forum/topic/:topicUrl\" children={<Child />} />\n    </Switch>\n  );\n}\nfunction Child() {\n  const [topic, setTopic] = useState<TypeTopic>();\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { topicUrl } = useParams();\n  const { onValue } = firebaseHelper(ROOT_DATABASE + \"/topic/\" + topicUrl);\n\n  useEffect(() => {\n    let deleted = false;\n    onValue((firebaseTopic: any) => {\n      if (deleted) {\n        return;\n      }\n      setTopic(firebaseTopic);\n    });\n\n    return () => {\n      deleted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <Topic topic={topic} topicID={topicUrl} />;\n}\n","import React from \"react\";\nimport { Box, Fab, makeStyles, Theme } from \"@material-ui/core\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport HomePageLinkButton from \"../../HomePage/HomePageLinkButton\";\nimport AuthButton from \"../../HomePage/AuthButton\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  mainBox: {\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default function ForumBar() {\n  const classes = useStyles();\n\n  return (\n    <Box position=\"relative\" width=\"100%\" height={60} borderRadius={8} className={classes.mainBox}>\n      <HomePageLinkButton />\n      <Switch>\n        <Route path=\"/forum/topic\">\n          <Box position=\"absolute\" top={10} left={60} zIndex={5000}>\n            <Link to=\"/forum\">\n              <Fab color=\"primary\" variant=\"round\" size=\"small\">\n                <ArrowBackIcon />\n              </Fab>\n            </Link>\n          </Box>\n        </Route>\n        <Route path=\"/forum/newtopic\">\n          <Box position=\"absolute\" top={10} left={60} zIndex={5000}>\n            <Link to=\"/forum\">\n              <Fab color=\"primary\" variant=\"round\" size=\"small\">\n                <ArrowBackIcon />\n              </Fab>\n            </Link>\n          </Box>\n        </Route>\n      </Switch>\n      <AuthButton />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"../components/Chat/Home/HomePage\";\nimport CreateTopicPage from \"../components/Chat/CreateTopic/CreateTopicPage\";\nimport RedirectTopic from \"./RedirectTopic\";\nimport { Box } from \"@material-ui/core\";\nimport ForumBar from \"../components/Chat/Utils/ForumBar\";\n\nexport default function Forum() {\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" width=\"100%\">\n      <Box width=\"100%\" maxWidth={800}>\n        <ForumBar />\n        <Switch>\n          <Route path=\"/forum/topic\">\n            <RedirectTopic />\n          </Route>\n          <Route path=\"/forum/newtopic\">\n            <CreateTopicPage />\n          </Route>\n          <Route path=\"/forum/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nimport {\n  CssBaseline,\n  ThemeProvider,\n  createMuiTheme,\n  Box,\n  responsiveFontSizes\n} from \"@material-ui/core\";\nimport { Switch, HashRouter as Router, Route } from \"react-router-dom\";\nimport RandomSentence from \"./page/RandomSentence\";\nimport HomePage from \"./page/HomePage\";\nimport BaseCalculator from \"./page/BaseCalculator\";\nimport GitHubPages from \"./page/GitHubPages\";\nimport Footer from \"./components/App/Footer\";\nimport Forum from \"./page/Forum\";\n\nlet theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#bb87fa\",\n      contrastText: \"#000\"\n    },\n    secondary: {\n      main: \"#1ddac6\",\n      contrastText: \"#fff\"\n    },\n    error: {\n      light: \"##ef9a9a\",\n      main: \"#ce667a\",\n      dark: \"#af0025\",\n      contrastText: \"#7e7e7e\"\n    },\n    background: {\n      default: \"#1d1d1d\",\n      paper: \"#2c2c2c\"\n    }\n  },\n  typography: {\n    subtitle1: {\n      fontStyle: \"italic\"\n    },\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      \"Segoe UI\",\n      \"Roboto\",\n      \"Oxygen\",\n      \"Ubuntu\",\n      \"Cantarell\",\n      \"Open Sans\",\n      \"Helvetica Neue\",\n      \"sans-serif\"\n    ].join(\",\")\n  },\n  spacing: 8,\n  overrides: {\n    MuiButton: {\n      text: {\n        borderRadius: 2\n      }\n    }\n  }\n});\ntheme = responsiveFontSizes(theme);\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box pb={34}>\n        <Router basename=\"\">\n          <Switch>\n            <Route path=\"/randomWord\">\n              <RandomSentence />\n            </Route>\n            <Route path=\"/transform\">\n              <BaseCalculator />\n            </Route>\n            <Route path=\"/github\">\n              <GitHubPages />\n            </Route>\n            <Route path=\"/forum\">\n              <Forum />\n            </Route>\n            <Route path=\"/test\"></Route>\n            <Route path=\"/\">\n              <HomePage />\n            </Route>\n          </Switch>\n        </Router>\n      </Box>\n      <Footer />\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as firebase from \"firebase\";\n\n(function() {\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDsOFUozarCcd3IHlaWxm0IBlQQpEU_5ZM\",\n    authDomain: \"melvynx1.firebaseapp.com\",\n    databaseURL: \"https://melvynx1.firebaseio.com\",\n    projectId: \"melvynx1\",\n    storageBucket: \"melvynx1.appspot.com\",\n    messagingSenderId: \"250871298406\",\n    appId: \"1:250871298406:web:94543018676423fd4af0a7\",\n    measurementId: \"G-1MHT0RHERX\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n})();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}