{"version":3,"sources":["components/randomSentence/make/BoxMakeSentence.tsx","components/randomSentence/make/ListMakeSentence.tsx","components/randomSentence/make/InputMakeSentence.tsx","components/randomSentence/make/MakeSentence.tsx","components/randomSentence/shuffle/BoxShuffleSentence.tsx","components/randomSentence/shuffle/ShuffleCountDown.tsx","components/randomSentence/settingsDialog/SettingsButtonShuffle.tsx","components/function.tsx","components/randomSentence/shuffle/ShuffleSentence.tsx","components/randomSentence/settingsDialog/SettingsButton.tsx","components/HomePage/HomePageLinkButton.tsx","components/randomSentence/settingsDialog/SettingsContent.tsx","components/randomSentence/settingsDialog/SettingsDialog.tsx","page/RandomSentence.tsx","components/HomePage/CustomCardHomePage.tsx","page/HomePage.tsx","components/baseCalculator/InputBaseCalcul.tsx","components/baseCalculator/Calculator.tsx","components/baseCalculator/SettingsDialog.tsx","page/BaseCalculator.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BoxMakeSentence","index","children","onDelete","useState","isHover","setHover","theme","useTheme","toggleHover","state","Box","position","onMouseEnter","onMouseLeave","onClick","m","p","borderRadius","border","color","palette","primary","main","borderColor","fontSize","pr","right","top","Fade","in","ListMakeSentence","wordList","toggleDeleteWord","minHeight","className","display","flexWrap","justifyContent","TransitionGroup","map","value","CSSTransition","key","timeout","classNames","InputMakeSentence","onKeyUp","inputValue","onChange","classes","alignItems","width","InputBase","event","inputBase","fullWidth","placeholder","Button","button","variant","useStyles","makeStyles","transition","borderBottom","height","boxWord","minWidth","MakeSentence","addWord","removeWord","toggleAdding","sentence","setSentence","errorMessage","setErrorMessage","toggleNewWord","length","removeErrorMessage","i","setTimeout","left","Alert","severity","target","BoxShuffleSentence","styleFinder","weight","ml","fontWeight","ShuffleCountDown","onFinish","countDown","setCountDown","useEffect","console","log","bgcolor","Typography","iconButton","dark","SettingsButtonShuffle","toggleRandomWord","ButtonGroup","IconButton","size","shuffleList","list","max","listCopy","listResult","number","Math","floor","random","push","splice","isOctal","oct","arrayOct","split","ShuffleSentence","isCountDown","isOneSentence","isCountdown","setIsCountdown","listSentence","setListSentence","SettingsButton","HomePageLinkButton","zIndex","to","Fab","SettingsContent","checked","typeSettings","DialogContent","background","text","Switch","inputProps","backgroundColor","secondary","contrastText","SettingsDialog","open","onClose","settings","Dialog","DialogTitle","DialogActions","title","breakpoints","down","marginTop","RandomSentence","setWordList","isAdding","setAdding","setSettings","openSettings","setOpenSettings","handleSettings","mt","maxWidth","xs","sm","md","align","card","link","textDecoration","CustomCardHomePage","image","body","maxHeight","Card","CardActionArea","CardMedia","component","CardContent","noWrap","textColor","HomePage","textAlign","Grid","container","justify","spacing","page","item","root","light","padding","paddingLeft","overflow","transitions","create","boxShadow","fade","CustomTextField","props","TextField","InputProps","disableUnderline","Base","useStylesInput","input","InputBaseCalcul","base","error","InputLabel","id","Calculator","base2","setBase2","base10","setBase10","base8","setBase8","base16","setBase16","displayErrorMessage","binaryConvertor","isValide","stringNumberArray","isBinary","String","parseInt","bin","toString","toUpperCase","bin_to_hexa","bin_to_oct","decimalConvertor","isNaN","Number","dec","dec_to_hexa","dec_to_oct","hexadecimalConvertor","array","notBinaryLetter","y","toLowerCase","isHexadecimal","hexa","hexa_to_dec","hexa_to_oct","octalConvertor","oct_to_dec","oct_to_hexa","displayBase2","displayBase10","displayBase8","displayBase16","BaseCalculator","prevState","createMuiTheme","purple","default","typography","subtitle1","fontStyle","overrides","MuiButton","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","CssBaseline","basename","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c0a0ae6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Box, useTheme, Fade } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\ntype TypeListWordBox = {\n  children: string;\n  index: number;\n  onDelete: Function;\n};\nexport default function BoxMakeSentence({ index, children, onDelete }: TypeListWordBox) {\n  const [isHover, setHover] = useState<boolean>(false);\n  const theme = useTheme();\n\n  const toggleHover = (state: boolean) => {\n    setHover(state);\n  };\n\n  return (\n    <Box\n      position=\"relative\"\n      onMouseEnter={() => toggleHover(true)}\n      onMouseLeave={() => toggleHover(false)}\n      onClick={() => onDelete(index)}\n      m={1}\n      p={0.5}\n      borderRadius={2}\n      border={1}\n      color={theme.palette.primary.main}\n      borderColor={theme.palette.primary.main}\n      fontSize=\"body1.fontSize\"\n      pr={2.2}\n    >\n      {children}\n      <Box position=\"absolute\" right={-2} top={4.5}>\n        <Fade in={isHover}>\n          <CloseIcon fontSize=\"small\" />\n        </Fade>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport BoxMakeSentence from \"./BoxMakeSentence\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\ntype TypeListMakeSentence = {\n  wordList: Array<string>;\n  toggleDeleteWord: Function;\n};\nexport default function ListMakeSentence({ wordList, toggleDeleteWord }: TypeListMakeSentence) {\n  return (\n    <Box minHeight={100} className=\"testLol\">\n      <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\">\n        <TransitionGroup className=\"listMakeSentence\">\n          {wordList.map((value, index) => (\n            <CSSTransition key={value} timeout={500} classNames=\"item\">\n              <BoxMakeSentence onDelete={toggleDeleteWord} index={index} key={index}>\n                {value}\n              </BoxMakeSentence>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, InputBase, Button } from \"@material-ui/core\";\n\ntype TypeInputMakeSentence = {\n  onKeyUp: Function;\n  inputValue: string;\n  onChange: Function;\n  onClick: Function;\n  classes: Record<\"inputBase\" | \"button\", string>;\n};\n\nexport default function InputMakeSentence({\n  onKeyUp,\n  inputValue,\n  onChange,\n  onClick,\n  classes\n}: TypeInputMakeSentence) {\n  return (\n    <Box display=\"flex\" p={1} alignItems=\"center\">\n      <Box width=\"100%\" p={1}>\n        <InputBase\n          onKeyUp={event => onKeyUp(event)}\n          color=\"primary\"\n          className={classes.inputBase}\n          fullWidth\n          value={inputValue}\n          onChange={event => onChange(event)}\n          placeholder=\"sentence...\"\n        />\n      </Box>\n      <Button\n        onClick={() => onClick()}\n        className={classes.button}\n        color=\"primary\"\n        variant=\"outlined\"\n      >\n        Add\n      </Button>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Button, makeStyles, Fade } from \"@material-ui/core\";\nimport ListMakeSentence from \"./ListMakeSentence\";\nimport { Alert } from \"@material-ui/lab\";\nimport InputMakeSentence from \"./InputMakeSentence\";\n\nconst useStyles = makeStyles({\n  inputBase: {\n    fontSize: 20,\n    transition: \"all .5\",\n    borderBottom: \"1px solid #aa00ff\",\n    \"&:action\": {\n      borderBottom: \"1px solid red\"\n    }\n  },\n  button: {\n    height: 40\n  },\n  boxWord: {\n    minWidth: 300\n  }\n});\n\ntype TypeAddWord = {\n  wordList: Array<string>;\n  addWord: Function;\n  removeWord: Function;\n  toggleAdding: Function;\n};\n\nexport default function MakeSentence({ wordList, addWord, removeWord, toggleAdding }: TypeAddWord) {\n  const classes = useStyles();\n  const [sentence, setSentence] = useState<string>(\"\");\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n  const toggleChange = (event: any) => {\n    setSentence(event.target.value);\n  };\n\n  const toggleNewWord = () => {\n    if (sentence.length < 1 || sentence.length > 100) {\n      setErrorMessage(\"The sentence need to be between 1 and 100 caractères. \");\n      removeErrorMessage();\n      return;\n    }\n    for (let i = 0; i < wordList.length; i++) {\n      if (sentence === wordList[i]) {\n        setErrorMessage(\"This sentence aldery exist. \");\n        removeErrorMessage();\n        return;\n      }\n    }\n    addWord(sentence);\n    setSentence(\"\");\n  };\n\n  const removeErrorMessage = () => {\n    setTimeout(() => {\n      setErrorMessage(\"\");\n    }, 5000);\n  };\n\n  const toggleKeyEnter = (event: any) => {\n    const key = event.key;\n    if (key === \"Enter\") {\n      toggleNewWord();\n    }\n  };\n\n  return (\n    <Box>\n      <ListMakeSentence wordList={wordList} toggleDeleteWord={removeWord} />\n\n      <Box position=\"absolute\" top={10} left={10}>\n        <Fade in={errorMessage.length > 1}>\n          <Alert severity=\"error\">{errorMessage}</Alert>\n        </Fade>\n      </Box>\n\n      <InputMakeSentence\n        onChange={toggleChange}\n        onKeyUp={toggleKeyEnter}\n        onClick={toggleNewWord}\n        classes={classes}\n        inputValue={sentence}\n      />\n\n      <Button fullWidth color=\"primary\" onClick={() => toggleAdding()} variant=\"outlined\">\n        Ramdomizzz\n      </Button>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\ntype TypeListWordBoxRandomiz = {\n  children: string;\n  index: number;\n};\nexport default function BoxShuffleSentence({\n  children,\n  index\n}: TypeListWordBoxRandomiz) {\n  const styleFinder = () => {\n    const baseColor = \"#aa00ff\";\n    const firstColor = \"#e040fb\";\n    if (index === 0) {\n      return { color: firstColor, weight: \"bold\" };\n    } else {\n      return { color: baseColor, weight: \"normal\" };\n    }\n  };\n  return (\n    <Box\n      fontSize=\"h5.fontSize\"\n      ml={1}\n      fontWeight={styleFinder().weight}\n      color={styleFinder().color}\n    >\n      {index + 1}. {children}\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\ntype TypeCountDown = {\n  onFinish: Function;\n};\n\nexport default function ShuffleCountDown({ onFinish }: TypeCountDown) {\n  const [countDown, setCountDown] = useState<number>(3);\n  const startCountDown = () => {\n    console.log(\"change count down\");\n    setTimeout(() => {\n      setCountDown(countDown - 1);\n    }, 1000);\n  };\n  useEffect(() => {\n    startCountDown();\n  });\n\n  if (countDown === 0) {\n    onFinish();\n  }\n\n  return (\n    <Box\n      bgcolor=\"dark\"\n      color=\"white\"\n      justifyContent=\"center\"\n      p={2}\n      display=\"flex\"\n    >\n      <Typography variant=\"h3\">{countDown}</Typography>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { ButtonGroup, Button, IconButton, makeStyles } from \"@material-ui/core\";\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\n\nconst useStyles = makeStyles(theme => ({\n  iconButton: {\n    border: \"1px solid \" + theme.palette.primary.dark\n  }\n}));\ntype TypeSettingsButtonShuffle = {\n  toggleRandomWord: Function;\n  toggleAdding: Function;\n};\nexport default function SettingsButtonShuffle({\n  toggleRandomWord,\n  toggleAdding\n}: TypeSettingsButtonShuffle) {\n  const classes = useStyles();\n  return (\n    <ButtonGroup fullWidth>\n      <Button color=\"primary\" variant=\"outlined\" onClick={() => toggleRandomWord()}>\n        Random\n      </Button>\n      <IconButton\n        className={classes.iconButton}\n        color=\"primary\"\n        onClick={() => toggleAdding()}\n        size=\"small\"\n      >\n        <KeyboardBackspaceIcon />\n      </IconButton>\n    </ButtonGroup>\n  );\n}\n","//Generate a random number\nexport function randomNumber(max: number) {\n  return Math.floor(Math.random() * max);\n}\n\n//Shuffle a list\nexport function shuffleList(list: Array<string>) {\n  const listCopy: Array<string> = [...list];\n  const listResult: Array<string> = [];\n  for (let i = 0; i < list.length; i++) {\n    const number = randomNumber(listCopy.length);\n    listResult.push(listCopy[number]);\n    listCopy.splice(number, 1);\n  }\n  return listResult;\n}\n\n//Binary to decimal\nexport function bin_to_dec(bin: string) {\n  return parseInt(bin, 2);\n}\n\nexport function bin_to_hexa(bin: string) {\n  return parseInt(bin, 2)\n    .toString(16)\n    .toUpperCase();\n}\n\nexport function bin_to_oct(bin: string) {\n  return parseInt(bin, 2).toString(8);\n}\n\nexport function isBinary(number: string) {\n  let isValide: boolean = true;\n\n  if (number.length === 0) {\n    return false;\n  }\n\n  const stringNumberArray: Array<String> = number.split(\"\");\n\n  for (let i = 0; i < stringNumberArray.length; i++) {\n    if (stringNumberArray[i] !== \"1\" && stringNumberArray[i] !== \"0\") {\n      isValide = false;\n    }\n  }\n\n  return isValide;\n}\n\nexport function dec_to_bin(dec: string) {\n  return (Number(dec) - 0).toString(2);\n}\n\nexport function dec_to_hexa(dec: string) {\n  return (Number(dec) - 0).toString(16).toUpperCase();\n}\n\nexport function dec_to_oct(dec: string) {\n  return (Number(dec) - 0).toString(8);\n}\n\nexport function isDecimal(number: string) {\n  if (isNaN(Number(number))) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nexport function isHexadecimal(number: string) {\n  if (number === \"0\" || number === \"\") {\n    return false;\n  }\n  const array = number.split(\"\");\n  const notBinaryLetter = [\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"'\",\n    '\"'\n  ];\n\n  for (let i = 0; i < array.length; i++) {\n    for (let y = 0; y < notBinaryLetter.length; y++) {\n      if (array[i].toLowerCase() === notBinaryLetter[y]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nexport function hexa_to_dec(hexa: string) {\n  return parseInt(hexa, 16);\n}\nexport function hexa_to_bin(hexa: string) {\n  return parseInt(hexa, 16).toString(2);\n}\nexport function hexa_to_oct(hexa: string) {\n  return parseInt(hexa, 16).toString(8);\n}\n\nexport function isOctal(oct: string) {\n  const arrayOct: Array<string> = oct.split(\"\");\n\n  for (let i = 0; i < arrayOct.length; i++) {\n    if (arrayOct[i] === \"9\" || arrayOct[i] === \"8\") {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function oct_to_dec(oct: string) {\n  return parseInt(oct, 8);\n}\nexport function oct_to_hexa(oct: string) {\n  return parseInt(oct, 8)\n    .toString(16)\n    .toUpperCase();\n}\nexport function oct_to_bin(oct: string) {\n  return parseInt(oct, 8).toString(2);\n}\n","import React, { useState } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport BoxShuffleSentence from \"./BoxShuffleSentence\";\nimport CountDown from \"./ShuffleCountDown\";\nimport SettingsButtonShuffle from \"../settingsDialog/SettingsButtonShuffle\";\nimport { shuffleList } from \"../../function\";\n\ntype TypeListRandomWord = {\n  wordList: Array<string>;\n  toggleAdding: Function;\n  isCountDown: boolean;\n  isOneSentence: boolean;\n};\n\nexport default function ShuffleSentence({\n  wordList,\n  toggleAdding,\n  isCountDown,\n  isOneSentence\n}: TypeListRandomWord) {\n  const [isCountdown, setIsCountdown] = useState<boolean>(isCountDown);\n  const [listSentence, setListSentence] = useState<Array<string>>(shuffleList(wordList));\n\n  const toggleRandomWord = () => {\n    setListSentence(shuffleList(wordList));\n  };\n\n  const toggleCountDown = () => {\n    setIsCountdown(!isCountdown);\n  };\n\n  return (\n    <Box>\n      <Box border={1} borderColor=\"secondary\">\n        {isCountdown ? (\n          <CountDown onFinish={toggleCountDown} />\n        ) : isOneSentence ? (\n          <BoxShuffleSentence index={0}>{listSentence[0]}</BoxShuffleSentence>\n        ) : (\n          listSentence.map((value, index) => (\n            <BoxShuffleSentence index={index} key={index}>\n              {value}\n            </BoxShuffleSentence>\n          ))\n        )}\n      </Box>\n      <Box m={1}>\n        <SettingsButtonShuffle\n          toggleRandomWord={toggleRandomWord}\n          toggleAdding={() => toggleAdding()}\n        />\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState, Component } from \"react\";\nimport { Box, Button, IconButton, makeStyles } from \"@material-ui/core\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport SettingsDialog from \"./SettingsDialog\";\nimport { TypeSettings } from \"../../../page/RandomSentence\";\nconst useStyles = makeStyles({\n  button: {\n    width: 30,\n    height: 30\n  }\n});\n\nexport type TypeSettingsButton = {\n  onClick: Function;\n};\n\nexport default function SettingsButton({ onClick }: TypeSettingsButton) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box position=\"absolute\" top={10} right={10}>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          onClick={() => onClick()}\n          variant=\"outlined\"\n        >\n          <IconButton className=\"buttonSafari\">\n            <SettingsIcon color=\"primary\" />\n          </IconButton>\n        </Button>\n      </Box>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Box, Fab } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\nexport default function HomePageLinkButton() {\n  return (\n    <Box position=\"absolute\" top={10} left={10} zIndex={1000}>\n      <Link to=\"/\">\n        <Fab color=\"primary\" variant=\"round\" size=\"small\">\n          <ArrowBackIcon />\n        </Fab>\n      </Link>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { DialogContent, Box, Typography, Switch } from \"@material-ui/core\";\n\ntype TypeSettingsContent = {\n  checked?: boolean;\n  onChange: Function;\n  className: Record<\"background\" | \"text\", string>;\n  children: string;\n  typeSettings: string;\n};\n\nexport default function SettingsContent({\n  checked,\n  onChange,\n  className,\n  children,\n  typeSettings\n}: TypeSettingsContent) {\n  const classes = className;\n  return (\n    <DialogContent className={classes.background}>\n      <Box\n        display=\"flex\"\n        border={1}\n        alignItems=\"center\"\n        p={1}\n        borderRadius={5}\n        justifyContent=\"space-between\"\n      >\n        <Typography variant=\"body1\" color=\"primary\" className={classes.text}>\n          {children}\n        </Typography>\n        <Switch\n          color=\"primary\"\n          checked={checked}\n          onChange={() => onChange(typeSettings)}\n          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n        />\n      </Box>\n    </DialogContent>\n  );\n}\n","import React from \"react\";\nimport { Dialog, DialogTitle, makeStyles, DialogActions, Button } from \"@material-ui/core\";\nimport { TypeSettings } from \"../../../page/RandomSentence\";\nimport SettingsContent from \"./SettingsContent\";\n\ntype TypeSettingsDialog = {\n  open: boolean;\n  onClose: Function;\n  settings: TypeSettings;\n  onChange: Function;\n};\n\nconst useStyles = makeStyles(theme => ({\n  background: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  text: {\n    color: theme.palette.secondary.contrastText\n  }\n}));\n\nexport default function SettingsDialog({ open, onClose, settings, onChange }: TypeSettingsDialog) {\n  const classes = useStyles();\n\n  return (\n    <Dialog onClose={() => onClose()} open={open}>\n      <DialogTitle className={classes.background + \" \" + classes.text}>\n        Settings Random Sentence\n      </DialogTitle>\n      <SettingsContent\n        checked={settings.isCountDown}\n        onChange={onChange}\n        className={classes}\n        typeSettings=\"countDown\"\n      >\n        Activé le Timer avant d'afficher des réponses\n      </SettingsContent>\n      <SettingsContent\n        checked={settings.isOneSentence}\n        onChange={onChange}\n        className={classes}\n        typeSettings=\"oneSentence\"\n      >\n        Afficher que la première réponse random\n      </SettingsContent>\n      <DialogActions className={classes.background}>\n        <Button color=\"primary\" variant=\"outlined\" onClick={() => onClose()}>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Typography, makeStyles } from \"@material-ui/core\";\nimport MakeSentence from \"../components/randomSentence/make/MakeSentence\";\nimport ShuffleSentence from \"../components/randomSentence/shuffle/ShuffleSentence\";\nimport SettingsButton from \"../components/randomSentence/settingsDialog/SettingsButton\";\nimport HomePageLinkButton from \"../components/HomePage/HomePageLinkButton\";\nimport SettingsDialog from \"../components/randomSentence/settingsDialog/SettingsDialog\";\n\nexport type TypeSettings = {\n  isCountDown: boolean;\n  isOneSentence: boolean;\n};\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 12\n    }\n  }\n}));\n\nexport default function RandomSentence() {\n  const classes = useStyles();\n  const [wordList, setWordList] = useState<Array<string>>([]);\n  const [isAdding, setAdding] = useState<boolean>(true);\n  const [settings, setSettings] = useState<TypeSettings>({\n    isCountDown: false,\n    isOneSentence: false\n  });\n  const [openSettings, setOpenSettings] = useState<boolean>(false);\n\n  const toggleSettings = (value: string) => {\n    switch (value) {\n      case \"countDown\":\n        setSettings({\n          isCountDown: !settings.isCountDown,\n          isOneSentence: settings.isOneSentence\n        });\n        break;\n      case \"oneSentence\":\n        setSettings({\n          isOneSentence: !settings.isOneSentence,\n          isCountDown: settings.isCountDown\n        });\n        break;\n    }\n  };\n\n  const handleSettings = () => {\n    setOpenSettings(!openSettings);\n  };\n\n  const addWord = (sentence: string) => {\n    const list = [...wordList];\n    list.push(sentence);\n    setWordList(list);\n  };\n\n  const removeWord = (index: number) => {\n    const list = [...wordList];\n    list.splice(index, 1);\n    setWordList(list);\n  };\n\n  const toggleAdding = () => {\n    if (wordList.length === 0) {\n      setWordList([\"one\", \"two\", \"three\"]);\n      return;\n    }\n    setAdding(!isAdding);\n  };\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <Box\n        mt={1}\n        p={1}\n        border={1}\n        borderColor=\"primary\"\n        borderRadius={1}\n        position=\"relative\"\n        maxWidth={500}\n        width=\"100%\"\n      >\n        <HomePageLinkButton />\n\n        <SettingsButton onClick={handleSettings} />\n\n        <SettingsDialog\n          settings={settings}\n          onChange={toggleSettings}\n          onClose={handleSettings}\n          open={openSettings}\n        />\n\n        <Box height={20} display={{ xs: \"block\", sm: \"none\", md: \"none\" }} />\n\n        <Typography className={classes.title} color=\"textSecondary\" align=\"center\" variant=\"h3\">\n          Random word or sentence !\n        </Typography>\n\n        <Typography color=\"textSecondary\" align=\"center\" variant=\"subtitle1\">\n          We gonna random all you're sentence to find a random list of your sentence.\n        </Typography>\n\n        {isAdding ? (\n          <MakeSentence\n            removeWord={removeWord}\n            addWord={addWord}\n            wordList={wordList}\n            toggleAdding={toggleAdding}\n          />\n        ) : (\n          <ShuffleSentence\n            isCountDown={settings.isCountDown}\n            isOneSentence={settings.isOneSentence}\n            wordList={wordList}\n            toggleAdding={toggleAdding}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Card,\n  CardMedia,\n  CardContent,\n  CardActionArea,\n  Typography,\n  Box,\n  makeStyles\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport type TypeCustomCardHomePage = {\n  image: string;\n  title: string;\n  body: string;\n  link: string;\n};\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    border: \"1px solid \" + theme.palette.primary.dark\n  },\n  background: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  link: {\n    textDecoration: \"none\"\n  }\n}));\n\nexport default function CustomCardHomePage({ image, title, body, link }: TypeCustomCardHomePage) {\n  const classes = useStyles();\n\n  return (\n    <Link to={link} className={classes.link}>\n      <Box maxWidth={350} maxHeight={420}>\n        <Card className={classes.card}>\n          <CardActionArea className={classes.background + \" \" + classes.card}>\n            <CardMedia height=\"150\" component=\"img\" image={image} />\n            <CardContent>\n              <Typography noWrap variant=\"h4\">\n                {title}\n              </Typography>\n              <Typography variant=\"body1\">{body}</Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </Box>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography, makeStyles, Grid } from \"@material-ui/core\";\nimport CustomCardHomePage from \"../components/HomePage/CustomCardHomePage\";\nimport { TypeCustomCardHomePage } from \"../components/HomePage/CustomCardHomePage\";\n\nconst useStyles = makeStyles(theme => ({\n  textColor: { color: theme.palette.primary.contrastText }\n}));\n\nexport default function HomePage() {\n  const classes = useStyles();\n\n  return (\n    <Box alignItems=\"center\" textAlign=\"center\" className={classes.textColor}>\n      <Typography color=\"textSecondary\" variant=\"h2\">\n        Baddadin\n      </Typography>\n      <Typography color=\"textSecondary\" variant=\"h4\">\n        App by Melvyn\n      </Typography>\n      <Typography color=\"textSecondary\" variant=\"subtitle1\">\n        It's an app for learn React.\n      </Typography>\n\n      <Box m={2}>\n        <Grid container justify=\"center\" spacing={2}>\n          {page.map(({ image, title, body, link }, index) => (\n            <Grid item>\n              <CustomCardHomePage link={link} image={image} title={title} body={body} key={index} />\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n\nconst page: Array<TypeCustomCardHomePage> = [\n  {\n    image: \"images/shuffleImage.png\",\n    title: \"Shuffle Sentence !\",\n    body:\n      \"It's an application to shuffle how many sentence you want, you can't have one result, or a numbered list for result !\",\n    link: \"/randomword\"\n  },\n  {\n    image: \"images/numberBase.jpg\",\n    title: \"Base convertor\",\n    body:\n      \"Calculator for change base 2 to base 10 and base 16, or inverse ! It's in really time, faster and easy !\",\n    link: \"/transform\"\n  }\n];\n","import React from \"react\";\nimport {\n  Box,\n  TextField,\n  makeStyles,\n  fade,\n  TextFieldProps,\n  OutlinedInputProps,\n  InputLabel\n} from \"@material-ui/core\";\n\ntype TypeInputBaseCalcul = {\n  value: string;\n  base: string;\n  onChange: Function;\n  error?: boolean;\n  display?: boolean;\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    border: \"1px solid \" + theme.palette.primary.dark,\n    color: theme.palette.primary.light,\n    padding: 2,\n    paddingLeft: 6,\n    fontSize: 18,\n    overflow: \"hidden\",\n    borderRadius: 3,\n    backgroundColor: theme.palette.secondary.main,\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.main\n    },\n    \"&$focused\": {\n      backgroundColor: theme.palette.secondary.dark,\n      boxShadow: `${fade(theme.palette.secondary.main, 0.25)} 2px 0 0 2px`,\n      borderColor: theme.palette.secondary.main\n    }\n  }\n}));\n\nfunction CustomTextField(props: TextFieldProps) {\n  const classes = useStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes, disableUnderline: true } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst useStylesInput = makeStyles(theme => ({\n  input: {\n    fontSize: 12,\n    color: theme.palette.primary.main\n  }\n}));\n\nexport default function InputBaseCalcul({\n  display,\n  value,\n  base,\n  onChange,\n  error\n}: TypeInputBaseCalcul) {\n  const classes = useStylesInput();\n  return (\n    <Box width=\"100%\" m={1} pr={3} display={display ? \"block\" : \"none\"}>\n      <InputLabel className={classes.input}>{base}</InputLabel>\n      <CustomTextField\n        id=\"bootstrap-input\"\n        error={error}\n        onChange={event => onChange(event)}\n        fullWidth\n        value={value}\n      ></CustomTextField>\n    </Box>\n  );\n}\n","import React, { useState, ChangeEvent } from \"react\";\nimport { Box, Fade } from \"@material-ui/core\";\nimport InputBaseCalcul from \"./InputBaseCalcul\";\nimport {\n  isBinary,\n  bin_to_dec,\n  bin_to_hexa,\n  isDecimal,\n  dec_to_bin,\n  dec_to_hexa,\n  isHexadecimal,\n  hexa_to_dec,\n  hexa_to_bin,\n  isOctal,\n  oct_to_bin,\n  oct_to_dec,\n  oct_to_hexa,\n  hexa_to_oct,\n  dec_to_oct,\n  bin_to_oct\n} from \"../function\";\nimport { Alert } from \"@material-ui/lab\";\nimport { TypeSettings } from \"../../page/BaseCalculator\";\n\ntype TypeValue = {\n  value: string;\n  base: Base;\n};\n\nexport enum Base {\n  base16 = \"base 16\",\n  base10 = \"base 10\",\n  base8 = \"base 8\",\n  base2 = \"base 2\"\n}\n\ntype TypeCalculator = {\n  settings: TypeSettings;\n};\n\nexport default function Calculator({ settings }: TypeCalculator) {\n  const [base2, setBase2] = useState<string>(\"\");\n  const [base10, setBase10] = useState<string>(\"\");\n  const [base8, setBase8] = useState<string>(\"\");\n  const [base16, setBase16] = useState<string>(\"\");\n\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n  const displayErrorMessage = (text: string) => {\n    setErrorMessage(text);\n    setTimeout(() => {\n      setErrorMessage(\"\");\n    }, 4000);\n  };\n\n  const changeBase2 = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    setBase2(event.target.value);\n\n    binaryConvertor(event.target.value);\n  };\n  const changeBase10 = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    setBase10(event.target.value);\n\n    decimalConvertor(event.target.value);\n  };\n  const changeBase16 = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    setBase16(event.target.value.toUpperCase());\n\n    hexadecimalConvertor(event.target.value);\n  };\n\n  const changeBase8 = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    setBase8(event.target.value);\n\n    octalConvertor(event.target.value);\n  };\n\n  const binaryConvertor = (value: string) => {\n    if (isBinary(value)) {\n      setBase10(String(bin_to_dec(value)));\n      setBase16(bin_to_hexa(value));\n      setBase8(bin_to_oct(value));\n    } else {\n      displayErrorMessage(\"Binary number is null or invalid (only 0 and 1).\");\n    }\n  };\n\n  const decimalConvertor = (value: string) => {\n    if (isDecimal(value)) {\n      setBase2(dec_to_bin(value));\n      setBase16(dec_to_hexa(value));\n      setBase8(dec_to_oct(value));\n    } else {\n      displayErrorMessage(\"Decimal number is null or invalid (only 0 to 9).\");\n    }\n  };\n\n  const hexadecimalConvertor = (value: string) => {\n    if (isHexadecimal(value)) {\n      setBase2(String(hexa_to_bin(value)));\n      setBase10(String(hexa_to_dec(value)));\n      setBase8(String(hexa_to_oct(value)));\n    } else {\n      displayErrorMessage(\"Hexadecimal number is null or invalid (only 0 to 9 and A to F)\");\n    }\n  };\n\n  const octalConvertor = (value: string) => {\n    console.log(isOctal(value));\n    if (isOctal(value)) {\n      setBase2(oct_to_bin(value));\n      setBase10(String(oct_to_dec(value)));\n      setBase16(oct_to_hexa(value));\n    } else {\n      displayErrorMessage(\"Octal number is null or invalid (only 0 to 7)\");\n    }\n  };\n\n  return (\n    <Box mt={2}>\n      <InputBaseCalcul\n        display={settings.displayBase2}\n        onChange={changeBase2}\n        base=\"Binary\"\n        value={base2}\n      ></InputBaseCalcul>\n\n      <InputBaseCalcul\n        display={settings.displayBase10}\n        onChange={changeBase10}\n        base=\"Decimal\"\n        value={base10}\n      ></InputBaseCalcul>\n\n      <InputBaseCalcul\n        display={settings.displayBase8}\n        onChange={changeBase8}\n        base=\"Octale\"\n        value={base8}\n      ></InputBaseCalcul>\n\n      <InputBaseCalcul\n        display={settings.displayBase16}\n        onChange={changeBase16}\n        base=\"Hexadecimal\"\n        value={base16}\n      ></InputBaseCalcul>\n\n      <Box height={50} width=\"100%\">\n        <Fade in={errorMessage.length > 0}>\n          <Alert severity=\"error\">{errorMessage}</Alert>\n        </Fade>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Dialog, DialogTitle, makeStyles, DialogActions, Button } from \"@material-ui/core\";\nimport SettingsContent from \"../randomSentence/settingsDialog/SettingsContent\";\nimport { TypeSettings } from \"../../page/BaseCalculator\";\n\ntype TypeSettingsDialog = {\n  open: boolean;\n  onClose: Function;\n  settings: TypeSettings;\n  onChange: Function;\n};\n\nconst useStyles = makeStyles(theme => ({\n  background: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  text: {\n    color: theme.palette.secondary.contrastText\n  }\n}));\n\nexport default function SettingsDialog({ open, onClose, settings, onChange }: TypeSettingsDialog) {\n  const classes = useStyles();\n\n  return (\n    <Dialog onClose={() => onClose()} open={open}>\n      <DialogTitle className={classes.background + \" \" + classes.text}>\n        Settings Random Sentence\n      </DialogTitle>\n      <SettingsContent\n        checked={settings.displayBase2}\n        onChange={onChange}\n        className={classes}\n        typeSettings=\"2\"\n      >\n        Affiché la base 2\n      </SettingsContent>\n      <SettingsContent\n        checked={settings.displayBase8}\n        onChange={onChange}\n        className={classes}\n        typeSettings=\"8\"\n      >\n        Affiché la base 8\n      </SettingsContent>\n      <SettingsContent\n        checked={settings.displayBase10}\n        onChange={onChange}\n        className={classes}\n        typeSettings=\"10\"\n      >\n        Affiché la base 10\n      </SettingsContent>\n      <SettingsContent\n        checked={settings.displayBase16}\n        onChange={onChange}\n        className={classes}\n        typeSettings=\"16\"\n      >\n        Affiché la base 16\n      </SettingsContent>\n      <DialogActions className={classes.background}>\n        <Button color=\"primary\" variant=\"outlined\" onClick={() => onClose()}>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Box, Typography, makeStyles } from \"@material-ui/core\";\nimport Calculator from \"../components/baseCalculator/Calculator\";\nimport HomePageLinkButton from \"../components/HomePage/HomePageLinkButton\";\nimport SettingsButton from \"../components/randomSentence/settingsDialog/SettingsButton\";\nimport SettingsDialog from \"../components/baseCalculator/SettingsDialog\";\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 40\n    }\n  }\n}));\n\nexport type TypeSettings = {\n  displayBase2?: boolean;\n  displayBase8?: boolean;\n  displayBase10?: boolean;\n  displayBase16?: boolean;\n};\n\nexport default function BaseCalculator() {\n  const [settings, setSettings] = useState<TypeSettings>({\n    displayBase2: true,\n    displayBase8: true,\n    displayBase10: true,\n    displayBase16: true\n  });\n  const [openSettings, setOpenSettings] = useState<boolean>(false);\n\n  const handleSettings = () => {\n    setOpenSettings(!openSettings);\n  };\n\n  const handleChangeSettings = (value: string) => {\n    switch (value) {\n      case \"2\":\n        setSettings(prevState => {\n          return { ...prevState, displayBase2: !settings.displayBase2 };\n        });\n        break;\n      case \"8\":\n        setSettings(prevState => {\n          return { ...prevState, displayBase8: !settings.displayBase8 };\n        });\n        break;\n      case \"10\":\n        setSettings(prevState => {\n          return { ...prevState, displayBase10: !settings.displayBase10 };\n        });\n        break;\n      case \"16\":\n        setSettings(prevState => {\n          return { ...prevState, displayBase16: !settings.displayBase16 };\n        });\n    }\n  };\n\n  const classes = useStyles();\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <Box\n        mt={1}\n        p={1}\n        border={1}\n        borderColor=\"primary\"\n        borderRadius={1}\n        position=\"relative\"\n        maxWidth={500}\n        width=\"100%\"\n      >\n        <HomePageLinkButton />\n\n        <SettingsButton onClick={handleSettings} />\n\n        <SettingsDialog\n          onChange={handleChangeSettings}\n          onClose={handleSettings}\n          open={openSettings}\n          settings={settings}\n        />\n\n        <Typography className={classes.title} align=\"center\" variant=\"h4\" color=\"textSecondary\">\n          Change base calculator !\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\">\n          Enter a number where you want to transform this in all base !\n        </Typography>\n        <Calculator settings={settings} />\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nimport { CssBaseline, ThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { purple } from \"@material-ui/core/colors\";\nimport { Switch, HashRouter as Router, Route } from \"react-router-dom\";\nimport RandomSentence from \"./page/RandomSentence\";\nimport HomePage from \"./page/HomePage\";\nimport BaseCalculator from \"./page/BaseCalculator\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[\"A700\"],\n      contrastText: \"#000\"\n    },\n    text: {\n      primary: purple[\"A700\"],\n      secondary: \"#fff\"\n    },\n    secondary: {\n      main: \"#222222\",\n      contrastText: \"#fff\"\n    },\n    background: {\n      default: \"#222222\"\n    }\n  },\n  typography: {\n    subtitle1: {\n      fontStyle: \"italic\"\n    }\n  },\n  spacing: 8,\n  overrides: {\n    MuiButton: {\n      text: {\n        borderRadius: 2\n      }\n    }\n  }\n});\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router basename=\"/tools\">\n        <Switch>\n          <Route path=\"/randomWord\">\n            <RandomSentence />\n          </Route>\n          <Route path=\"/transform\">\n            <BaseCalculator />\n          </Route>\n          <Route path=\"/test\"></Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}